// <auto-generated />
using System;
using Hrms_api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hrms_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240417060014_hocce")]
    partial class hocce
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hrms_api.Data.Acgroup", b =>
                {
                    b.Property<short>("GroupId")
                        .HasColumnType("smallint")
                        .HasColumnName("GroupID");

                    b.Property<bool>("Holidayvaild")
                        .HasColumnType("bit")
                        .HasColumnName("holidayvaild");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<short?>("TimeZone1")
                        .HasColumnType("smallint");

                    b.Property<short?>("TimeZone2")
                        .HasColumnType("smallint");

                    b.Property<short?>("TimeZone3")
                        .HasColumnType("smallint");

                    b.Property<int?>("Verifystyle")
                        .HasColumnType("int")
                        .HasColumnName("verifystyle");

                    b.ToTable("ACGroup", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.ActimeZone", b =>
                {
                    b.Property<DateTime?>("FriEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FriStart")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("MonEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("MonStart")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("SatEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SatStart")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SunEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SunStart")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThursEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThursStart")
                        .HasColumnType("datetime");

                    b.Property<short>("TimeZoneId")
                        .HasColumnType("smallint")
                        .HasColumnName("TimeZoneID");

                    b.Property<DateTime?>("TuesEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TuesStart")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("WedEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("WedStart")
                        .HasColumnType("datetime");

                    b.ToTable("ACTimeZones", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttAbsentNotificationAdminList", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("AdminId");

                    b.ToTable("AttAbsentNotificationAdminList", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttAbsentNotificationLog", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("LastWorkingDay")
                        .HasColumnType("date");

                    b.Property<bool?>("Seen")
                        .HasColumnType("bit")
                        .HasColumnName("seen");

                    b.HasKey("EmpId", "AdminId", "Date");

                    b.ToTable("AttAbsentNotification_Log", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttAbsentNotificationSetting", b =>
                {
                    b.Property<int?>("Days")
                        .HasColumnType("int");

                    b.Property<bool?>("NotificationStatus")
                        .HasColumnType("bit");

                    b.Property<string>("StatusCount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("AttAbsentNotificationSetting", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttBreakTime", b =>
                {
                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<string>("BreakId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BreakID");

                    b.Property<TimeOnly?>("BreakTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHoliday")
                        .HasColumnType("bit");

                    b.Property<bool?>("NextDay")
                        .HasColumnType("bit");

                    b.Property<int?>("Ordering")
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Sl");

                    b.ToTable("AttBreakTime", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttBreakTimeSchedule", b =>
                {
                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<short?>("Id")
                        .HasColumnType("smallint")
                        .HasColumnName("ID");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.ToTable("AttBreakTimeSchedule", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttBreakTimeWithShift", b =>
                {
                    b.Property<int?>("BrkId")
                        .HasColumnType("int")
                        .HasColumnName("BrkID");

                    b.Property<int?>("SftId")
                        .HasColumnType("int")
                        .HasColumnName("SftID");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<int?>("SpecialTimetableId")
                        .HasColumnType("int");

                    b.HasIndex("BrkId");

                    b.ToTable("AttBreakTimeWithShift", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttParam", b =>
                {
                    b.Property<string>("Paraname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PARANAME");

                    b.Property<string>("Paratype")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("PARATYPE");

                    b.Property<string>("Paravalue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PARAVALUE");

                    b.ToTable("AttParam", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttSpecialBreakTime", b =>
                {
                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<TimeOnly?>("BreakTime")
                        .HasColumnType("time");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DutyType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("NextDay")
                        .HasColumnType("bit");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Sl");

                    b.ToTable("AttSpecialBreakTime", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.Attendance", b =>
                {
                    b.Property<int?>("AbsentCount")
                        .HasColumnType("int");

                    b.Property<int?>("AbsentHisb")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("PresentCount")
                        .HasColumnType("int");

                    b.ToTable("Attendance", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttendanceLateDeduction", b =>
                {
                    b.Property<int>("Ldid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LDId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ldid"));

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateOnly?>("Entrydate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsDeduction")
                        .HasColumnType("bit");

                    b.Property<short?>("LateDays")
                        .HasColumnType("smallint");

                    b.Property<string>("LeaveName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<short?>("NoDeductionDays")
                        .HasColumnType("smallint");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Ldid");

                    b.ToTable("Attendance_LateDeduction", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttendanceMonthlyLogoutTimeAndOtsetting", b =>
                {
                    b.Property<bool?>("Chosen")
                        .HasColumnType("bit");

                    b.Property<int?>("DecreaseOvertime")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDecreaseOvertime")
                        .HasColumnType("bit");

                    b.Property<int?>("LogoutHour")
                        .HasColumnType("int");

                    b.Property<int?>("LogoutMin")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("MonthDate")
                        .HasColumnType("date");

                    b.Property<string>("MonthName")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int?>("NormallyOthour")
                        .HasColumnType("int")
                        .HasColumnName("NormallyOTHour");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.ToTable("Attendance_MonthlyLogoutTimeAndOTSetting", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttendanceOverTimeCounter", b =>
                {
                    b.Property<DateOnly?>("AttDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("OverTime")
                        .HasColumnType("int");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.ToTable("Attendance_OverTime_Counter", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttendanceStatus", b =>
                {
                    b.Property<string>("AttStatus")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("StateStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("Attendance_Status", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttendanceTransferMedium", b =>
                {
                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<DateOnly?>("AttDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("Hur")
                        .HasColumnType("smallint");

                    b.Property<short?>("Min")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sec")
                        .HasColumnType("smallint");

                    b.HasKey("Sl")
                        .HasName("PK_tblRecord");

                    b.ToTable("AttendanceTransferMedia");
                });

            modelBuilder.Entity("Hrms_api.Data.AttendanceWeekendInfo", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<long?>("MonthId")
                        .HasColumnType("bigint")
                        .HasColumnName("MonthID");

                    b.Property<string>("Reason")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<string>("Weekend")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)");

                    b.Property<DateOnly?>("WeekendDate")
                        .HasColumnType("date");

                    b.HasIndex("CompanyId");

                    b.HasIndex("MonthId");

                    b.ToTable("Attendance_WeekendInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttendanceWeekendInfo1", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<long?>("MonthId")
                        .HasColumnType("bigint")
                        .HasColumnName("MonthID");

                    b.Property<string>("Reason")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<string>("Weekend")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)");

                    b.Property<DateOnly?>("WeekendDate")
                        .HasColumnType("date");

                    b.HasIndex("CompanyId");

                    b.HasIndex("MonthId");

                    b.ToTable("Attendance_WeekendInfo1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.Checkexact", b =>
                {
                    b.Property<DateTime?>("Checktime")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKTIME");

                    b.Property<string>("Checktype")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("CHECKTYPE");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("DATE");

                    b.Property<int>("Exactid")
                        .HasColumnType("int")
                        .HasColumnName("EXACTID");

                    b.Property<short?>("Incount")
                        .HasColumnType("smallint")
                        .HasColumnName("INCOUNT");

                    b.Property<short?>("Isadd")
                        .HasColumnType("smallint")
                        .HasColumnName("ISADD");

                    b.Property<short?>("Iscount")
                        .HasColumnType("smallint")
                        .HasColumnName("ISCOUNT");

                    b.Property<short?>("Isdelete")
                        .HasColumnType("smallint")
                        .HasColumnName("ISDELETE");

                    b.Property<short?>("Ismodify")
                        .HasColumnType("smallint")
                        .HasColumnName("ISMODIFY");

                    b.Property<string>("Modifyby")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Temp-Supervisor")
                        .HasColumnName("MODIFYBY");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("USERID");

                    b.Property<string>("Yuyin")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("YUYIN");

                    b.ToTable("CHECKEXACT", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.Checkinout", b =>
                {
                    b.Property<DateTime>("Checktime")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKTIME");

                    b.Property<string>("Checktype")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("CHECKTYPE");

                    b.Property<string>("Memoinfo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Sensorid")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("SENSORID");

                    b.Property<string>("Sn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sn");

                    b.Property<short?>("UserExtFmt")
                        .HasColumnType("smallint");

                    b.Property<int>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("USERID");

                    b.Property<int?>("Verifycode")
                        .HasColumnType("int")
                        .HasColumnName("VERIFYCODE");

                    b.Property<string>("WorkCode")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.ToTable("CHECKINOUT", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.Department", b =>
                {
                    b.Property<short?>("Att")
                        .HasColumnType("smallint")
                        .HasColumnName("ATT");

                    b.Property<short?>("AutoSchPlan")
                        .HasColumnType("smallint");

                    b.Property<int>("DefaultSchId")
                        .HasColumnType("int");

                    b.Property<int>("Deptid")
                        .HasColumnType("int")
                        .HasColumnName("DEPTID");

                    b.Property<string>("Deptname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DEPTNAME");

                    b.Property<short?>("Holiday")
                        .HasColumnType("smallint");

                    b.Property<short?>("InLate")
                        .HasColumnType("smallint");

                    b.Property<short?>("InheritDeptRule")
                        .HasColumnType("smallint");

                    b.Property<short?>("InheritDeptSch")
                        .HasColumnType("smallint");

                    b.Property<short?>("InheritDeptSchClass")
                        .HasColumnType("smallint");

                    b.Property<short?>("InheritParentSch")
                        .HasColumnType("smallint");

                    b.Property<int?>("MinAutoSchInterval")
                        .HasColumnType("int");

                    b.Property<short?>("OutEarly")
                        .HasColumnType("smallint");

                    b.Property<short?>("OverTime")
                        .HasColumnType("smallint");

                    b.Property<short?>("RegisterOt")
                        .HasColumnType("smallint")
                        .HasColumnName("RegisterOT");

                    b.Property<int>("Supdeptid")
                        .HasColumnType("int")
                        .HasColumnName("SUPDEPTID");

                    b.ToTable("DEPARTMENTS", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.DeptUsedSch", b =>
                {
                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<int?>("SchId")
                        .HasColumnType("int");

                    b.ToTable("DeptUsedSchs");
                });

            modelBuilder.Entity("Hrms_api.Data.EarnleaveBalanceDetailsLog", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<int?>("EarnLeaveDays")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EarnLeaveLastDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<DateTime?>("EntryDatetime")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("GenerateDate")
                        .HasColumnType("date");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.ToTable("Earnleave_BalanceDetailsLog", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.EarnleaveBalanceDetailsLog1", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<int?>("EarnLeaveDays")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EarnLeaveLastDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<DateTime?>("EntryDatetime")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("GenerateDate")
                        .HasColumnType("date");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.ToTable("Earnleave_BalanceDetailsLog1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.EarnleaveMonthlyInfo", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<DateOnly>("Month")
                        .HasColumnType("date");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("EntryTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("NextMonthDays")
                        .HasColumnType("int");

                    b.Property<int?>("PreMonthDays")
                        .HasColumnType("int");

                    b.Property<int?>("PresentDays")
                        .HasColumnType("int");

                    b.HasKey("EmpId", "Month");

                    b.ToTable("Earnleave_MonthlyInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.EarnleaveMonthlyInfo1", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<DateOnly>("Month")
                        .HasColumnType("date");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("EntryTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("NextMonthDays")
                        .HasColumnType("int");

                    b.Property<int?>("PreMonthDays")
                        .HasColumnType("int");

                    b.Property<int?>("PresentDays")
                        .HasColumnType("int");

                    b.HasKey("EmpId", "Month");

                    b.ToTable("Earnleave_MonthlyInfo1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.EarnleaveReserved", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<DateTime?>("EntryDatetime")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("GenerateDate")
                        .HasColumnType("date");

                    b.Property<long?>("PaymentId")
                        .HasColumnType("bigint")
                        .HasColumnName("PaymentID");

                    b.Property<double?>("ReserveEeanLeaveDays")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("ReserveFor")
                        .HasColumnType("date");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.HasIndex("PaymentId");

                    b.ToTable("Earnleave_Reserved", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.EarnleaveReserved1", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<DateTime?>("EntryDatetime")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("GenerateDate")
                        .HasColumnType("date");

                    b.Property<long?>("PaymentId")
                        .HasColumnType("bigint")
                        .HasColumnName("PaymentID");

                    b.Property<double?>("ReserveEeanLeaveDays")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("ReserveFor")
                        .HasColumnType("date");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.HasIndex("PaymentId");

                    b.ToTable("Earnleave_Reserved1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.EarnleaveSetting", b =>
                {
                    b.Property<int?>("DurationDays")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("ElstartDate")
                        .HasColumnType("date")
                        .HasColumnName("ELStartDate");

                    b.Property<string>("PaymentOn")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("WithdrawablePer")
                        .HasColumnType("int");

                    b.ToTable("Earnleave_Setting", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.EarnleaveSetting1", b =>
                {
                    b.Property<int?>("DurationDays")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("ElstartDate")
                        .HasColumnType("date")
                        .HasColumnName("ELStartDate");

                    b.Property<string>("PaymentOn")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("WithdrawablePer")
                        .HasColumnType("int");

                    b.ToTable("Earnleave_Setting1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.FaceTemp", b =>
                {
                    b.Property<int?>("Activetime")
                        .HasColumnType("int")
                        .HasColumnName("ACTIVETIME");

                    b.Property<int?>("Faceid")
                        .HasColumnType("int")
                        .HasColumnName("FACEID");

                    b.Property<int?>("Pin")
                        .HasColumnType("int")
                        .HasColumnName("pin");

                    b.Property<int?>("Reserve")
                        .HasColumnType("int")
                        .HasColumnName("RESERVE");

                    b.Property<int?>("Size")
                        .HasColumnType("int")
                        .HasColumnName("SIZE");

                    b.Property<byte[]>("Template")
                        .HasColumnType("image")
                        .HasColumnName("TEMPLATE");

                    b.Property<int>("Templateid")
                        .HasColumnType("int")
                        .HasColumnName("TEMPLATEID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("Userno")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("USERNO");

                    b.Property<int?>("Valid")
                        .HasColumnType("int")
                        .HasColumnName("VALID");

                    b.Property<int?>("Vfcount")
                        .HasColumnType("int")
                        .HasColumnName("VFCOUNT");

                    b.ToTable("FaceTemp", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdAdvanceStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("StatusId");

                    b.ToTable("HRD_AdvanceStatus", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdAllownceSetting", b =>
                {
                    b.Property<int?>("AlCalId")
                        .HasColumnType("int");

                    b.Property<short>("AllownceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("AllownceId"));

                    b.Property<double?>("BasicAllowance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("ConvenceAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime?>("EntryDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double?>("FoodAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("HouseRent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("MedicalAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("OthersAllowance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("Pfallowance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("PFAllowance");

                    b.Property<double?>("StampDeduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("TechnicalAllowance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.ToTable("HRD_AllownceSetting", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdAttendanceBonu", b =>
                {
                    b.Property<double?>("AttBonus")
                        .HasColumnType("float");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("CompanyID");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EmpTypeID");

                    b.ToTable("HRD_AttendanceBonus", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdBankInfo", b =>
                {
                    b.Property<short>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("BankId"));

                    b.Property<string>("BankName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("BankId");

                    b.ToTable("HRD_BankInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdBdtnote", b =>
                {
                    b.Property<bool?>("Chosen")
                        .HasColumnType("bit");

                    b.Property<int?>("Note")
                        .HasColumnType("int");

                    b.Property<short>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Sl"));

                    b.ToTable("HRD_BDTNote", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdBranchType", b =>
                {
                    b.Property<bool?>("HasBranch")
                        .HasColumnType("bit");

                    b.ToTable("HRD_BranchType", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdBusinessType", b =>
                {
                    b.Property<short>("Bid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("BId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Bid"));

                    b.Property<string>("BtypeName")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("BTypeName");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Bid");

                    b.HasIndex(new[] { "BtypeName" }, "businessTypeNameForUnique")
                        .IsUnique()
                        .HasFilter("[BTypeName] IS NOT NULL");

                    b.ToTable("HRD_BusinessType", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdCompanyInfo", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("AttMachineName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<short?>("BusinessType")
                        .HasColumnType("smallint");

                    b.Property<short?>("CardNoDigits")
                        .HasColumnType("smallint");

                    b.Property<bool?>("CardNoType")
                        .HasColumnType("bit");

                    b.Property<string>("Comments")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyLogo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("CompanyType")
                        .HasColumnType("bit");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DefaultCurrency")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Fax")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<short?>("FlatCode")
                        .HasColumnType("smallint");

                    b.Property<string>("HeadOfficeId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<bool?>("IsLeaveAuthority")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOdauthority")
                        .HasColumnType("bit")
                        .HasColumnName("IsODAuthority");

                    b.Property<bool?>("MultipleBranch")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("PfcountDate")
                        .HasColumnType("date");

                    b.Property<string>("ShortName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("StartCardNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Weekend")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("CompanyId");

                    b.ToTable("HRD_CompanyInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdCompanyType", b =>
                {
                    b.Property<string>("ComType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("ComTypeId")
                        .HasColumnType("bit");

                    b.ToTable("HRD_CompanyType", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdDepartment", b =>
                {
                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("DptStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool?>("IsDelivery")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHalfOt")
                        .HasColumnType("bit")
                        .HasColumnName("IsHalfOT");

                    b.Property<short>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Sl"));

                    b.HasKey("DptId");

                    b.ToTable("HRD_Department", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdDesignation", b =>
                {
                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DsgShortName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("DsgStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<double?>("HouseRentPersent")
                        .HasColumnType("float")
                        .HasColumnName("HouseRent_Persent");

                    b.Property<double?>("Medical")
                        .HasColumnType("float");

                    b.Property<int?>("Ordering")
                        .HasColumnType("int");

                    b.Property<double?>("PfPersent")
                        .HasColumnType("float")
                        .HasColumnName("PF_Persent");

                    b.Property<short>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Sl"));

                    b.HasKey("DsgId");

                    b.HasIndex("DptId");

                    b.ToTable("HRD_Designation", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdDistrict", b =>
                {
                    b.Property<int>("DstId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DstId"));

                    b.Property<string>("Division")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DstBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("DstId");

                    b.HasIndex(new[] { "DstName" }, "DistrictNameForUnique")
                        .IsUnique()
                        .HasFilter("[DstName] IS NOT NULL");

                    b.ToTable("HRD_District", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdEmpStatus", b =>
                {
                    b.Property<string>("EmpStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("EmpStatus");

                    b.ToTable("HRD_EmpStatus", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdEmployeeType", b =>
                {
                    b.Property<int>("EmpTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpTypeId"));

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("EmpTypeBn")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("EmpTypeId");

                    b.ToTable("HRD_EmployeeType", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdFloor", b =>
                {
                    b.Property<short>("Fid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("FId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Fid"));

                    b.Property<string>("Fname")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("FName");

                    b.Property<string>("FnameBn")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FNameBn");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Fid");

                    b.ToTable("HRD_Floor", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdGrade", b =>
                {
                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GrdId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GrdNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("GrdStatus")
                        .HasColumnType("bit");

                    b.Property<short>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Sl"));

                    b.HasKey("GrdName")
                        .HasName("PK_HRD_Grade_1");

                    b.ToTable("HRD_Grade", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdGroup", b =>
                {
                    b.Property<short>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Gid"));

                    b.Property<string>("CompanyId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("GName");

                    b.Property<string>("GnameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("GNameBn");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Gid");

                    b.ToTable("HRD_Group", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdManpowerStatus", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("Female")
                        .HasColumnType("smallint");

                    b.Property<short?>("Male")
                        .HasColumnType("smallint");

                    b.ToTable("HRD_ManpowerStatus", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdMonthNameBangla", b =>
                {
                    b.Property<string>("MonthId")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("MonthName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToTable("HRD_MonthNameBangla", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdOthersSetting", b =>
                {
                    b.Property<string>("AcceptableMinuteasOt")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("AcceptableMinuteasOT");

                    b.Property<string>("BreakBeforeStartOtasMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("BreakBeforeStartOTAsMin");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<int?>("LeaveEntryValidateDays")
                        .HasColumnType("int");

                    b.Property<string>("MinOverTimeHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("MinOverTimeMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("MinWorkingHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("MinWorkingMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("MinimumCompletedDaysForLv")
                        .HasColumnType("int");

                    b.Property<double?>("NightBillTk")
                        .HasColumnType("float");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<bool?>("StaffHolidayCount")
                        .HasColumnType("bit");

                    b.Property<string>("StaffHolidayTotalHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("StaffHolidayTotalMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("StaffNightBillHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("StaffNightBillMni")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("StaffTiffinHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("StaffTiffinMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<double?>("StaffTiffinTaka")
                        .HasColumnType("float");

                    b.Property<string>("WorkerNightBillHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("WorkerNightBillMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("WorkerTiffinHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("WorkerTiffinMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<double?>("WorkerTiffinTaka")
                        .HasColumnType("float");

                    b.ToTable("HRD_OthersSetting", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdPunishmentType", b =>
                {
                    b.Property<string>("PtId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PtName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PtId");

                    b.ToTable("HRD_PunishmentType", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdQualification", b =>
                {
                    b.Property<short>("Qid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("QId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Qid"));

                    b.Property<string>("Qname")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("QName");

                    b.Property<string>("QnameBn")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("QNameBn");

                    b.HasKey("Qid");

                    b.ToTable("HRD_Qualification", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdReligion", b =>
                {
                    b.Property<string>("Rname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RName");

                    b.Property<short>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("RId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Rid"));

                    b.Property<string>("RnameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RNameBn");

                    b.HasKey("Rname")
                        .HasName("PK_HRD_Religion_1");

                    b.ToTable("HRD_Religion", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdSheet", b =>
                {
                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Sheet")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SheetTitle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("HRD_Sheets", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdShift", b =>
                {
                    b.Property<short>("SftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("SftId"));

                    b.Property<short?>("AcceptableTimeAsOt")
                        .HasColumnType("smallint")
                        .HasColumnName("AcceptableTimeAsOT");

                    b.Property<TimeOnly?>("BreakEndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("BreakStartTime")
                        .HasColumnType("time");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<TimeOnly?>("EndPunchCountTime")
                        .HasColumnType("time");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInitial")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNight")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNightShiftForReport")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<short?>("SftAcceptableLate")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("SftEffectiveDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("SftEndTime")
                        .HasColumnType("time");

                    b.Property<string>("SftEndTimeIndicator")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SftNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("SftOverTime")
                        .HasColumnType("bit");

                    b.Property<TimeOnly?>("SftStartTime")
                        .HasColumnType("time");

                    b.Property<string>("SftStartTimeIndicator")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<TimeOnly?>("StartPunchCountTime")
                        .HasColumnType("time");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("SftId");

                    b.ToTable("HRD_Shift", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdShiftDateLog", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("SftEndTime")
                        .HasColumnType("time");

                    b.Property<int?>("SftId")
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("SftStartTime")
                        .HasColumnType("time");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.ToTable("HRD_Shift_DateLog", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdSignaturesOfSheet", b =>
                {
                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("Ordering")
                        .HasColumnType("int");

                    b.Property<string>("Sheet")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Signature")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.ToTable("HRD_SignaturesOfSheets", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdSpecialTimetable", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("EndPunchCountTime")
                        .HasColumnType("time");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Purpose")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<short?>("SftAcceptableLate")
                        .HasColumnType("smallint");

                    b.Property<TimeOnly?>("SftEndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("SftStartTime")
                        .HasColumnType("time");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("StartPunchCountTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.ToTable("HRD_SpecialTimetable", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdSpecialTimetableOld", b =>
                {
                    b.Property<short?>("AcceptableTimeAsOt")
                        .HasColumnType("smallint")
                        .HasColumnName("AcceptableTimeAsOT");

                    b.Property<TimeOnly?>("BreakEndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("BreakStartTime")
                        .HasColumnType("time");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("EndPunchCountTime")
                        .HasColumnType("time");

                    b.Property<bool?>("IsNight")
                        .HasColumnType("bit");

                    b.Property<short?>("SftAcceptableLate")
                        .HasColumnType("smallint");

                    b.Property<TimeOnly?>("SftEndTime")
                        .HasColumnType("time");

                    b.Property<string>("SftEndTimeIndicator")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<bool?>("SftOverTime")
                        .HasColumnType("bit");

                    b.Property<TimeOnly?>("SftStartTime")
                        .HasColumnType("time");

                    b.Property<string>("SftStartTimeIndicator")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("StartPunchCountTime")
                        .HasColumnType("time");

                    b.ToTable("HRD_SpecialTimetable_old", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdSubDepartmentInfo", b =>
                {
                    b.Property<bool>("HasSubDepartment")
                        .HasColumnType("bit");

                    b.ToTable("HRD_SubDepartmentInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdWeekendSetting", b =>
                {
                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Friday")
                        .HasColumnType("bit");

                    b.Property<bool?>("Monday")
                        .HasColumnType("bit");

                    b.Property<bool?>("Saturday")
                        .HasColumnType("bit");

                    b.Property<bool?>("Sunday")
                        .HasColumnType("bit");

                    b.Property<bool?>("Thursday")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<bool?>("Wednesday")
                        .HasColumnType("bit");

                    b.ToTable("HRD_WeekendSettings", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.HrdthanaInfo", b =>
                {
                    b.Property<int>("ThaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ThaId"));

                    b.Property<int>("DstId")
                        .HasColumnType("int");

                    b.Property<string>("ThaName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ThaNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ThaId");

                    b.HasIndex("DstId");

                    b.HasIndex(new[] { "ThaName" }, "ThanaNameForUnique")
                        .IsUnique()
                        .HasFilter("[ThaName] IS NOT NULL");

                    b.ToTable("HRDThanaInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.JobCardActual", b =>
                {
                    b.Property<DateTime?>("Attdate")
                        .HasColumnType("datetime")
                        .HasColumnName("ATTDate");

                    b.Property<string>("Attstatus")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ATTStatus");

                    b.Property<string>("Dname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DName");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InHour")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("InMin")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("InSec")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("LateBy")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("LnCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MonthName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OutHour")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("OutMin")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("OutSec")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<double?>("OverTime")
                        .HasColumnType("float");

                    b.Property<string>("SftName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<string>("StateStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("StayTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable("JobCardActual", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveApplyDate", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("Lacode")
                        .HasColumnType("bigint")
                        .HasColumnName("LACode");

                    b.Property<int>("LvAppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Lv_app_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LvAppId"));

                    b.Property<DateOnly?>("LvDate")
                        .HasColumnType("date")
                        .HasColumnName("Lv_date");

                    b.ToTable("Leave_ApplyDate", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveApprovalLog", b =>
                {
                    b.Property<short?>("Approval")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("Lacode")
                        .HasColumnType("bigint")
                        .HasColumnName("LACode");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.ToTable("Leave_ApprovalLog", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveDeptWiseWeekend", b =>
                {
                    b.Property<int>("Wdid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WDid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Wdid"));

                    b.Property<int?>("Days")
                        .HasColumnType("int");

                    b.Property<int?>("Did")
                        .HasColumnType("int");

                    b.Property<int?>("DptId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EffectiveDateFrom")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EffectiveDateTo")
                        .HasColumnType("date");

                    b.HasKey("Wdid");

                    b.ToTable("Leave_DeptWiseWeekend", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveLastEarnLeaveDateLog", b =>
                {
                    b.Property<DateOnly?>("EarnLeaveDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable("Leave_LastEarnLeaveDateLog", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveLeaveApplication", b =>
                {
                    b.Property<DateOnly>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("ApplyDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsProcessessed")
                        .HasColumnType("bit");

                    b.Property<long>("Lacode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("LACode");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Lacode"));

                    b.Property<string>("LeaveFormSlno")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("LeaveFormSLNo");

                    b.Property<int>("LeaveId")
                        .HasColumnType("int");

                    b.Property<short?>("LeaveProcessingOrder")
                        .HasColumnType("smallint");

                    b.Property<string>("LvAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LvContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("PrasaberaDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("PregnantDate")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("StateStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int?>("WeekHolydayNo")
                        .HasColumnType("int");

                    b.HasKey("FromDate", "EmpId")
                        .HasName("PK_Leave_LeaveApplication_1");

                    b.HasIndex("EmpTypeId");

                    b.HasIndex("LeaveId");

                    b.HasIndex(new[] { "Lacode" }, "IX_Leave_LeaveApplication")
                        .IsUnique();

                    b.ToTable("Leave_LeaveApplication", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveLeaveApplicationDetail", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("Lacode")
                        .HasColumnType("bigint")
                        .HasColumnName("LACode");

                    b.Property<DateOnly?>("LeaveDate")
                        .HasColumnType("date");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<bool?>("Used")
                        .HasColumnType("bit");

                    b.HasIndex("Lacode");

                    b.ToTable("Leave_LeaveApplicationDetails", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveLeaveApplicationLog", b =>
                {
                    b.Property<DateOnly?>("ApplyDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ApprovedRejected")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FromDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsProcessessed")
                        .HasColumnType("bit");

                    b.Property<long>("Lacode")
                        .HasColumnType("bigint")
                        .HasColumnName("LACode");

                    b.Property<string>("LeaveFormSlno")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("LeaveFormSLNo");

                    b.Property<int>("LeaveId")
                        .HasColumnType("int");

                    b.Property<short?>("LeaveProcessingOrder")
                        .HasColumnType("smallint");

                    b.Property<string>("LvAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LvContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("PrasaberaDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("PregnantDate")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("StateStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int?>("WeekHolydayNo")
                        .HasColumnType("int");

                    b.ToTable("Leave_LeaveApplication_Log", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveLeaveType", b =>
                {
                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LeaveName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LeaveNameId")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("LeaveNameID");

                    b.Property<string>("LeaveShortName")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.ToTable("Leave_LeaveType", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveMaterintyVoucher", b =>
                {
                    b.Property<string>("MlvoucherNo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("MLVoucherNo");

                    b.Property<double?>("AverageWages")
                        .HasColumnType("float");

                    b.Property<short?>("DptId")
                        .HasColumnType("smallint");

                    b.Property<short?>("DsgId")
                        .HasColumnType("smallint");

                    b.Property<string>("EmpId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("FirstAcceptDate")
                        .HasColumnType("date");

                    b.Property<bool?>("FirstInstallmentSignature")
                        .HasColumnType("bit");

                    b.Property<double?>("InstallmentAmount")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("SecondAcceptDate")
                        .HasColumnType("date");

                    b.Property<bool?>("SecondInstallmentSignature")
                        .HasColumnType("bit");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<double?>("ThreeMonthsTotalPaymentWithBonus")
                        .HasColumnType("float");

                    b.Property<int?>("TotalPresentDays")
                        .HasColumnType("int");

                    b.HasKey("MlvoucherNo");

                    b.ToTable("Leave_MaterintyVoucher", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveMaterintyVoucherDetail", b =>
                {
                    b.Property<string>("MlvoucherNo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("MLVoucherNo");

                    b.Property<string>("MonthId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("PresentDays")
                        .HasColumnType("int");

                    b.Property<double?>("TakenBonus")
                        .HasColumnType("float");

                    b.Property<double?>("TakenWages")
                        .HasColumnType("float");

                    b.HasIndex("MlvoucherNo");

                    b.ToTable("Leave_MaterintyVoucher_Details", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveMaternityLeavePayment", b =>
                {
                    b.Property<int>("MateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MateId"));

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PaymentAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Rate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsedLeave")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("VoucherDate")
                        .HasColumnType("date");

                    b.HasKey("MateId");

                    b.ToTable("Leave_MaternityLeavePayment", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveShortLeave", b =>
                {
                    b.Property<int>("SrLvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SrLvID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SrLvId"));

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<TimeOnly?>("FromTime")
                        .HasColumnType("time");

                    b.Property<string>("LeaveId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LeaveID");

                    b.Property<short?>("LeaveProcessingOrder")
                        .HasColumnType("smallint");

                    b.Property<DateOnly>("LvDate")
                        .HasColumnType("date");

                    b.Property<short?>("LvStatus")
                        .HasColumnType("smallint");

                    b.Property<TimeOnly>("LvTime")
                        .HasColumnType("time");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<TimeOnly?>("ToTime")
                        .HasColumnType("time");

                    b.HasKey("SrLvId");

                    b.ToTable("Leave_ShortLeave", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveSignatureOrder", b =>
                {
                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("Sl")
                        .HasColumnType("smallint")
                        .HasColumnName("SL");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.ToTable("Leave_SignatureOrder", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveWeekend", b =>
                {
                    b.Property<int>("Wid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Wid"));

                    b.Property<int?>("Days")
                        .HasColumnType("int");

                    b.Property<int?>("Did")
                        .HasColumnType("int")
                        .HasColumnName("DId");

                    b.Property<int?>("DptId")
                        .HasColumnType("int");

                    b.Property<int?>("DsgId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EffectiveDateFrom")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EffectiveDateTo")
                        .HasColumnType("date");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Wid");

                    b.ToTable("Leave_Weekend", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveYearlyEarnLeaveGeneration", b =>
                {
                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DptId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateOnly?>("EarnLeaveEndYear")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EarnLeavePerviousStartYear")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EldateForReport")
                        .HasColumnType("date")
                        .HasColumnName("ELDateForReport");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("GenerateDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsSeperate")
                        .HasColumnType("bit");

                    b.Property<double?>("NetTotal")
                        .HasColumnType("float");

                    b.Property<int?>("PayableDays")
                        .HasColumnType("int");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<short?>("SpendDays")
                        .HasColumnType("smallint");

                    b.Property<int?>("WorkingDays")
                        .HasColumnType("int");

                    b.ToTable("Leave_YearlyEarnLeaveGeneration", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.Machine", b =>
                {
                    b.Property<int?>("Baudrate")
                        .HasColumnType("int");

                    b.Property<string>("CommPassword")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("ConnectType")
                        .HasColumnType("int");

                    b.Property<short?>("DateFormat")
                        .HasColumnType("smallint");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<short?>("Fingercount")
                        .HasColumnType("smallint")
                        .HasColumnName("fingercount");

                    b.Property<string>("FirmwareVersion")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<short?>("Idle")
                        .HasColumnType("smallint");

                    b.Property<short?>("InOutRecordWarn")
                        .HasColumnType("smallint");

                    b.Property<string>("Ip")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IP");

                    b.Property<string>("IsAndroid")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("IsHost")
                        .HasColumnType("bit");

                    b.Property<int?>("IsIfChangeConfigServer2")
                        .HasColumnType("int");

                    b.Property<short?>("LockControl")
                        .HasColumnType("smallint");

                    b.Property<string>("MachineAlias")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MachineNumber")
                        .HasColumnType("int");

                    b.Property<short?>("Managercount")
                        .HasColumnType("smallint")
                        .HasColumnName("managercount");

                    b.Property<string>("PhotoStamp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Port")
                        .HasColumnType("int");

                    b.Property<int?>("ProduceKind")
                        .HasColumnType("int");

                    b.Property<string>("ProductType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short?>("Purpose")
                        .HasColumnType("smallint");

                    b.Property<int?>("Pushver")
                        .HasColumnType("int")
                        .HasColumnName("pushver");

                    b.Property<short?>("SecretCount")
                        .HasColumnType("smallint");

                    b.Property<int?>("SerialPort")
                        .HasColumnType("int");

                    b.Property<string>("Sn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sn");

                    b.Property<short?>("Uilanguage")
                        .HasColumnType("smallint")
                        .HasColumnName("UILanguage");

                    b.Property<short?>("Usercount")
                        .HasColumnType("smallint")
                        .HasColumnName("usercount");

                    b.Property<short?>("Voice")
                        .HasColumnType("smallint");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("Hrms_api.Data.MailChatInfo", b =>
                {
                    b.Property<DateOnly?>("Cdate")
                        .HasColumnType("date")
                        .HasColumnName("CDate");

                    b.Property<long>("Cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Cid"));

                    b.Property<TimeOnly?>("Ctime")
                        .HasColumnType("time")
                        .HasColumnName("CTime");

                    b.Property<long?>("RxUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<long?>("TxUserId")
                        .HasColumnType("bigint");

                    b.ToTable("Mail_ChatInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.MailComplainInfo", b =>
                {
                    b.Property<DateOnly?>("Cdate")
                        .HasColumnType("date")
                        .HasColumnName("CDate");

                    b.Property<long>("ComId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ComId"));

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<TimeOnly?>("Ctime")
                        .HasColumnType("time")
                        .HasColumnName("CTime");

                    b.Property<string>("Details")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleType")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)");

                    b.Property<int?>("RxUserId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.ToTable("Mail_Complain_Info", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.MailComposeMailInfo", b =>
                {
                    b.Property<DateOnly?>("Cdate")
                        .HasColumnType("date")
                        .HasColumnName("CDate");

                    b.Property<long>("ComposeMailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ComposeMail_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ComposeMailId"));

                    b.Property<TimeOnly?>("Ctime")
                        .HasColumnType("time")
                        .HasColumnName("CTime");

                    b.Property<string>("Details")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("RxCompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("RxUserId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TxCompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable("Mail_ComposeMail_Info", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.ModulePageInfo", b =>
                {
                    b.Property<short?>("ModuleId")
                        .HasColumnType("smallint");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ModulePageName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<byte?>("Ordering")
                        .HasColumnType("tinyint");

                    b.Property<string>("PageTitle")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.ToTable("ModulePageInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.MonthlyAttendance", b =>
                {
                    b.Property<int?>("Ad")
                        .HasColumnType("int")
                        .HasColumnName("AD");

                    b.Property<int?>("Cl")
                        .HasColumnType("int")
                        .HasColumnName("CL");

                    b.Property<string>("Day1")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day1");

                    b.Property<string>("Day10")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day10");

                    b.Property<string>("Day11")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day11");

                    b.Property<string>("Day12")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day12");

                    b.Property<string>("Day13")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day13");

                    b.Property<string>("Day14")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day14");

                    b.Property<string>("Day15")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day15");

                    b.Property<string>("Day16")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day16");

                    b.Property<string>("Day17")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day17");

                    b.Property<string>("Day18")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day18");

                    b.Property<string>("Day19")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day19");

                    b.Property<string>("Day2")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day2");

                    b.Property<string>("Day20")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day20");

                    b.Property<string>("Day21")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day21");

                    b.Property<string>("Day22")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day22");

                    b.Property<string>("Day23")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day23");

                    b.Property<string>("Day24")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day24");

                    b.Property<string>("Day25")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day25");

                    b.Property<string>("Day26")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day26");

                    b.Property<string>("Day27")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day27");

                    b.Property<string>("Day28")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day28");

                    b.Property<string>("Day29")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day29");

                    b.Property<string>("Day3")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day3");

                    b.Property<string>("Day30")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day30");

                    b.Property<string>("Day31")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day31");

                    b.Property<string>("Day4")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day4");

                    b.Property<string>("Day5")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day5");

                    b.Property<string>("Day6")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day6");

                    b.Property<string>("Day7")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day7");

                    b.Property<string>("Day8")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day8");

                    b.Property<string>("Day9")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day9");

                    b.Property<int?>("El")
                        .HasColumnType("int")
                        .HasColumnName("EL");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Holiday")
                        .HasColumnType("int");

                    b.Property<int?>("Pd")
                        .HasColumnType("int")
                        .HasColumnName("PD");

                    b.Property<int?>("Sl")
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    b.Property<int?>("Totaldays")
                        .HasColumnType("int");

                    b.Property<int?>("Weckend")
                        .HasColumnType("int");

                    b.ToTable("MonthlyAttendance", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.MonthlyManpower", b =>
                {
                    b.Property<string>("MonthName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Nfemale")
                        .HasColumnType("int")
                        .HasColumnName("NFemale");

                    b.Property<int?>("Nmale")
                        .HasColumnType("int")
                        .HasColumnName("NMale");

                    b.Property<int?>("Pfemale")
                        .HasColumnType("int")
                        .HasColumnName("PFemale");

                    b.Property<int?>("Pmale")
                        .HasColumnType("int")
                        .HasColumnName("PMale");

                    b.Property<int?>("PtotalManpower")
                        .HasColumnType("int")
                        .HasColumnName("PTotalManpower");

                    b.Property<int?>("Rfemale")
                        .HasColumnType("int")
                        .HasColumnName("RFemale");

                    b.Property<int?>("Rmale")
                        .HasColumnType("int")
                        .HasColumnName("RMale");

                    b.Property<int?>("Sfemale")
                        .HasColumnType("int")
                        .HasColumnName("SFemale");

                    b.Property<int?>("Smale")
                        .HasColumnType("int")
                        .HasColumnName("SMale");

                    b.Property<int?>("TotalManpower")
                        .HasColumnType("int");

                    b.ToTable("MonthlyManpower", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.MonthlyOt", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Ot1")
                        .HasColumnType("float")
                        .HasColumnName("OT1");

                    b.Property<double?>("Ot2")
                        .HasColumnType("float")
                        .HasColumnName("OT2");

                    b.ToTable("MonthlyOT", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.NumRun", b =>
                {
                    b.Property<short?>("Cyle")
                        .HasColumnType("smallint")
                        .HasColumnName("CYLE");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("datetime")
                        .HasColumnName("ENDDATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NAME");

                    b.Property<int>("NumRunid")
                        .HasColumnType("int")
                        .HasColumnName("NUM_RUNID");

                    b.Property<int?>("Oldid")
                        .HasColumnType("int")
                        .HasColumnName("OLDID");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("datetime")
                        .HasColumnName("STARTDATE");

                    b.Property<short?>("Units")
                        .HasColumnType("smallint")
                        .HasColumnName("UNITS");

                    b.ToTable("NUM_RUN", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.NumRunDeil", b =>
                {
                    b.Property<short?>("Edays")
                        .HasColumnType("smallint")
                        .HasColumnName("EDAYS");

                    b.Property<DateTime?>("Endtime")
                        .HasColumnType("datetime")
                        .HasColumnName("ENDTIME");

                    b.Property<short>("NumRunid")
                        .HasColumnType("smallint")
                        .HasColumnName("NUM_RUNID");

                    b.Property<int?>("OverTime")
                        .HasColumnType("int");

                    b.Property<int?>("Schclassid")
                        .HasColumnType("int")
                        .HasColumnName("SCHCLASSID");

                    b.Property<short>("Sdays")
                        .HasColumnType("smallint")
                        .HasColumnName("SDAYS");

                    b.Property<DateTime>("Starttime")
                        .HasColumnType("datetime")
                        .HasColumnName("STARTTIME");

                    b.ToTable("NUM_RUN_DEIL", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollAdvanceDetail", b =>
                {
                    b.Property<string>("AdvanceId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("InstallmentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("InstallmentMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("PaidStatus")
                        .HasColumnType("bit");

                    b.HasIndex("AdvanceId");

                    b.ToTable("Payroll_AdvanceDetails", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollAdvanceInfo", b =>
                {
                    b.Property<string>("AdvanceId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("AdvanceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("InstallmentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<short?>("InstallmentNo")
                        .HasColumnType("smallint");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("PaidInstallmentNo")
                        .HasColumnType("smallint");

                    b.Property<bool?>("PaidStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("SftId")
                        .HasColumnType("int");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<DateOnly?>("StartMonth")
                        .HasColumnType("date");

                    b.HasKey("AdvanceId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Payroll_AdvanceInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollAdvanceSetting", b =>
                {
                    b.Property<string>("AdvanceId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("InstallmentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<short?>("PaidInstallmentNo")
                        .HasColumnType("smallint");

                    b.Property<string>("PaidMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.HasIndex("AdvanceId");

                    b.ToTable("Payroll_AdvanceSetting", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollAllowanceCalculationSetting", b =>
                {
                    b.Property<int>("AlCalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlCalId"));

                    b.Property<byte?>("BasicAllowance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("CalculationType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<byte?>("ConvenceAllownce")
                        .HasColumnType("tinyint");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EntryDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("FoodAllownce")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("HouseRent")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MedicalAllownce")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OthersAllowance")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ProvidentFund")
                        .HasColumnType("tinyint");

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<byte?>("TechnicalAllowance")
                        .HasColumnType("tinyint");

                    b.HasKey("AlCalId")
                        .HasName("PK_AllowanceCalculationSetting");

                    b.ToTable("Payroll_AllowanceCalculationSetting", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollBonusMonthSetup", b =>
                {
                    b.Property<int?>("Bid")
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    b.Property<string>("BonusType")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<bool?>("Chosen")
                        .HasColumnType("bit");

                    b.Property<string>("EquivalentMonth")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("GenerateOn")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float");

                    b.Property<DateTime?>("SetupedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<string>("SlabType")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasIndex("Bid");

                    b.ToTable("Payroll_BonusMonthSetup", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollBonusMonthSetup1", b =>
                {
                    b.Property<int?>("Bid")
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    b.Property<string>("BonusType")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<bool?>("Chosen")
                        .HasColumnType("bit");

                    b.Property<string>("EquivalentMonth")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("GenerateOn")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float");

                    b.Property<DateTime?>("SetupedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<string>("SlabType")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasIndex("Bid");

                    b.ToTable("Payroll_BonusMonthSetup1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollBonusSetup", b =>
                {
                    b.Property<int>("Bid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bid"));

                    b.Property<string>("BonusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("CalculationDate")
                        .HasColumnType("date");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateOnly?>("ConfigDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<short?>("Rid")
                        .HasColumnType("smallint")
                        .HasColumnName("RId");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Bid");

                    b.HasIndex("CompanyId");

                    b.ToTable("Payroll_BonusSetup", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollBonusSetup1", b =>
                {
                    b.Property<int>("Bid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bid"));

                    b.Property<string>("BonusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("CalculationDate")
                        .HasColumnType("date");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateOnly?>("ConfigDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<short?>("Rid")
                        .HasColumnType("smallint")
                        .HasColumnName("RId");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Bid");

                    b.HasIndex("CompanyId");

                    b.ToTable("Payroll_BonusSetup1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollEarnLeavePaymentSheet", b =>
                {
                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("CurrentYearEarnLeaveDays")
                        .HasColumnType("int");

                    b.Property<string>("DptId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<short?>("EmpStatus")
                        .HasColumnType("smallint");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("GenerateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Gid")
                        .HasColumnType("int")
                        .HasColumnName("GId");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsSeparated")
                        .HasColumnType("bit");

                    b.Property<double?>("OneDaySalary")
                        .HasColumnType("float");

                    b.Property<double?>("PayableAmount")
                        .HasColumnType("float");

                    b.Property<short?>("PayableEarnLeaveDays")
                        .HasColumnType("smallint");

                    b.Property<int?>("PreviousYearEarnLeaveDays")
                        .HasColumnType("int");

                    b.Property<short?>("SepntEarnLeaveDays")
                        .HasColumnType("smallint");

                    b.Property<double?>("StampDeductions")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<double?>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<short?>("TotalEarnLeaveDays")
                        .HasColumnType("smallint");

                    b.Property<double?>("WithdrawableEarnLeaveDays")
                        .HasColumnType("float");

                    b.Property<int?>("WithdrawableEarnLeavePer")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("YearMonth")
                        .HasColumnType("date");

                    b.HasKey("Sl");

                    b.ToTable("Payroll_EarnLeavePaymentSheet", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollEarnLeavePaymentSheet1", b =>
                {
                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("CurrentYearEarnLeaveDays")
                        .HasColumnType("int");

                    b.Property<string>("DptId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<short?>("EmpStatus")
                        .HasColumnType("smallint");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("GenerateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Gid")
                        .HasColumnType("int")
                        .HasColumnName("GId");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsSeparated")
                        .HasColumnType("bit");

                    b.Property<double?>("OneDaySalary")
                        .HasColumnType("float");

                    b.Property<double?>("PayableAmount")
                        .HasColumnType("float");

                    b.Property<short?>("PayableEarnLeaveDays")
                        .HasColumnType("smallint");

                    b.Property<int?>("PreviousYearEarnLeaveDays")
                        .HasColumnType("int");

                    b.Property<short?>("SepntEarnLeaveDays")
                        .HasColumnType("smallint");

                    b.Property<double?>("StampDeductions")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<double?>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<short?>("TotalEarnLeaveDays")
                        .HasColumnType("smallint");

                    b.Property<double?>("WithdrawableEarnLeaveDays")
                        .HasColumnType("float");

                    b.Property<int?>("WithdrawableEarnLeavePer")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("YearMonth")
                        .HasColumnType("date");

                    b.HasKey("Sl");

                    b.ToTable("Payroll_EarnLeavePaymentSheet1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollHolidayAllowanceGenerate", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("Hdate")
                        .HasColumnType("date")
                        .HasColumnName("HDate");

                    b.Property<double?>("HolidayAllownce")
                        .HasColumnType("float");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.ToTable("Payroll_HolidayAllowanceGenerate", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollHolidayWeekendBill", b =>
                {
                    b.Property<DateOnly?>("AttDate")
                        .HasColumnType("date");

                    b.Property<string>("Did")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("DId");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("InHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("InMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("LnId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("OutHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("OutMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<string>("StayTime")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("TotalWorkHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("TotalWorkMin")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.ToTable("Payroll_HolidayWeekendBill", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollLoanDetail", b =>
                {
                    b.Property<long>("LoanDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("LoanDetailsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LoanDetailsId"));

                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("DeletedReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("LoanId")
                        .HasColumnType("bigint")
                        .HasColumnName("LoanID");

                    b.Property<DateOnly?>("LoanTakeDate")
                        .HasColumnType("date");

                    b.Property<double?>("ParticularAmount")
                        .HasColumnType("float");

                    b.Property<string>("ParticularRemarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("LoanDetailsId");

                    b.HasIndex("LoanId");

                    b.ToTable("Payroll_LoanDetails", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollLoanInfo", b =>
                {
                    b.Property<long>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("LoanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LoanId"));

                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DeductFrom")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("DeletedReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ExemptionReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double?>("InstallmentAmount")
                        .HasColumnType("float");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExemption")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<double?>("LoanAmount")
                        .HasColumnType("float");

                    b.Property<double?>("PaidAmount")
                        .HasColumnType("float");

                    b.Property<int?>("PaidInstallmentNo")
                        .HasColumnType("int");

                    b.Property<double?>("RefundAmount")
                        .HasColumnType("float");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("StatusDate")
                        .HasColumnType("date");

                    b.Property<string>("StatusNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusUpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("StatusUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("LoanId");

                    b.ToTable("Payroll_LoanInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollLoanMonthlySetup", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<DateOnly>("Month")
                        .HasColumnType("date");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("CompanyID");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<long?>("LoanId")
                        .HasColumnType("bigint")
                        .HasColumnName("LoanID");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.HasKey("EmpId", "Month");

                    b.ToTable("Payroll_LoanMonthlySetup", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollMonthlyNoteAmount", b =>
                {
                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("DptId")
                        .HasColumnType("int");

                    b.Property<string>("MonthName")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int?>("NoteName")
                        .HasColumnType("int");

                    b.Property<int?>("SftId")
                        .HasColumnType("int");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.ToTable("Payroll_MonthlyNoteAmount", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollMonthlySalarySheet", b =>
                {
                    b.Property<short?>("AbsentDay")
                        .HasColumnType("smallint");

                    b.Property<double?>("AbsentDeduction")
                        .HasColumnType("float");

                    b.Property<short?>("Activeday")
                        .HasColumnType("smallint");

                    b.Property<double?>("AdvanceDeduction")
                        .HasColumnType("float");

                    b.Property<short?>("AnnualLeave")
                        .HasColumnType("smallint");

                    b.Property<double?>("AttendanceBonus")
                        .HasColumnType("float");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<short?>("CasualLeave")
                        .HasColumnType("smallint");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("DaysInMonth")
                        .HasColumnType("smallint");

                    b.Property<double?>("DormitoryRent")
                        .HasColumnType("float");

                    b.Property<string>("DptId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("EmpNetGross")
                        .HasColumnType("float");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<int?>("EmpSeparationId")
                        .HasColumnType("int");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<double?>("ExtraOtamount")
                        .HasColumnType("float")
                        .HasColumnName("ExtraOTAmount");

                    b.Property<double?>("ExtraOthour")
                        .HasColumnType("float")
                        .HasColumnName("ExtraOTHour");

                    b.Property<short?>("FestivalHoliday")
                        .HasColumnType("smallint");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("GenerateDate")
                        .HasColumnType("date");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("HoliDayBillAmount")
                        .HasColumnType("float");

                    b.Property<double?>("HolidayTaka")
                        .HasColumnType("float");

                    b.Property<int?>("HolidayWorkingDays")
                        .HasColumnType("int");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<short?>("IsSeperationGeneration")
                        .HasColumnType("smallint");

                    b.Property<int?>("LateDays")
                        .HasColumnType("int");

                    b.Property<double?>("LateFine")
                        .HasColumnType("float");

                    b.Property<double?>("LoanDeduction")
                        .HasColumnType("float");

                    b.Property<double?>("LunchAllowance")
                        .HasColumnType("float");

                    b.Property<int?>("Lwp")
                        .HasColumnType("int")
                        .HasColumnName("LWP");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("NetPayable")
                        .HasColumnType("float");

                    b.Property<double?>("NetPayableWithAllOtamt")
                        .HasColumnType("float")
                        .HasColumnName("NetPayableWithAllOTAmt");

                    b.Property<short?>("NightBillDays")
                        .HasColumnType("smallint");

                    b.Property<double?>("NightbilAmount")
                        .HasColumnType("float");

                    b.Property<short?>("OfficialLeave")
                        .HasColumnType("smallint");

                    b.Property<double?>("OtamountForBuyer")
                        .HasColumnType("float")
                        .HasColumnName("OTAmountForBuyer");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("OthersDeduction")
                        .HasColumnType("float");

                    b.Property<short?>("OthersLeave")
                        .HasColumnType("smallint");

                    b.Property<double?>("OthersPay")
                        .HasColumnType("float");

                    b.Property<double?>("OthourForBuyer")
                        .HasColumnType("float")
                        .HasColumnName("OTHourForBuyer");

                    b.Property<double?>("Otrate")
                        .HasColumnType("float")
                        .HasColumnName("OTRate");

                    b.Property<string>("OverTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("OverTimeAmount")
                        .HasColumnType("float");

                    b.Property<double?>("Payable")
                        .HasColumnType("float");

                    b.Property<short?>("PayableDays")
                        .HasColumnType("smallint");

                    b.Property<short?>("PresentDay")
                        .HasColumnType("smallint");

                    b.Property<double?>("ProfitTax")
                        .HasColumnType("float");

                    b.Property<double?>("ProvidentFund")
                        .HasColumnType("float");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<short?>("ShortLeave")
                        .HasColumnType("smallint");

                    b.Property<short?>("SickLeave")
                        .HasColumnType("smallint");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<short?>("Stampdeduct")
                        .HasColumnType("smallint");

                    b.Property<double?>("TechnicalAllowance")
                        .HasColumnType("float");

                    b.Property<double?>("TiffinBillAmount")
                        .HasColumnType("float");

                    b.Property<int?>("TiffinDays")
                        .HasColumnType("int");

                    b.Property<double?>("TiffinTaka")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.Property<double?>("TotalOtamount")
                        .HasColumnType("float")
                        .HasColumnName("TotalOTAmount");

                    b.Property<string>("TotalOtherOverTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TotalOthour")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("TotalOTHour");

                    b.Property<string>("TotalOverTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("TotalSalary")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<short?>("WeekendHoliday")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("YearMonth")
                        .HasColumnType("date");

                    b.ToTable("Payroll_MonthlySalarySheet", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollMonthlySalarySheet1", b =>
                {
                    b.Property<short?>("AbsentDay")
                        .HasColumnType("smallint");

                    b.Property<double?>("AbsentDeduction")
                        .HasColumnType("float");

                    b.Property<short?>("Activeday")
                        .HasColumnType("smallint");

                    b.Property<double?>("AdvanceDeduction")
                        .HasColumnType("float");

                    b.Property<short?>("AnnualLeave")
                        .HasColumnType("smallint");

                    b.Property<double?>("AttendanceBonus")
                        .HasColumnType("float");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<short?>("CasualLeave")
                        .HasColumnType("smallint");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("DaysInMonth")
                        .HasColumnType("smallint");

                    b.Property<double?>("DormitoryRent")
                        .HasColumnType("float");

                    b.Property<string>("DptId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("EmpNetGross")
                        .HasColumnType("float");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<int?>("EmpSeparationId")
                        .HasColumnType("int");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<double?>("ExtraOtamount")
                        .HasColumnType("float")
                        .HasColumnName("ExtraOTAmount");

                    b.Property<double?>("ExtraOthour")
                        .HasColumnType("float")
                        .HasColumnName("ExtraOTHour");

                    b.Property<short?>("FestivalHoliday")
                        .HasColumnType("smallint");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("GenerateDate")
                        .HasColumnType("date");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("HoliDayBillAmount")
                        .HasColumnType("float");

                    b.Property<double?>("HolidayTaka")
                        .HasColumnType("float");

                    b.Property<int?>("HolidayWorkingDays")
                        .HasColumnType("int");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<short?>("IsSeperationGeneration")
                        .HasColumnType("smallint");

                    b.Property<int?>("LateDays")
                        .HasColumnType("int");

                    b.Property<double?>("LateFine")
                        .HasColumnType("float");

                    b.Property<double?>("LoanDeduction")
                        .HasColumnType("float");

                    b.Property<double?>("LunchAllowance")
                        .HasColumnType("float");

                    b.Property<int?>("Lwp")
                        .HasColumnType("int")
                        .HasColumnName("LWP");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("NetPayable")
                        .HasColumnType("float");

                    b.Property<double?>("NetPayableWithAllOtamt")
                        .HasColumnType("float")
                        .HasColumnName("NetPayableWithAllOTAmt");

                    b.Property<short?>("NightBillDays")
                        .HasColumnType("smallint");

                    b.Property<double?>("NightbilAmount")
                        .HasColumnType("float");

                    b.Property<short?>("OfficialLeave")
                        .HasColumnType("smallint");

                    b.Property<double?>("OtamountForBuyer")
                        .HasColumnType("float")
                        .HasColumnName("OTAmountForBuyer");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("OthersDeduction")
                        .HasColumnType("float");

                    b.Property<short?>("OthersLeave")
                        .HasColumnType("smallint");

                    b.Property<double?>("OthersPay")
                        .HasColumnType("float");

                    b.Property<double?>("OthourForBuyer")
                        .HasColumnType("float")
                        .HasColumnName("OTHourForBuyer");

                    b.Property<double?>("Otrate")
                        .HasColumnType("float")
                        .HasColumnName("OTRate");

                    b.Property<double?>("Payable")
                        .HasColumnType("float");

                    b.Property<short?>("PayableDays")
                        .HasColumnType("smallint");

                    b.Property<short?>("PresentDay")
                        .HasColumnType("smallint");

                    b.Property<double?>("ProfitTax")
                        .HasColumnType("float");

                    b.Property<double?>("ProvidentFund")
                        .HasColumnType("float");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<short?>("ShortLeave")
                        .HasColumnType("smallint");

                    b.Property<short?>("SickLeave")
                        .HasColumnType("smallint");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<short?>("Stampdeduct")
                        .HasColumnType("smallint");

                    b.Property<double?>("TechnicalAllowance")
                        .HasColumnType("float");

                    b.Property<double?>("TiffinBillAmount")
                        .HasColumnType("float");

                    b.Property<int?>("TiffinDays")
                        .HasColumnType("int");

                    b.Property<double?>("TiffinTaka")
                        .HasColumnType("float");

                    b.Property<double?>("TotalOtamount")
                        .HasColumnType("float")
                        .HasColumnName("TotalOTAmount");

                    b.Property<string>("TotalOtherOverTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TotalOthour")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("TotalOTHour");

                    b.Property<string>("TotalOverTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("TotalSalary")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<short?>("WeekendHoliday")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("YearMonth")
                        .HasColumnType("date");

                    b.ToTable("Payroll_MonthlySalarySheet1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollOfficeIsGarment", b =>
                {
                    b.Property<bool?>("IsGarments")
                        .HasColumnType("bit");

                    b.ToTable("Payroll_Office_IsGarments", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollOthersPay", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Oppurpose")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("OPpurpose");

                    b.Property<int>("Opsn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OPSN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Opsn"));

                    b.Property<double?>("OtherPay")
                        .HasColumnType("float");

                    b.ToTable("Payroll_OthersPay", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollPunishment", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MonthName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Pamount")
                        .HasColumnType("float")
                        .HasColumnName("PAmount");

                    b.Property<string>("Pname")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("PName");

                    b.Property<int>("Psn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PSN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Psn"));

                    b.ToTable("Payroll_Punishment", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollYearlyBonusSheet", b =>
                {
                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<int?>("Bid")
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    b.Property<double?>("BonusAmount")
                        .HasColumnType("float");

                    b.Property<string>("BonusType")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EditStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("GenerateDate")
                        .HasColumnType("date");

                    b.Property<string>("GenerateOn")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float");

                    b.Property<double?>("PresentSalary")
                        .HasColumnType("float");

                    b.Property<int?>("SftId")
                        .HasColumnType("int");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasIndex("Bid");

                    b.ToTable("Payroll_YearlyBonusSheet", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollYearlyBonusSheet1", b =>
                {
                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<int?>("Bid")
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    b.Property<double?>("BonusAmount")
                        .HasColumnType("float");

                    b.Property<string>("BonusType")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EditStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("GenerateDate")
                        .HasColumnType("date");

                    b.Property<string>("GenerateOn")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float");

                    b.Property<double?>("PresentSalary")
                        .HasColumnType("float");

                    b.Property<int?>("SftId")
                        .HasColumnType("int");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasIndex("Bid");

                    b.ToTable("Payroll_YearlyBonusSheet1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmergencyContact", b =>
                {
                    b.Property<string>("Age")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmergencyAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmergencyPhoneNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpRelation")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Gender")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("JobDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasIndex(new[] { "EmpId" }, "IX_Personnel_EmergencyContact")
                        .IsUnique();

                    b.ToTable("Personnel_EmergencyContact", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpAddress", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PerCity")
                        .HasColumnType("int");

                    b.Property<string>("PerPo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PerPO");

                    b.Property<string>("PerPobangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PerPOBangla");

                    b.Property<string>("PerPostBox")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PerThanaId")
                        .HasColumnType("int");

                    b.Property<string>("PerVillage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PerVillageBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PreCity")
                        .HasColumnType("int");

                    b.Property<string>("PrePo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PrePO");

                    b.Property<string>("PrePobangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PrePOBangla");

                    b.Property<string>("PrePostBox")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PreThanaId")
                        .HasColumnType("int");

                    b.Property<string>("PreVillage")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("PreVillageBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmpId");

                    b.ToTable("Personnel_EmpAddress", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpCommonIncrement", b =>
                {
                    b.Property<int>("CommonIncId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommonIncId"));

                    b.Property<decimal?>("AmountPercentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("CommonIncId")
                        .HasName("PK_Personnel_CommonIncrement");

                    b.ToTable("Personnel_EmpCommonIncrement", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpCurrentStatus", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<double?>("AttendanceBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<short?>("BankId")
                        .HasColumnType("smallint");

                    b.Property<double?>("BasicSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("ConvenceAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("DateofUpdate")
                        .HasColumnType("date");

                    b.Property<double?>("DormitoryRent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("DptId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("DsgId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateOnly?>("EarnLeaveDate")
                        .HasColumnType("date");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpAccountNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("EmpContributionAmount")
                        .HasColumnType("float");

                    b.Property<double?>("EmpContributionPer")
                        .HasColumnType("float");

                    b.Property<string>("EmpDutyType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("EmpJoinigSalary")
                        .HasColumnType("float");

                    b.Property<double?>("EmpPresentSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("EmprContributionAmount")
                        .HasColumnType("float");

                    b.Property<double?>("EmprContributionPer")
                        .HasColumnType("float");

                    b.Property<double?>("FoodAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("HolidayAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("HouseRent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("IncomeTax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("IncrementAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<short?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1);

                    b.Property<bool?>("IsSingleRateOt")
                        .HasColumnType("bit")
                        .HasColumnName("IsSingleRateOT");

                    b.Property<double?>("LunchAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<bool?>("LunchCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<double?>("MedicalAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("NightAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateOnly?>("OrderRefDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderRefNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("OthersAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<bool?>("OverTime")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("PfDate")
                        .HasColumnType("date");

                    b.Property<bool?>("PfMember")
                        .HasColumnType("bit");

                    b.Property<double?>("Pfamount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("PFAmount");

                    b.Property<double?>("PreAttendanceBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreBasicSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("PreCompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("PreConvenceAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("PreDptId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PreDsgId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PreEmpDutyType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<double?>("PreEmpSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("PreEmpStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PreEmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("PreFoodAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<short?>("PreGid")
                        .HasColumnType("smallint")
                        .HasColumnName("PreGId");

                    b.Property<string>("PreGrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("PreHolidayAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreHouseRent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreIncomeTax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreIncrementAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreLunchAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreMedicalAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreNightAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreOthersAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("PreSalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<DateTime?>("PreShiftTransferDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("PreTechnicalAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreTiffinAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("SalaryCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("ShiftTransferDate")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("ShiftTransferToDate")
                        .HasColumnType("date");

                    b.Property<int>("Sn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sn"));

                    b.Property<double?>("TechnicalAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("TiffinAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Tin")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.HasIndex("EmpId");

                    b.ToTable("Personnel_EmpCurrentStatus", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpCurrentStatus1", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<double?>("AttendanceBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateOnly?>("AutoIncrementMonth")
                        .HasColumnType("date");

                    b.Property<short?>("BankId")
                        .HasColumnType("smallint");

                    b.Property<double?>("BasicSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("ConvenceAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("DateofUpdate")
                        .HasColumnType("date");

                    b.Property<double?>("DormitoryRent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("DptId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("DsgId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateOnly?>("EarnLeaveDate")
                        .HasColumnType("date");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpAccountNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("EmpContributionAmount")
                        .HasColumnType("float");

                    b.Property<double?>("EmpContributionPer")
                        .HasColumnType("float");

                    b.Property<string>("EmpDutyType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("EmpJoinigSalary")
                        .HasColumnType("float");

                    b.Property<double?>("EmpPresentSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("EmprContributionAmount")
                        .HasColumnType("float");

                    b.Property<double?>("EmprContributionPer")
                        .HasColumnType("float");

                    b.Property<double?>("FoodAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("HolidayAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("HouseRent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("IncomeTax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("IncrementAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<short?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1);

                    b.Property<bool?>("IsSingleRateOt")
                        .HasColumnType("bit")
                        .HasColumnName("IsSingleRateOT");

                    b.Property<double?>("LunchAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<bool?>("LunchCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<double?>("MedicalAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("NightAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateOnly?>("OrderRefDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderRefNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("OthersAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<bool?>("OverTime")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("PfDate")
                        .HasColumnType("date");

                    b.Property<bool?>("PfMember")
                        .HasColumnType("bit");

                    b.Property<double?>("Pfamount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("PFAmount");

                    b.Property<double?>("PreAttendanceBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreBasicSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("PreCompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("PreConvenceAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("PreDptId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PreDsgId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PreEmpDutyType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<double?>("PreEmpSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("PreEmpStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PreEmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("PreFoodAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<short?>("PreGid")
                        .HasColumnType("smallint")
                        .HasColumnName("PreGId");

                    b.Property<string>("PreGrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("PreHolidayAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreHouseRent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreIncomeTax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreIncrementAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreLunchAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreMedicalAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreNightAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreOthersAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("PreSalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<DateTime?>("PreShiftTransferDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("PreTechnicalAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("PreTiffinAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("SalaryCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("ShiftTransferDate")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("ShiftTransferToDate")
                        .HasColumnType("date");

                    b.Property<int>("Sn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sn"));

                    b.Property<double?>("TechnicalAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("TiffinAllownce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Tin")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.HasIndex("EmpId");

                    b.ToTable("Personnel_EmpCurrentStatus1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpCurrentStatusPromotionLog", b =>
                {
                    b.Property<bool>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<double?>("AttendanceBonus")
                        .HasColumnType("float");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("DateofUpdate")
                        .HasColumnType("date");

                    b.Property<string>("Did")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DId");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EarnLeaveDate")
                        .HasColumnType("date");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Fid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FId");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GrpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("HolidayAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("IncrementAmount")
                        .HasColumnType("float");

                    b.Property<string>("LnId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("LunchAllownce")
                        .HasColumnType("float");

                    b.Property<bool>("LunchCount")
                        .HasColumnType("bit");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("NightAllownce")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("OrderRefDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderRefNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<double?>("TiffinAllownce")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.ToTable("Personnel_EmpCurrentStatusPromotionLog", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpCurrentStatusSalaryIncrementLog", b =>
                {
                    b.Property<bool>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<double?>("AttendanceBonus")
                        .HasColumnType("float");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("DateofUpdate")
                        .HasColumnType("date");

                    b.Property<string>("Did")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DId");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EarnLeaveDate")
                        .HasColumnType("date");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Fid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FId");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GrpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("HolidayAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("IncrementAmount")
                        .HasColumnType("float");

                    b.Property<string>("LnId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("LunchAllownce")
                        .HasColumnType("float");

                    b.Property<bool>("LunchCount")
                        .HasColumnType("bit");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("NightAllownce")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("OrderRefDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderRefNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<double?>("TiffinAllownce")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.ToTable("Personnel_EmpCurrentStatusSalaryIncrementLog", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpEducation", b =>
                {
                    b.Property<string>("Degree")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Institute")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Result")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Sn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sn"));

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.HasIndex("EmpId");

                    b.ToTable("Personnel_EmpEducation", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpExperience", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Designation")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("JoiningDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ResignDate")
                        .HasColumnType("date");

                    b.Property<string>("Responsibility")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sn"));

                    b.Property<string>("SpecialQualification")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("YearOfExp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasIndex("EmpId");

                    b.ToTable("Personnel_EmpExperience", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpPersonnal", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Age")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FatherName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FatherNameBn")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Height")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastEdQualification")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MaritialStatus")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("MotherName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MotherNameBn")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("MotherNameBN");

                    b.Property<string>("NationIdcardNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NationIDCardNo");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NoOfExperience")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<short?>("NumberofChild")
                        .HasColumnType("smallint");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("Qid")
                        .HasColumnType("smallint")
                        .HasColumnName("QId");

                    b.Property<short?>("Rid")
                        .HasColumnType("smallint")
                        .HasColumnName("RId");

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<string>("Weight")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("EmpId");

                    b.ToTable("Personnel_EmpPersonnal", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpProximityChangeLog", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.ToTable("Personnel_EmpProximityChange_Log", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpPunismentInfo", b =>
                {
                    b.Property<long>("EmpPunismentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmpPunismentId"));

                    b.Property<long?>("EmpCardNo")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("EmpPunismentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("EmpPunismentOrderRef")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("EmpPunismentOrderRefDate")
                        .HasColumnType("date");

                    b.Property<bool?>("EmpPunismentStaus")
                        .HasColumnType("bit");

                    b.Property<string>("EmpRemarks")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("PtId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("EmpPunismentId");

                    b.HasIndex("PtId");

                    b.ToTable("Personnel_EmpPunismentInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpRejoin", b =>
                {
                    b.Property<int>("EmpRejoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpRejoinId"));

                    b.Property<DateOnly?>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("EmpRejoinId");

                    b.ToTable("Personnel_EmpRejoin", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpSeparation", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("EmpSeparationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmpSeparationId"));

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("SeparationType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmpId", "EffectiveDate")
                        .HasName("PK_Personnel_EmpSeparation_1");

                    b.ToTable("Personnel_EmpSeparation", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpSeparation1", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("EmpSeparationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmpSeparationId"));

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("SeparationType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmpId", "EffectiveDate")
                        .HasName("PK_Personnel_EmpSeparation_2");

                    b.ToTable("Personnel_EmpSeparation1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmployeeInfo", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("AuthorizedPerson")
                        .HasColumnType("bit");

                    b.Property<string>("BankName")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("BonusType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<bool?>("BreakfastStatus")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<short?>("EarnedLeave")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("EarnedLeaveEffectedFrom")
                        .HasColumnType("date");

                    b.Property<string>("EmpAccountNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<TimeOnly?>("EmpEndLunch")
                        .HasColumnType("time");

                    b.Property<double?>("EmpJoinigSalary")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpPicture")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpShiftStartDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("EmpStartLunch")
                        .HasColumnType("time");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("ExpireDate")
                        .HasColumnType("date");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsTransferredToCompliance")
                        .HasColumnType("bit");

                    b.Property<bool?>("LunchBillStatus")
                        .HasColumnType("bit");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("NightBillStatus")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("PfDate")
                        .HasColumnType("date");

                    b.Property<double?>("PfEmpContribution")
                        .HasColumnType("float");

                    b.Property<bool?>("PfMember")
                        .HasColumnType("bit");

                    b.Property<double?>("PfOpeningBalance")
                        .HasColumnType("float");

                    b.Property<double?>("Pfamount")
                        .HasColumnType("float")
                        .HasColumnName("PFAmount");

                    b.Property<bool?>("PunchType")
                        .HasColumnType("bit");

                    b.Property<string>("RealProximityNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("SalaryCount")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SignatureImage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<bool?>("TiffinStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("WagesType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("WeekendType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.HasKey("EmpId")
                        .HasName("PK_Personnel_EmployeeInfo1");

                    b.ToTable("Personnel_EmployeeInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelSeparationActivation1Log", b =>
                {
                    b.Property<DateOnly?>("ActiveDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("EmpSeparationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.ToTable("Personnel_SeparationActivation1_Log", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelSeparationActivationLog", b =>
                {
                    b.Property<DateOnly?>("ActiveDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("EmpSeparationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.ToTable("Personnel_SeparationActivation_Log", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelWorkerCardNoSequence", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<long?>("WorkerCardNo")
                        .HasColumnType("bigint");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable("Personnel_WorkerCardNoSequence", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfActivityLog", b =>
                {
                    b.Property<bool?>("ActivityStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Pfamount")
                        .HasColumnType("float")
                        .HasColumnName("PFAmount");

                    b.Property<DateOnly?>("Pfdate")
                        .HasColumnType("date")
                        .HasColumnName("PFDate");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.ToTable("PF_Activity_log", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfCalculationDetail", b =>
                {
                    b.Property<double?>("EmpContributionAmount")
                        .HasColumnType("float");

                    b.Property<double?>("EmpContributionPer")
                        .HasColumnType("float");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("EmprContributionAmount")
                        .HasColumnType("float");

                    b.Property<string>("EmprContributionPer")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<double?>("InterestAmount")
                        .HasColumnType("float");

                    b.Property<double?>("InterestRate")
                        .HasColumnType("float");

                    b.Property<string>("MonthName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("OpeningBalance")
                        .HasColumnType("float");

                    b.Property<int>("PfcSn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PFC_SN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PfcSn"));

                    b.ToTable("PF_CalculationDetails", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfCalculationSetting", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("EmpContribution")
                        .HasColumnType("float");

                    b.Property<double?>("EmprContribution")
                        .HasColumnType("float");

                    b.Property<int?>("PempEmprEndyear")
                        .HasColumnType("int")
                        .HasColumnName("PEmpEmprEndyear");

                    b.Property<int?>("PempEmprIrstEndyear")
                        .HasColumnType("int")
                        .HasColumnName("PEmpEmprIrstEndyear");

                    b.Property<int?>("PempEmprIrstStartyear")
                        .HasColumnType("int")
                        .HasColumnName("PEmpEmprIrstStartyear");

                    b.Property<int?>("PempEmprStartyear")
                        .HasColumnType("int")
                        .HasColumnName("PEmpEmprStartyear");

                    b.Property<int?>("PempPartEndyear")
                        .HasColumnType("int")
                        .HasColumnName("PEmpPartEndyear");

                    b.Property<int?>("PempPartStartyear")
                        .HasColumnType("int")
                        .HasColumnName("PEmpPartStartyear");

                    b.Property<int?>("PfstartYear")
                        .HasColumnType("int")
                        .HasColumnName("PFStartYear");

                    b.Property<double?>("RateofInterest")
                        .HasColumnType("float");

                    b.ToTable("PF_CalculationSetting", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfCompanyInfo", b =>
                {
                    b.Property<string>("PfcompanyId")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("PFCompanyId");

                    b.Property<string>("Pfaddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("PFAddress");

                    b.Property<string>("PfcompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PFCompanyName");

                    b.HasKey("PfcompanyId")
                        .HasName("PK_PF_CompanyId");

                    b.ToTable("PF_CompanyInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfCompanyRelation", b =>
                {
                    b.Property<string>("PfcompanyId")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("PFCompanyId");

                    b.Property<string>("ProductId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("ProductDb")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ProductDB");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.HasKey("PfcompanyId", "ProductId", "ProductDb")
                        .HasName("PK_PF_CompanyInfo");

                    b.ToTable("PF_CompanyRelation", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfExpense", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("Month")
                        .HasColumnType("date");

                    b.Property<double>("Expense")
                        .HasColumnType("float");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.HasKey("EmpId", "Month")
                        .HasName("PK_Table_1");

                    b.ToTable("PF_Expense", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfFdr", b =>
                {
                    b.Property<int>("FdrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FdrID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FdrId"));

                    b.Property<string>("Bank")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Branch")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("CompanyID");

                    b.Property<double?>("FdrAmount")
                        .HasColumnType("float");

                    b.Property<string>("FdrNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<double?>("InterestAmount")
                        .HasColumnType("float");

                    b.Property<double?>("InterestRate")
                        .HasColumnType("float");

                    b.Property<int?>("Period")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("FdrId");

                    b.HasIndex(new[] { "FdrNo" }, "IX_PF_FDR")
                        .IsUnique();

                    b.ToTable("PF_FDR", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfFdrInterest", b =>
                {
                    b.Property<int?>("Charge")
                        .HasColumnType("int");

                    b.Property<int?>("FdrId")
                        .HasColumnType("int")
                        .HasColumnName("FdrID");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InterestAmount")
                        .HasColumnType("int");

                    b.Property<int?>("NetInterest")
                        .HasColumnType("int");

                    b.Property<int?>("TaxCharge")
                        .HasColumnType("int");

                    b.Property<int?>("TaxChargePer")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("WithdrawDate")
                        .HasColumnType("date");

                    b.HasIndex("FdrId");

                    b.ToTable("PF_FDR_Interest", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfInterestDistribution", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FdrId")
                        .HasColumnType("int")
                        .HasColumnName("FdrID");

                    b.Property<double?>("InterestAmount")
                        .HasColumnType("float");

                    b.ToTable("PF_Interest_Distribution", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfInvestmentType", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("InvestmentType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable("PF_InvestmentType", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfPfrecord", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<DateOnly>("Month")
                        .HasColumnType("date");

                    b.Property<double?>("EmpContribution")
                        .HasColumnType("float");

                    b.Property<double?>("EmprContribution")
                        .HasColumnType("float");

                    b.Property<bool?>("IsManualEntry")
                        .HasColumnType("bit");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.HasKey("EmpId", "Month")
                        .HasName("PK_PF_PFRecord_1");

                    b.ToTable("PF_PFRecord", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfProfit", b =>
                {
                    b.Property<int>("FdrId")
                        .HasColumnType("int")
                        .HasColumnName("FdrID");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("Month")
                        .HasColumnType("date");

                    b.Property<double>("Profit")
                        .HasColumnType("float");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.HasKey("FdrId", "EmpId", "Month")
                        .HasName("PK_PF_Profit_1");

                    b.ToTable("PF_Profit", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfProfitDistributionLog", b =>
                {
                    b.Property<int>("FdrId")
                        .HasColumnType("int")
                        .HasColumnName("FdrID");

                    b.Property<DateOnly>("DistributionDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DistributionTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsManual")
                        .HasColumnType("bit");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FdrId", "DistributionDate");

                    b.ToTable("PF_ProfitDistribution_log", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfWithdraw", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("EmpContribution")
                        .HasColumnType("float");

                    b.Property<double?>("EmprContribution")
                        .HasColumnType("float");

                    b.Property<int?>("PayableType")
                        .HasColumnType("int");

                    b.Property<double?>("Profit")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("WithdrawDate")
                        .HasColumnType("date");

                    b.HasKey("EmpId");

                    b.ToTable("PF_Withdraw", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.PfYearlyExpense", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<double?>("Expense")
                        .HasColumnType("float");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.HasKey("CompanyId", "Date");

                    b.ToTable("PF_YearlyExpense", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.SchClass", b =>
                {
                    b.Property<short?>("AutoBind")
                        .HasColumnType("smallint");

                    b.Property<int?>("CheckIn")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckInTime1")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckInTime2")
                        .HasColumnType("datetime");

                    b.Property<int?>("CheckOut")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckOutTime1")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckOutTime2")
                        .HasColumnType("datetime");

                    b.Property<int?>("Color")
                        .HasColumnType("int");

                    b.Property<int?>("EarlyMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("LateMinutes")
                        .HasColumnType("int");

                    b.Property<int>("SchClassid")
                        .HasColumnType("int")
                        .HasColumnName("schClassid");

                    b.Property<string>("SchName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("schName");

                    b.Property<string>("SensorId")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("SensorID");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<double?>("WorkDay")
                        .HasColumnType("float");

                    b.Property<double?>("WorkMins")
                        .HasColumnType("float");

                    b.ToTable("SchClass", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.ShiftTransferDetailsMissingLog", b =>
                {
                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int")
                        .HasColumnName("ShiftID");

                    b.Property<long?>("Stid")
                        .HasColumnType("bigint")
                        .HasColumnName("STID");

                    b.HasKey("Sl");

                    b.HasIndex("Stid");

                    b.ToTable("ShiftTransferDetailsMissingLog", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.ShiftTransferInfo", b =>
                {
                    b.Property<long>("Stid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("STId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Stid"));

                    b.Property<string>("CompanyId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EntryDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Gid")
                        .HasColumnType("int")
                        .HasColumnName("GId");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("TfromDate")
                        .HasColumnType("date")
                        .HasColumnName("TFromDate");

                    b.Property<DateOnly?>("TtoDate")
                        .HasColumnType("date")
                        .HasColumnName("TToDate");

                    b.HasKey("Stid");

                    b.ToTable("ShiftTransferInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.ShiftTransferInfoDetail", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<short?>("Fid")
                        .HasColumnType("smallint")
                        .HasColumnName("FId");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<bool?>("IsWeekend")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Notes")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateOnly?>("Sdate")
                        .HasColumnType("date")
                        .HasColumnName("SDate");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<long?>("Stid")
                        .HasColumnType("bigint")
                        .HasColumnName("STId");

                    b.HasIndex("Stid");

                    b.ToTable("ShiftTransferInfoDetails");
                });

            modelBuilder.Entity("Hrms_api.Data.TblAttendance", b =>
                {
                    b.Property<int?>("Hour")
                        .HasColumnType("int");

                    b.Property<int?>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("ProximityNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PunchDate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("Second")
                        .HasColumnType("int");

                    b.ToTable("tblAttendance", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblAttendanceNotCountableLogRecord", b =>
                {
                    b.Property<string>("AttDate")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Reason")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.ToTable("tblAttendance_NotCountableLogRecord", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblAttendancePunchTemp", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("CompanyID");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("PunchTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ProcessingId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ProcessingID");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.HasKey("CompanyId", "CardNo", "PunchTime", "ProcessingId");

                    b.ToTable("tblAttendancePunch_temp", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblAttendanceRecord", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Attdate")
                        .HasColumnType("datetime")
                        .HasColumnName("ATTDate");

                    b.Property<string>("AttManual")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Attstatus")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ATTStatus");

                    b.Property<TimeOnly?>("BreakEndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("BreakStartTime")
                        .HasColumnType("time");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DailyStartTimeAltCloseTime")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)")
                        .HasColumnName("DailyStartTimeALT_CloseTime");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<short?>("HolidayCount")
                        .HasColumnType("smallint");

                    b.Property<string>("InHour")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("InMin")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("InSec")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<bool?>("LateForAttBonus")
                        .HasColumnType("bit");

                    b.Property<TimeOnly?>("LateTime")
                        .HasColumnType("time");

                    b.Property<short?>("NightAllowCount")
                        .HasColumnType("smallint");

                    b.Property<int?>("Odid")
                        .HasColumnType("int")
                        .HasColumnName("ODID");

                    b.Property<TimeOnly?>("OtherOverTime")
                        .HasColumnType("time");

                    b.Property<bool?>("OutDuty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("OutHour")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OutMin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OutSec")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("OutStatus")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<TimeOnly?>("OverTime")
                        .HasColumnType("time");

                    b.Property<short?>("PaybleDays")
                        .HasColumnType("smallint");

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ReferenceID");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("StateStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly?>("StayTime")
                        .HasColumnType("time");

                    b.Property<short?>("TiffinCount")
                        .HasColumnType("smallint");

                    b.Property<TimeOnly?>("TotalOverTime")
                        .HasColumnType("time");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmpId", "Attdate")
                        .HasName("PK_tblAttendanceRecord_1");

                    b.HasIndex("EmpTypeId");

                    b.ToTable("tblAttendanceRecord", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblAttendanceRecordPunchLog", b =>
                {
                    b.Property<DateTime?>("AttDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PinHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("PInHour");

                    b.Property<string>("PinMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("PInMin");

                    b.Property<string>("PinSec")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("PInSec");

                    b.Property<string>("PoutHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("POutHour");

                    b.Property<string>("PoutMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("POutMin");

                    b.Property<string>("PoutSec")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("POutSec");

                    b.ToTable("tblAttendanceRecordPunchLog", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblDailyAttendance", b =>
                {
                    b.Property<short?>("Absent")
                        .HasColumnType("smallint");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("Leave")
                        .HasColumnType("smallint");

                    b.Property<short?>("Present")
                        .HasColumnType("smallint");

                    b.ToTable("tblDailyAttendance", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblDepartmentWiseAttendance", b =>
                {
                    b.Property<int>("Dwatten")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DWAtten");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dwatten"));

                    b.Property<string>("AttenStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("DateIn")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateOut")
                        .HasColumnType("date");

                    b.Property<string>("DivisionId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("MonthId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeInAfterLunchHr")
                        .HasColumnType("int");

                    b.Property<int?>("TimeInAfterLunchMin")
                        .HasColumnType("int");

                    b.Property<int?>("TimeInHr")
                        .HasColumnType("int");

                    b.Property<int?>("TimeInMin")
                        .HasColumnType("int");

                    b.Property<int?>("TimeOutForLunchHr")
                        .HasColumnType("int");

                    b.Property<int?>("TimeOutForLunchMin")
                        .HasColumnType("int");

                    b.Property<int?>("TimeOutHr")
                        .HasColumnType("int");

                    b.Property<int?>("TimeOutMin")
                        .HasColumnType("int");

                    b.HasKey("Dwatten")
                        .HasName("PK_tblDepartmentWiseAttendance_1");

                    b.ToTable("tblDepartmentWiseAttendance", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblEmpWiseWeekendinfo", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DptID");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DsgID");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GID");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.HasKey("EmpId", "Date");

                    b.ToTable("tblEmpWiseWeekendinfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblGeneralDay", b =>
                {
                    b.Property<DateOnly>("GeneralDay")
                        .HasColumnType("date");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<short>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.HasKey("GeneralDay", "CompanyId", "EmpTypeId");

                    b.ToTable("tblGeneralDays", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblHolydayWeekentEmployeeWise", b =>
                {
                    b.Property<long>("Hwcode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("HWCode");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Hwcode"));

                    b.Property<string>("CompanyId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("HwdayName")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("HWDayName");

                    b.Property<string>("Hwtype")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("HWType");

                    b.Property<bool?>("IsUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Remarks")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Hwcode");

                    b.ToTable("tblHolydayWeekentEmployeeWise", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblHolydayWeekentEmployeeWiseDetail", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<long?>("Hwcode")
                        .HasColumnType("bigint")
                        .HasColumnName("HWCode");

                    b.Property<DateOnly?>("Hwdate")
                        .HasColumnType("date")
                        .HasColumnName("HWDate");

                    b.Property<bool?>("IsUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.HasIndex("Hwcode");

                    b.ToTable("tblHolydayWeekentEmployeeWiseDetails", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblHolydayWork", b =>
                {
                    b.Property<DateOnly>("Hdate")
                        .HasColumnType("date")
                        .HasColumnName("HDate");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Hcode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HCode");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Hcode"));

                    b.HasKey("Hdate", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("tblHolydayWork", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblHolydayWork1", b =>
                {
                    b.Property<DateOnly>("Hdate")
                        .HasColumnType("date")
                        .HasColumnName("HDate");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Hcode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HCode");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Hcode"));

                    b.HasKey("Hdate", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("tblHolydayWork1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblLeaveApproval", b =>
                {
                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DptCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsProcessessed")
                        .HasColumnType("bit");

                    b.Property<string>("Lacode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("LACode");

                    b.Property<string>("LeaveApplied")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("LeaveName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("StateRemarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("StateStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.ToTable("tblLeaveApproval", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblLeaveAuthorityAccessControl", b =>
                {
                    b.Property<short?>("AuthorityAction")
                        .HasColumnType("smallint");

                    b.Property<int?>("AuthorityId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorityID");

                    b.Property<short?>("AuthorityPosition")
                        .HasColumnType("smallint");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("CompanyID");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<bool?>("IsDirectApprove")
                        .HasColumnType("bit");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.HasIndex("EmpId");

                    b.ToTable("tblLeaveAuthorityAccessControl", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblLeaveConfig", b =>
                {
                    b.Property<int>("LeaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveId"));

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<bool?>("IsDeductionAllowed")
                        .HasColumnType("bit");

                    b.Property<int?>("LeaveDays")
                        .HasColumnType("int");

                    b.Property<string>("LeaveName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LeaveNature")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LeaveId")
                        .HasName("PK_LeaveConfigs");

                    b.HasIndex("CompanyId");

                    b.ToTable("tblLeaveConfig", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblMonthSetup", b =>
                {
                    b.Property<long>("MonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("MonthID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MonthId"));

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Did")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DId");

                    b.Property<DateOnly?>("ExpectedPaymentDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("MonthName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("MonthStatus")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int?>("TotalHoliday")
                        .HasColumnType("int");

                    b.Property<int?>("TotalWeekend")
                        .HasColumnType("int");

                    b.Property<int?>("TotalWorkingDays")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MonthId")
                        .HasName("PK_MonthSetup");

                    b.HasIndex(new[] { "MonthName" }, "IX_tblMonthSetup_ForeignKey");

                    b.HasIndex(new[] { "MonthName", "CompanyId" }, "UniqueMonthName")
                        .IsUnique()
                        .HasFilter("[MonthName] IS NOT NULL AND [CompanyId] IS NOT NULL");

                    b.ToTable("tblMonthSetup", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblMonthSetup1", b =>
                {
                    b.Property<long>("MonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("MonthID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MonthId"));

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Did")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DId");

                    b.Property<DateOnly?>("ExpectedPaymentDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("MonthName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("MonthStatus")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int?>("TotalHoliday")
                        .HasColumnType("int");

                    b.Property<int?>("TotalWeekend")
                        .HasColumnType("int");

                    b.Property<int?>("TotalWorkingDays")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MonthId");

                    b.ToTable("tblMonthSetup1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblOutDuty", b =>
                {
                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<DateTime?>("AppiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("AppliedBy")
                        .HasColumnType("int");

                    b.Property<string>("AssignedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("AuthorizedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuthorizedDate")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<TimeOnly?>("InTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("OutTime")
                        .HasColumnType("time");

                    b.Property<string>("Place")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<short?>("Processing")
                        .HasColumnType("smallint");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<bool?>("StraightFromHome")
                        .HasColumnType("bit");

                    b.Property<bool?>("StraightToHome")
                        .HasColumnType("bit");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Sl");

                    b.ToTable("tblOutDuty", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblOutDutyApprovalLog", b =>
                {
                    b.Property<short?>("Approval")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Odid")
                        .HasColumnType("int")
                        .HasColumnName("ODID");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasIndex("Odid");

                    b.ToTable("tblOutDuty_ApprovalLog", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblOutDutyAuthorityAccessControl", b =>
                {
                    b.Property<short?>("AuthorityAction")
                        .HasColumnType("smallint");

                    b.Property<int?>("AuthorityId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorityID");

                    b.Property<short?>("AuthorityPosition")
                        .HasColumnType("smallint");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("CompanyID");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<bool?>("IsDirectApprove")
                        .HasColumnType("bit");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.HasIndex("EmpId");

                    b.ToTable("tblOutDutyAuthorityAccessControl", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblOutdutyDetail", b =>
                {
                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<string>("ClientName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("InTime")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int?>("Odid")
                        .HasColumnType("int")
                        .HasColumnName("ODID");

                    b.Property<string>("OutTime")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Purpose")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Sl");

                    b.HasIndex("Odid");

                    b.ToTable("tblOutdutyDetails", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblReportHeading", b =>
                {
                    b.Property<string>("RptAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RptCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("RptEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("RptFax")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RptHeader")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RptMessage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RptTel")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToTable("tblReportHeading", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblStatusJoinClose", b =>
                {
                    b.Property<short?>("Staff")
                        .HasColumnType("smallint");

                    b.Property<string>("Status")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<short?>("Worker")
                        .HasColumnType("smallint");

                    b.ToTable("tblStatusJoin_Close", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TblTarget", b =>
                {
                    b.Property<short>("Tid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("TId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Tid"));

                    b.Property<string>("Did")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DId");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("LnId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("TargetDate")
                        .HasColumnType("date");

                    b.HasKey("Tid");

                    b.ToTable("tblTarget", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TempNewLeaveDateForAlter", b =>
                {
                    b.Property<DateOnly?>("LeaveDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.ToTable("temp_NewLeaveDateForAlter", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TempOldLeaveDateForAlter", b =>
                {
                    b.Property<DateOnly?>("LeaveDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.ToTable("temp_OldLeaveDateForAlter", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.Template", b =>
                {
                    b.Property<byte[]>("Bitmappicture")
                        .HasColumnType("image")
                        .HasColumnName("BITMAPPICTURE");

                    b.Property<byte[]>("Bitmappicture2")
                        .HasColumnType("image")
                        .HasColumnName("BITMAPPICTURE2");

                    b.Property<byte[]>("Bitmappicture3")
                        .HasColumnType("image")
                        .HasColumnName("BITMAPPICTURE3");

                    b.Property<byte[]>("Bitmappicture4")
                        .HasColumnType("image")
                        .HasColumnName("BITMAPPICTURE4");

                    b.Property<short?>("DivisionFp")
                        .HasColumnType("smallint")
                        .HasColumnName("DivisionFP");

                    b.Property<string>("Emachinenum")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("EMACHINENUM");

                    b.Property<int>("Fingerid")
                        .HasColumnType("int")
                        .HasColumnName("FINGERID");

                    b.Property<short?>("Flag")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("Template1")
                        .IsRequired()
                        .HasColumnType("image")
                        .HasColumnName("TEMPLATE");

                    b.Property<byte[]>("Template11")
                        .HasColumnType("image")
                        .HasColumnName("TEMPLATE1");

                    b.Property<byte[]>("Template2")
                        .HasColumnType("image")
                        .HasColumnName("TEMPLATE2");

                    b.Property<byte[]>("Template3")
                        .HasColumnType("image")
                        .HasColumnName("TEMPLATE3");

                    b.Property<byte[]>("Template4")
                        .HasColumnType("image")
                        .HasColumnName("TEMPLATE4");

                    b.Property<int>("Templateid")
                        .HasColumnType("int")
                        .HasColumnName("TEMPLATEID");

                    b.Property<int>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("USERID");

                    b.Property<short?>("Usetype")
                        .HasColumnType("smallint")
                        .HasColumnName("USETYPE");

                    b.ToTable("TEMPLATE", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.TotalPresentForJobCard", b =>
                {
                    b.Property<string>("Absent")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Apday")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("APday");

                    b.Property<string>("Cl")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("CL");

                    b.Property<string>("El")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("EL");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Holiday")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Ml")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("ML");

                    b.Property<string>("Present")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("Si")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SI");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Si"));

                    b.Property<string>("Sl")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("SL");

                    b.Property<string>("Weekend")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.ToTable("TotalPresentForJobCard", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.UserAccount", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CoockieInfo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("IsCompliance")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLogin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLvAuthority")
                        .HasColumnType("bit")
                        .HasColumnName("isLvAuthority");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("LoginDateTime")
                        .HasColumnType("datetime");

                    b.Property<short?>("LvAuthorityAction")
                        .HasColumnType("smallint");

                    b.Property<short?>("LvAuthorityOrder")
                        .HasColumnType("smallint");

                    b.Property<short?>("LvEmpType")
                        .HasColumnType("smallint");

                    b.Property<bool?>("LvOnlyDpt")
                        .HasColumnType("bit");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserPassword")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserType")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("UserId");

                    b.ToTable("UserAccount", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.UserOfRun", b =>
                {
                    b.Property<DateTime>("Enddate")
                        .HasColumnType("datetime")
                        .HasColumnName("ENDDATE");

                    b.Property<int?>("IsnotofRun")
                        .HasColumnType("int")
                        .HasColumnName("ISNOTOF_RUN");

                    b.Property<int>("NumOfRunId")
                        .HasColumnType("int")
                        .HasColumnName("NUM_OF_RUN_ID");

                    b.Property<int?>("OrderRun")
                        .HasColumnType("int")
                        .HasColumnName("ORDER_RUN");

                    b.Property<DateTime>("Startdate")
                        .HasColumnType("datetime")
                        .HasColumnName("STARTDATE");

                    b.Property<int>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("USERID");

                    b.ToTable("USER_OF_RUN", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.UserPrivilege", b =>
                {
                    b.Property<bool?>("AllAction")
                        .HasColumnType("bit");

                    b.Property<bool?>("DeleteAction")
                        .HasColumnType("bit");

                    b.Property<short?>("ModuleId")
                        .HasColumnType("smallint");

                    b.Property<string>("ModulePageName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("ReadAction")
                        .HasColumnType("bit");

                    b.Property<long>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sl"));

                    b.Property<bool?>("UpdateAction")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool?>("WriteAction")
                        .HasColumnType("bit");

                    b.ToTable("UserPrivilege", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.Userinfo", b =>
                {
                    b.Property<int?>("AccGroup")
                        .HasColumnType("int");

                    b.Property<short>("Att")
                        .HasColumnType("smallint")
                        .HasColumnName("ATT");

                    b.Property<short?>("AutoSchPlan")
                        .HasColumnType("smallint");

                    b.Property<string>("Badgenumber")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasColumnName("BIRTHDAY");

                    b.Property<string>("CardNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("City")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("CITY");

                    b.Property<short?>("Defaultdeptid")
                        .HasColumnType("smallint")
                        .HasColumnName("DEFAULTDEPTID");

                    b.Property<short?>("Emprivilege")
                        .HasColumnType("smallint")
                        .HasColumnName("EMPRIVILEGE");

                    b.Property<int?>("Expires")
                        .HasColumnType("int");

                    b.Property<int?>("FaceGroup")
                        .HasColumnType("int");

                    b.Property<string>("Fphone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("FPHONE");

                    b.Property<string>("Gender")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime?>("Hiredday")
                        .HasColumnType("datetime")
                        .HasColumnName("HIREDDAY");

                    b.Property<short>("Holiday")
                        .HasColumnType("smallint")
                        .HasColumnName("HOLIDAY");

                    b.Property<short?>("InheritDeptRule")
                        .HasColumnType("smallint");

                    b.Property<short?>("InheritDeptSch")
                        .HasColumnType("smallint");

                    b.Property<short?>("InheritDeptSchClass")
                        .HasColumnType("smallint");

                    b.Property<short>("Inlate")
                        .HasColumnType("smallint")
                        .HasColumnName("INLATE");

                    b.Property<short>("Lunchduration")
                        .HasColumnType("smallint")
                        .HasColumnName("LUNCHDURATION");

                    b.Property<int?>("MinAutoSchInterval")
                        .HasColumnType("int");

                    b.Property<string>("Minzu")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("MINZU");

                    b.Property<string>("Mverifypass")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("mverifypass");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte[]>("Notes")
                        .HasColumnType("image");

                    b.Property<string>("Ophone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("OPHONE");

                    b.Property<short>("Outearly")
                        .HasColumnType("smallint")
                        .HasColumnName("OUTEARLY");

                    b.Property<short>("Overtime")
                        .HasColumnType("smallint")
                        .HasColumnName("OVERTIME");

                    b.Property<string>("Pager")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PAGER");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PASSWORD");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image")
                        .HasColumnName("PHOTO");

                    b.Property<int?>("Privilege")
                        .HasColumnType("int")
                        .HasColumnName("privilege");

                    b.Property<short?>("RegisterOt")
                        .HasColumnType("smallint")
                        .HasColumnName("RegisterOT");

                    b.Property<short?>("Securityflags")
                        .HasColumnType("smallint")
                        .HasColumnName("SECURITYFLAGS");

                    b.Property<short>("Sep")
                        .HasColumnType("smallint")
                        .HasColumnName("SEP");

                    b.Property<string>("Ssn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SSN");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("STATE");

                    b.Property<string>("Street")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("street");

                    b.Property<int?>("TimeZone1")
                        .HasColumnType("int");

                    b.Property<int?>("TimeZone2")
                        .HasColumnType("int");

                    b.Property<int?>("TimeZone3")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TITLE");

                    b.Property<int?>("UseAccGroupTz")
                        .HasColumnType("int")
                        .HasColumnName("UseAccGroupTZ");

                    b.Property<int>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("USERID");

                    b.Property<int?>("ValidCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidTimeBegin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ValidTimeEnd")
                        .HasColumnType("datetime");

                    b.Property<short?>("Verificationmethod")
                        .HasColumnType("smallint")
                        .HasColumnName("VERIFICATIONMETHOD");

                    b.Property<int?>("VerifyCode")
                        .HasColumnType("int");

                    b.Property<string>("Zip")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("ZIP");

                    b.ToTable("USERINFO", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.UsersMachine", b =>
                {
                    b.Property<int>("Deviceid")
                        .HasColumnType("int")
                        .HasColumnName("DEVICEID");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("USERID");

                    b.ToTable("UsersMachines");
                });

            modelBuilder.Entity("Hrms_api.Data.VAllOffDay", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateOnly?>("Offdate")
                        .HasColumnType("date");

                    b.Property<string>("Reason")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint");

                    b.ToTable((string)null);

                    b.ToView("v_AllOffDays", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VAttBreakTime", b =>
                {
                    b.Property<string>("BreakId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BreakID");

                    b.Property<TimeOnly?>("BreakTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHoliday")
                        .HasColumnType("bit");

                    b.Property<bool?>("NextDay")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Ordering")
                        .HasColumnType("int");

                    b.Property<int>("Sl")
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.ToTable((string)null);

                    b.ToView("v_AttBreakTime", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VAttendanceLateDeduction", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateOnly?>("Entrydate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsDeduction")
                        .HasColumnType("bit");

                    b.Property<short?>("LateDays")
                        .HasColumnType("smallint");

                    b.Property<int>("Ldid")
                        .HasColumnType("int")
                        .HasColumnName("LDId");

                    b.Property<string>("LeaveName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<short?>("NoDeductionDays")
                        .HasColumnType("smallint");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_Attendance_LateDeduction", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VAttendanceWeekendInfo", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<long?>("MonthId")
                        .HasColumnType("bigint")
                        .HasColumnName("MonthID");

                    b.Property<string>("MonthName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint");

                    b.Property<string>("Weekend")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)");

                    b.Property<DateOnly?>("WeekendDate")
                        .HasColumnType("date");

                    b.ToTable((string)null);

                    b.ToView("v_Attendance_WeekendInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VCheckinout", b =>
                {
                    b.Property<string>("Badgenumber")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<DateTime>("Checktime")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKTIME");

                    b.Property<string>("Checktype")
                        .HasColumnType("text")
                        .HasColumnName("CHECKTYPE");

                    b.Property<string>("Memoinfo")
                        .HasColumnType("text");

                    b.Property<string>("Sensorid")
                        .HasColumnType("text")
                        .HasColumnName("SENSORID");

                    b.Property<string>("Sn")
                        .HasColumnType("text")
                        .HasColumnName("sn");

                    b.Property<short?>("UserExtFmt")
                        .HasColumnType("smallint");

                    b.Property<int>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("USERID");

                    b.Property<int?>("Verifycode")
                        .HasColumnType("int")
                        .HasColumnName("VERIFYCODE");

                    b.Property<string>("WorkCode")
                        .HasColumnType("text");

                    b.ToTable((string)null);

                    b.ToView("v_CHECKINOUT", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VDailyAttendanceSummary", b =>
                {
                    b.Property<short?>("Absent")
                        .HasColumnType("smallint");

                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("DptId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("Female")
                        .HasColumnType("smallint");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<short?>("Leave")
                        .HasColumnType("smallint");

                    b.Property<short?>("Male")
                        .HasColumnType("smallint");

                    b.Property<short?>("Present")
                        .HasColumnType("smallint");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.ToTable((string)null);

                    b.ToView("v_DailyAttendanceSummary", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VDailyTiffinBillGenerate", b =>
                {
                    b.Property<DateTime>("Attdate")
                        .HasColumnType("datetime")
                        .HasColumnName("ATTDate");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime");

                    b.Property<double?>("NightAllownce")
                        .HasColumnType("float");

                    b.Property<int?>("OutHour")
                        .HasColumnType("int");

                    b.Property<int?>("OutMin")
                        .HasColumnType("int");

                    b.Property<string>("OutTime")
                        .HasMaxLength(58)
                        .IsUnicode(false)
                        .HasColumnType("varchar(58)");

                    b.Property<double?>("TiffinAllownce")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("v_DailyTiffinBillGenerate", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VEarnLeaveGenerateAccount", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_EarnLeaveGenerateAccount", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VEarnleaveMonthlyInfo", b =>
                {
                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<int?>("NDec")
                        .HasColumnType("int")
                        .HasColumnName("nDec");

                    b.Property<int?>("PApr")
                        .HasColumnType("int")
                        .HasColumnName("pApr");

                    b.Property<int?>("PAug")
                        .HasColumnType("int")
                        .HasColumnName("pAug");

                    b.Property<int?>("PDec")
                        .HasColumnType("int")
                        .HasColumnName("pDec");

                    b.Property<int?>("PFeb")
                        .HasColumnType("int")
                        .HasColumnName("pFeb");

                    b.Property<int?>("PJan")
                        .HasColumnType("int")
                        .HasColumnName("pJan");

                    b.Property<int?>("PJul")
                        .HasColumnType("int")
                        .HasColumnName("pJul");

                    b.Property<int?>("PJun")
                        .HasColumnType("int")
                        .HasColumnName("pJun");

                    b.Property<int?>("PMar")
                        .HasColumnType("int")
                        .HasColumnName("pMar");

                    b.Property<int?>("PMay")
                        .HasColumnType("int")
                        .HasColumnName("pMay");

                    b.Property<int?>("PNov")
                        .HasColumnType("int")
                        .HasColumnName("pNov");

                    b.Property<int?>("POct")
                        .HasColumnType("int")
                        .HasColumnName("pOct");

                    b.Property<int?>("PSep")
                        .HasColumnType("int")
                        .HasColumnName("pSep");

                    b.Property<int?>("PreJan")
                        .HasColumnType("int")
                        .HasColumnName("preJan");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_Earnleave_MonthlyInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VEarnleaveMonthlyInfo1", b =>
                {
                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<int?>("NDec")
                        .HasColumnType("int")
                        .HasColumnName("nDec");

                    b.Property<int?>("PApr")
                        .HasColumnType("int")
                        .HasColumnName("pApr");

                    b.Property<int?>("PAug")
                        .HasColumnType("int")
                        .HasColumnName("pAug");

                    b.Property<int?>("PDec")
                        .HasColumnType("int")
                        .HasColumnName("pDec");

                    b.Property<int?>("PFeb")
                        .HasColumnType("int")
                        .HasColumnName("pFeb");

                    b.Property<int?>("PJan")
                        .HasColumnType("int")
                        .HasColumnName("pJan");

                    b.Property<int?>("PJul")
                        .HasColumnType("int")
                        .HasColumnName("pJul");

                    b.Property<int?>("PJun")
                        .HasColumnType("int")
                        .HasColumnName("pJun");

                    b.Property<int?>("PMar")
                        .HasColumnType("int")
                        .HasColumnName("pMar");

                    b.Property<int?>("PMay")
                        .HasColumnType("int")
                        .HasColumnName("pMay");

                    b.Property<int?>("PNov")
                        .HasColumnType("int")
                        .HasColumnName("pNov");

                    b.Property<int?>("POct")
                        .HasColumnType("int")
                        .HasColumnName("pOct");

                    b.Property<int?>("PSep")
                        .HasColumnType("int")
                        .HasColumnName("pSep");

                    b.Property<int?>("PreJan")
                        .HasColumnType("int")
                        .HasColumnName("preJan");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_Earnleave_MonthlyInfo1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VEmpContactInfo", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmergencyAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmergencyPhoneNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpRelation")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.ToTable((string)null);

                    b.ToView("V_EmpContactInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VEmpRejoinSheet", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.ToTable((string)null);

                    b.ToView("v_EmpRejoinSheet", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VEmployeeDetail", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Age")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<double?>("AttendanceBonus")
                        .HasColumnType("float");

                    b.Property<bool?>("AuthorizedPerson")
                        .HasColumnType("bit");

                    b.Property<short?>("BankId")
                        .HasColumnType("smallint");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("BonusType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyLogo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateofUpdate")
                        .HasColumnType("date");

                    b.Property<double?>("DormitoryRent")
                        .HasColumnType("float");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DstBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("EarnedLeave")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("EarnedLeaveEffectedFrom")
                        .HasColumnType("date");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpAccountNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpDutyType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<TimeOnly?>("EmpEndLunch")
                        .HasColumnType("time");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("EmpJoinigSalary")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpPicture")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpShiftStartDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("EmpStartLunch")
                        .HasColumnType("time");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("ExpireDate")
                        .HasColumnType("date");

                    b.Property<string>("FatherNameBn")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("GName");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("HolidayAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("HouseRentPersent")
                        .HasColumnType("float")
                        .HasColumnName("HouseRent_Persent");

                    b.Property<double?>("IncrementAmount")
                        .HasColumnType("float");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsSingleRateOt")
                        .HasColumnType("bit")
                        .HasColumnName("IsSingleRateOT");

                    b.Property<bool?>("IsTransferredToCompliance")
                        .HasColumnType("bit");

                    b.Property<string>("JoiningMonthYear")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("LastEdQualification")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("LunchAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("LunchCount")
                        .HasColumnType("bit");

                    b.Property<double?>("Medical")
                        .HasColumnType("float");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("NightAllownce")
                        .HasColumnType("float");

                    b.Property<string>("NoOfExperience")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("OverTime")
                        .HasColumnType("bit");

                    b.Property<int?>("PerCity")
                        .HasColumnType("int");

                    b.Property<string>("PerPobangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PerPOBangla");

                    b.Property<string>("PerVillageBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("PfDate")
                        .HasColumnType("date");

                    b.Property<bool?>("PfMember")
                        .HasColumnType("bit");

                    b.Property<double?>("PfPersent")
                        .HasColumnType("float")
                        .HasColumnName("PF_Persent");

                    b.Property<double?>("Pfamount")
                        .HasColumnType("float")
                        .HasColumnName("PFAmount");

                    b.Property<double?>("PreAttendanceBonus")
                        .HasColumnType("float");

                    b.Property<double?>("PreBasicSalary")
                        .HasColumnType("float");

                    b.Property<double?>("PreConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<string>("PreEmpDutyType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<double?>("PreFoodAllownce")
                        .HasColumnType("float");

                    b.Property<string>("PreGrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("PreHolidayAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreHouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("PreLunchAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreMedicalAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreNightAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreOthersAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreTechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreTiffinAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("PunchType")
                        .HasColumnType("bit");

                    b.Property<string>("RealProximityNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("Rid")
                        .HasColumnType("smallint")
                        .HasColumnName("RId");

                    b.Property<string>("Rname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RName");

                    b.Property<string>("RnameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RNameBn");

                    b.Property<bool?>("SalaryCount")
                        .HasColumnType("bit");

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SftNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ShiftTransferDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SignatureImage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<double?>("TechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("ThaNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("TiffinAllownce")
                        .HasColumnType("float");

                    b.Property<string>("Tin")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("WeekendType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.ToTable((string)null);

                    b.ToView("v_EmployeeDetails", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VEmployeeDetails1", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Age")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<double?>("AttendanceBonus")
                        .HasColumnType("float");

                    b.Property<bool?>("AuthorizedPerson")
                        .HasColumnType("bit");

                    b.Property<short?>("BankId")
                        .HasColumnType("smallint");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("BonusType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyLogo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateofUpdate")
                        .HasColumnType("date");

                    b.Property<double?>("DormitoryRent")
                        .HasColumnType("float");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DstBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("EarnedLeave")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("EarnedLeaveEffectedFrom")
                        .HasColumnType("date");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpAccountNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpDutyType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<TimeOnly?>("EmpEndLunch")
                        .HasColumnType("time");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("EmpJoinigSalary")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpPicture")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpShiftStartDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("EmpStartLunch")
                        .HasColumnType("time");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("ExpireDate")
                        .HasColumnType("date");

                    b.Property<string>("FatherNameBn")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("GName");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("HolidayAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("HouseRentPersent")
                        .HasColumnType("float")
                        .HasColumnName("HouseRent_Persent");

                    b.Property<double?>("IncrementAmount")
                        .HasColumnType("float");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsSingleRateOt")
                        .HasColumnType("bit")
                        .HasColumnName("IsSingleRateOT");

                    b.Property<string>("JoiningMonthYear")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("LastEdQualification")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("LunchAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("LunchCount")
                        .HasColumnType("bit");

                    b.Property<double?>("Medical")
                        .HasColumnType("float");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("NightAllownce")
                        .HasColumnType("float");

                    b.Property<string>("NoOfExperience")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("OverTime")
                        .HasColumnType("bit");

                    b.Property<int?>("PerCity")
                        .HasColumnType("int");

                    b.Property<string>("PerPobangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PerPOBangla");

                    b.Property<string>("PerVillageBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("PfDate")
                        .HasColumnType("date");

                    b.Property<bool?>("PfMember")
                        .HasColumnType("bit");

                    b.Property<double?>("PfPersent")
                        .HasColumnType("float")
                        .HasColumnName("PF_Persent");

                    b.Property<double?>("Pfamount")
                        .HasColumnType("float")
                        .HasColumnName("PFAmount");

                    b.Property<double?>("PreAttendanceBonus")
                        .HasColumnType("float");

                    b.Property<double?>("PreBasicSalary")
                        .HasColumnType("float");

                    b.Property<double?>("PreConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<string>("PreEmpDutyType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<double?>("PreFoodAllownce")
                        .HasColumnType("float");

                    b.Property<string>("PreGrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("PreHolidayAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreHouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("PreLunchAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreMedicalAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreNightAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreOthersAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreTechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreTiffinAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("PunchType")
                        .HasColumnType("bit");

                    b.Property<string>("RealProximityNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("Rid")
                        .HasColumnType("smallint")
                        .HasColumnName("RId");

                    b.Property<string>("Rname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RName");

                    b.Property<string>("RnameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RNameBn");

                    b.Property<bool?>("SalaryCount")
                        .HasColumnType("bit");

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SftNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ShiftTransferDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SignatureImage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<double?>("TechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("ThaNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("TiffinAllownce")
                        .HasColumnType("float");

                    b.Property<string>("Tin")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.ToTable((string)null);

                    b.ToView("v_EmployeeDetails1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VEmployeeExperience", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Designation")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("JoiningDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ResignDate")
                        .HasColumnType("date");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<string>("YearOfExp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable((string)null);

                    b.ToView("v_EmployeeExperience", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VEmployeeProfile", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Age")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("BankName")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmergencyAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmergencyPhoneNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpAccountNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("EmpJoinigSalary")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpPicture")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpRelation")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("EmpTypeBn")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FamilyAge")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("FatherName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FatherNameBn")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<string>("Gender")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("GrdNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Height")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<string>("JobDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MaritialStatus")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MotherName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MotherNameBn")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("MotherNameBN");

                    b.Property<string>("NationIdcardNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NationIDCardNo");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("NumberofChild")
                        .HasColumnType("smallint");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("OverTime")
                        .HasColumnType("bit");

                    b.Property<int?>("PerCity")
                        .HasColumnType("int");

                    b.Property<string>("PerDstBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PerDstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PerPo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PerPO");

                    b.Property<string>("PerPobangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PerPOBangla");

                    b.Property<string>("PerPostBox")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PerThNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PerThaName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("PerVillage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PerVillageBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PermanentAd")
                        .HasMaxLength(245)
                        .IsUnicode(false)
                        .HasColumnType("varchar(245)");

                    b.Property<int?>("PreCity")
                        .HasColumnType("int");

                    b.Property<string>("PreDstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PrePo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PrePO");

                    b.Property<string>("PrePostBox")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PreThaName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("PreVillage")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("PresentAd")
                        .HasMaxLength(265)
                        .IsUnicode(false)
                        .HasColumnType("varchar(265)");

                    b.Property<string>("RealProximityNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Rname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RName");

                    b.Property<string>("RnameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RNameBn");

                    b.Property<string>("SalaryCount")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SftName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SignatureImage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<string>("Telephone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("WagesType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Weight")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable((string)null);

                    b.ToView("v_EmployeeProfile", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VFirstInLastOut", b =>
                {
                    b.Property<string>("AttDate")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Badgenumber")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("Intime")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("INTIME");

                    b.Property<string>("Outtime")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("OUTTIME");

                    b.ToTable((string)null);

                    b.ToView("v_FirstInLastOut", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VForShiftChangeReport", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("SftEndTime")
                        .HasColumnType("time");

                    b.Property<int?>("SftId")
                        .HasColumnType("int");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<TimeOnly?>("SftStartTime")
                        .HasColumnType("time");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.ToTable((string)null);

                    b.ToView("v_ForShiftChangeReport", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VHrdCompanyInfo", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("AttMachineName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BtypeName")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("BTypeName");

                    b.Property<short?>("BusinessType")
                        .HasColumnType("smallint");

                    b.Property<string>("ComType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Comments")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyLogo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DefaultCurrency")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Fax")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<short>("Id")
                        .HasColumnType("smallint")
                        .HasColumnName("ID");

                    b.Property<bool?>("MultipleBranch")
                        .HasColumnType("bit");

                    b.Property<string>("ShortName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("StartCardNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Weekend")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.ToTable((string)null);

                    b.ToView("v_HRD_companyInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VHrdDepartment", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("DptStatus")
                        .HasColumnType("bit");

                    b.Property<short>("Sl")
                        .HasColumnType("smallint")
                        .HasColumnName("SL");

                    b.ToTable((string)null);

                    b.ToView("v_HRD_Department", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VHrdDesignation", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DsgShortName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("DsgStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("Ordering")
                        .HasColumnType("int");

                    b.Property<short>("Sl")
                        .HasColumnType("smallint")
                        .HasColumnName("SL");

                    b.ToTable((string)null);

                    b.ToView("v_HRD_Designation", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VHrdGroup", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GName");

                    b.Property<string>("GnameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("GNameBn");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.ToTable((string)null);

                    b.ToView("V_HRD_Group", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VHrdShift", b =>
                {
                    b.Property<short?>("AcceptableTimeAsOt")
                        .HasColumnType("smallint")
                        .HasColumnName("AcceptableTimeAsOT");

                    b.Property<string>("ActiveStatus")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<TimeOnly?>("BreakEndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("BreakStartTime")
                        .HasColumnType("time");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EndPunchCountTime12Fomat")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("EndTime12Fomat")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("FromDate")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInitial")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNight")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNightShiftForReport")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Otstatus")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("OTStatus");

                    b.Property<string>("PunchCountTime12Fomat")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<short?>("SftAcceptableLate")
                        .HasColumnType("smallint");

                    b.Property<TimeOnly?>("SftEndTime")
                        .HasColumnType("time");

                    b.Property<short>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SftNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("SftOverTime")
                        .HasColumnType("bit");

                    b.Property<TimeOnly?>("SftStartTime")
                        .HasColumnType("time");

                    b.Property<string>("StartTime12Fromat")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("ToDate")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.ToTable((string)null);

                    b.ToView("v_HRD_Shift", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VLeaveLeaveApplication", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateOnly?>("ApplyDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AuthorizedBy")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("AuthorizedByCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CurrentProcessStatus")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EmpStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FirstAcceptDate")
                        .HasColumnType("date");

                    b.Property<bool?>("FirstInstallmentSignature")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("FromYear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GName");

                    b.Property<double?>("InstallmentAmount")
                        .HasColumnType("float");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsProcessessed")
                        .HasColumnType("bit");

                    b.Property<long>("Lacode")
                        .HasColumnType("bigint")
                        .HasColumnName("LACode");

                    b.Property<string>("LeaveFormSlno")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("LeaveFormSLNo");

                    b.Property<int>("LeaveId")
                        .HasColumnType("int");

                    b.Property<string>("LeaveName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("LeaveProcessingOrder")
                        .HasColumnType("smallint");

                    b.Property<string>("LvAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LvContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("NumberofChild")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("PrasaberaDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("PregnantDate")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("SecondAcceptDate")
                        .HasColumnType("date");

                    b.Property<bool?>("SecondInstallmentSignature")
                        .HasColumnType("bit");

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StateStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.Property<string>("ToYear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int?>("TotalLeave")
                        .HasColumnType("int");

                    b.Property<int?>("UseLeave")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("WeekHolydayNo")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_Leave_LeaveApplication", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VLeaveLeaveApplicationDetail", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("FromYear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<long>("Lacode")
                        .HasColumnType("bigint")
                        .HasColumnName("LACode");

                    b.Property<DateOnly?>("LeaveDate")
                        .HasColumnType("date");

                    b.Property<int?>("LeaveDays")
                        .HasColumnType("int");

                    b.Property<int>("LeaveId")
                        .HasColumnType("int");

                    b.Property<string>("LeaveName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SftName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<bool?>("Used")
                        .HasColumnType("bit");

                    b.ToTable((string)null);

                    b.ToView("v_Leave_LeaveApplicationDetails", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VLeaveLeaveApplicationLog", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<DateOnly?>("ApplyDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ApprovedRejected")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("AuthorizedBy")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("AuthorizedByCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CurrentProcessStatus")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EmpStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("FromYear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GName");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsProcessessed")
                        .HasColumnType("bit");

                    b.Property<long>("Lacode")
                        .HasColumnType("bigint")
                        .HasColumnName("LACode");

                    b.Property<string>("LeaveFormSlno")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("LeaveFormSLNo");

                    b.Property<int>("LeaveId")
                        .HasColumnType("int");

                    b.Property<string>("LeaveName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("LeaveProcessingOrder")
                        .HasColumnType("smallint");

                    b.Property<string>("LvAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LvContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("PrasaberaDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("PregnantDate")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StateStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.Property<string>("ToYear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("WeekHolydayNo")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_Leave_LeaveApplication_Log", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VLeaveMaterintyVoucher", b =>
                {
                    b.Property<double?>("AverageWages")
                        .HasColumnType("float");

                    b.Property<short?>("DptId")
                        .HasColumnType("smallint");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("DsgId")
                        .HasColumnType("smallint");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("FirstAcceptDate")
                        .HasColumnType("date");

                    b.Property<bool?>("FirstInstallmentSignature")
                        .HasColumnType("bit");

                    b.Property<double?>("InstallmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("MlvoucherNo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("MLVoucherNo");

                    b.Property<DateOnly?>("SecondAcceptDate")
                        .HasColumnType("date");

                    b.Property<bool?>("SecondInstallmentSignature")
                        .HasColumnType("bit");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    b.Property<double?>("ThreeMonthsTotalPaymentWithBonus")
                        .HasColumnType("float");

                    b.Property<int?>("TotalPresentDays")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_Leave_MaterintyVoucher", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VLeaveMaterintyVoucherDetail", b =>
                {
                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<double?>("AverageWages")
                        .HasColumnType("float");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("InstallmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("MlvoucherNo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("MLVoucherNo");

                    b.Property<string>("MonthId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("PresentDays")
                        .HasColumnType("int");

                    b.Property<double?>("TakenBonus")
                        .HasColumnType("float");

                    b.Property<double?>("TakenWages")
                        .HasColumnType("float");

                    b.Property<double?>("ThreeMonthsTotalPaymentWithBonus")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("v_Leave_MaterintyVoucher_Details", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VLeaveShortLeave", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Expr1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<TimeOnly?>("FromTime")
                        .HasColumnType("time");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<string>("LeaveId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LeaveID");

                    b.Property<short?>("LeaveProcessingOrder")
                        .HasColumnType("smallint");

                    b.Property<DateOnly>("LvDate")
                        .HasColumnType("date");

                    b.Property<short?>("LvStatus")
                        .HasColumnType("smallint");

                    b.Property<TimeOnly>("LvTime")
                        .HasColumnType("time");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("SrLvId")
                        .HasColumnType("int")
                        .HasColumnName("SrLvID");

                    b.Property<TimeOnly?>("ToTime")
                        .HasColumnType("time");

                    b.ToTable((string)null);

                    b.ToView("v_Leave_ShortLeave", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VLeaveYearlyEarnLeaveGeneration", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EarnLeaveEndYear")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EarnLeavePerviousStartYear")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EldateForReport")
                        .HasColumnType("date")
                        .HasColumnName("ELDateForReport");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("GenerateDate")
                        .HasColumnType("date");

                    b.Property<string>("GenerateMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("NetTotal")
                        .HasColumnType("float");

                    b.Property<int?>("PayableDays")
                        .HasColumnType("int");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    b.Property<short?>("SpendDays")
                        .HasColumnType("smallint");

                    b.Property<int?>("WorkingDays")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_Leave_YearlyEarnLeaveGeneration", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VLineConfig", b =>
                {
                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("v_LineConfig", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VMailChatInfo", b =>
                {
                    b.Property<DateOnly?>("Cdate")
                        .HasColumnType("date")
                        .HasColumnName("CDate");

                    b.Property<string>("CdateTime")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("CDateTime");

                    b.Property<long>("Cid")
                        .HasColumnType("bigint")
                        .HasColumnName("CId");

                    b.Property<TimeOnly?>("Ctime")
                        .HasColumnType("time")
                        .HasColumnName("CTime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<long?>("RxUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<long?>("TxUserId")
                        .HasColumnType("bigint");

                    b.ToTable((string)null);

                    b.ToView("v_Mail_ChatInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VMailComplainInfo", b =>
                {
                    b.Property<DateOnly?>("Cdate")
                        .HasColumnType("date")
                        .HasColumnName("CDate");

                    b.Property<long>("ComId")
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<TimeOnly?>("Ctime")
                        .HasColumnType("time")
                        .HasColumnName("CTime");

                    b.Property<string>("Details")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleType")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("RxUserId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.ToTable((string)null);

                    b.ToView("v_Mail_Complain_Info", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VMailComposeMailInfo", b =>
                {
                    b.Property<DateOnly?>("Cdate")
                        .HasColumnType("date")
                        .HasColumnName("CDate");

                    b.Property<long>("ComposeMailId")
                        .HasColumnType("bigint")
                        .HasColumnName("ComposeMail_Id");

                    b.Property<TimeOnly?>("Ctime")
                        .HasColumnType("time")
                        .HasColumnName("CTime");

                    b.Property<string>("Details")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RxCompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("RxUserId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TxCompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable((string)null);

                    b.ToView("v_Mail_ComposeMail_Info", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VManPowerStatus", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("DptId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<short?>("Female")
                        .HasColumnType("smallint");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<short?>("Male")
                        .HasColumnType("smallint");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.ToTable((string)null);

                    b.ToView("v_ManPowerStatus", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VManpowerProcess", b =>
                {
                    b.Property<DateOnly?>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EffectiveDateSeparation")
                        .HasColumnType("date");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<short?>("Female")
                        .HasColumnType("smallint");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<short?>("Male")
                        .HasColumnType("smallint");

                    b.Property<int?>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.ToTable((string)null);

                    b.ToView("v_ManpowerProcess", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VMoanthlyAttendanceSheetReport", b =>
                {
                    b.Property<int?>("A")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GName");

                    b.Property<int?>("H")
                        .HasColumnType("int");

                    b.Property<int?>("Lv")
                        .HasColumnType("int")
                        .HasColumnName("LV");

                    b.Property<int?>("MonthlyTotalOt")
                        .HasColumnType("int")
                        .HasColumnName("MonthlyTotalOT");

                    b.Property<int?>("P")
                        .HasColumnType("int");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("W")
                        .HasColumnType("int");

                    b.Property<int?>("_1")
                        .HasColumnType("int")
                        .HasColumnName("1");

                    b.Property<int?>("_10")
                        .HasColumnType("int")
                        .HasColumnName("10");

                    b.Property<int?>("_10Ot")
                        .HasColumnType("int")
                        .HasColumnName("10_OT");

                    b.Property<int?>("_11")
                        .HasColumnType("int")
                        .HasColumnName("11");

                    b.Property<int?>("_11Ot")
                        .HasColumnType("int")
                        .HasColumnName("11_OT");

                    b.Property<int?>("_12")
                        .HasColumnType("int")
                        .HasColumnName("12");

                    b.Property<int?>("_12Ot")
                        .HasColumnType("int")
                        .HasColumnName("12_OT");

                    b.Property<int?>("_13")
                        .HasColumnType("int")
                        .HasColumnName("13");

                    b.Property<int?>("_13Ot")
                        .HasColumnType("int")
                        .HasColumnName("13_OT");

                    b.Property<int?>("_14")
                        .HasColumnType("int")
                        .HasColumnName("14");

                    b.Property<int?>("_14Ot")
                        .HasColumnType("int")
                        .HasColumnName("14_OT");

                    b.Property<int?>("_15")
                        .HasColumnType("int")
                        .HasColumnName("15");

                    b.Property<int?>("_15Ot")
                        .HasColumnType("int")
                        .HasColumnName("15_OT");

                    b.Property<int?>("_16")
                        .HasColumnType("int")
                        .HasColumnName("16");

                    b.Property<int?>("_16Ot")
                        .HasColumnType("int")
                        .HasColumnName("16_OT");

                    b.Property<int?>("_17")
                        .HasColumnType("int")
                        .HasColumnName("17");

                    b.Property<int?>("_17Ot")
                        .HasColumnType("int")
                        .HasColumnName("17_OT");

                    b.Property<int?>("_18")
                        .HasColumnType("int")
                        .HasColumnName("18");

                    b.Property<int?>("_18Ot")
                        .HasColumnType("int")
                        .HasColumnName("18_OT");

                    b.Property<int?>("_19")
                        .HasColumnType("int")
                        .HasColumnName("19");

                    b.Property<int?>("_19Ot")
                        .HasColumnType("int")
                        .HasColumnName("19_OT");

                    b.Property<int?>("_1Ot")
                        .HasColumnType("int")
                        .HasColumnName("1_OT");

                    b.Property<int?>("_2")
                        .HasColumnType("int")
                        .HasColumnName("2");

                    b.Property<int?>("_20")
                        .HasColumnType("int")
                        .HasColumnName("20");

                    b.Property<int?>("_20Ot")
                        .HasColumnType("int")
                        .HasColumnName("20_OT");

                    b.Property<int?>("_21")
                        .HasColumnType("int")
                        .HasColumnName("21");

                    b.Property<int?>("_21Ot")
                        .HasColumnType("int")
                        .HasColumnName("21_OT");

                    b.Property<int?>("_22")
                        .HasColumnType("int")
                        .HasColumnName("22");

                    b.Property<int?>("_22Ot")
                        .HasColumnType("int")
                        .HasColumnName("22_OT");

                    b.Property<int?>("_23")
                        .HasColumnType("int")
                        .HasColumnName("23");

                    b.Property<int?>("_23Ot")
                        .HasColumnType("int")
                        .HasColumnName("23_OT");

                    b.Property<int?>("_24")
                        .HasColumnType("int")
                        .HasColumnName("24");

                    b.Property<int?>("_24Ot")
                        .HasColumnType("int")
                        .HasColumnName("24_OT");

                    b.Property<int?>("_25")
                        .HasColumnType("int")
                        .HasColumnName("25");

                    b.Property<int?>("_25Ot")
                        .HasColumnType("int")
                        .HasColumnName("25_OT");

                    b.Property<int?>("_26")
                        .HasColumnType("int")
                        .HasColumnName("26");

                    b.Property<int?>("_26Ot")
                        .HasColumnType("int")
                        .HasColumnName("26_OT");

                    b.Property<int?>("_27")
                        .HasColumnType("int")
                        .HasColumnName("27");

                    b.Property<int?>("_27Ot")
                        .HasColumnType("int")
                        .HasColumnName("27_OT");

                    b.Property<int?>("_28")
                        .HasColumnType("int")
                        .HasColumnName("28");

                    b.Property<int?>("_28Ot")
                        .HasColumnType("int")
                        .HasColumnName("28_OT");

                    b.Property<int?>("_29")
                        .HasColumnType("int")
                        .HasColumnName("29");

                    b.Property<int?>("_29Ot")
                        .HasColumnType("int")
                        .HasColumnName("29_OT");

                    b.Property<int?>("_2Ot")
                        .HasColumnType("int")
                        .HasColumnName("2_OT");

                    b.Property<int?>("_3")
                        .HasColumnType("int")
                        .HasColumnName("3");

                    b.Property<int?>("_30")
                        .HasColumnType("int")
                        .HasColumnName("30");

                    b.Property<int?>("_30Ot")
                        .HasColumnType("int")
                        .HasColumnName("30_OT");

                    b.Property<int?>("_31")
                        .HasColumnType("int")
                        .HasColumnName("31");

                    b.Property<int?>("_31Ot")
                        .HasColumnType("int")
                        .HasColumnName("31_OT");

                    b.Property<int?>("_3Ot")
                        .HasColumnType("int")
                        .HasColumnName("3_OT");

                    b.Property<int?>("_4")
                        .HasColumnType("int")
                        .HasColumnName("4");

                    b.Property<int?>("_4Ot")
                        .HasColumnType("int")
                        .HasColumnName("4_OT");

                    b.Property<int?>("_5")
                        .HasColumnType("int")
                        .HasColumnName("5");

                    b.Property<int?>("_5Ot")
                        .HasColumnType("int")
                        .HasColumnName("5_OT");

                    b.Property<int?>("_6")
                        .HasColumnType("int")
                        .HasColumnName("6");

                    b.Property<int?>("_6Ot")
                        .HasColumnType("int")
                        .HasColumnName("6_OT");

                    b.Property<int?>("_7")
                        .HasColumnType("int")
                        .HasColumnName("7");

                    b.Property<int?>("_7Ot")
                        .HasColumnType("int")
                        .HasColumnName("7_OT");

                    b.Property<int?>("_8")
                        .HasColumnType("int")
                        .HasColumnName("8");

                    b.Property<int?>("_8Ot")
                        .HasColumnType("int")
                        .HasColumnName("8_OT");

                    b.Property<int?>("_9")
                        .HasColumnType("int")
                        .HasColumnName("9");

                    b.Property<int?>("_9Ot")
                        .HasColumnType("int")
                        .HasColumnName("9_OT");

                    b.ToTable((string)null);

                    b.ToView("v_Moanthly_Attendance_Sheet_Report", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VMonthlyAttendance", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<int?>("Ad")
                        .HasColumnType("int")
                        .HasColumnName("AD");

                    b.Property<int?>("Cl")
                        .HasColumnType("int")
                        .HasColumnName("CL");

                    b.Property<string>("Day1")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day1");

                    b.Property<string>("Day10")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day10");

                    b.Property<string>("Day11")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day11");

                    b.Property<string>("Day12")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day12");

                    b.Property<string>("Day13")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day13");

                    b.Property<string>("Day14")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day14");

                    b.Property<string>("Day15")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day15");

                    b.Property<string>("Day16")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day16");

                    b.Property<string>("Day17")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day17");

                    b.Property<string>("Day18")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day18");

                    b.Property<string>("Day19")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day19");

                    b.Property<string>("Day2")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day2");

                    b.Property<string>("Day20")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day20");

                    b.Property<string>("Day21")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day21");

                    b.Property<string>("Day22")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day22");

                    b.Property<string>("Day23")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day23");

                    b.Property<string>("Day24")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day24");

                    b.Property<string>("Day25")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day25");

                    b.Property<string>("Day26")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day26");

                    b.Property<string>("Day27")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day27");

                    b.Property<string>("Day28")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day28");

                    b.Property<string>("Day29")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day29");

                    b.Property<string>("Day3")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day3");

                    b.Property<string>("Day30")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day30");

                    b.Property<string>("Day31")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day31");

                    b.Property<string>("Day4")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day4");

                    b.Property<string>("Day5")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day5");

                    b.Property<string>("Day6")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day6");

                    b.Property<string>("Day7")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day7");

                    b.Property<string>("Day8")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day8");

                    b.Property<string>("Day9")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("day9");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("El")
                        .HasColumnType("int")
                        .HasColumnName("EL");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Holiday")
                        .HasColumnType("int");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<int?>("Pd")
                        .HasColumnType("int")
                        .HasColumnName("PD");

                    b.Property<int?>("Sl")
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    b.Property<int?>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<int?>("Totaldays")
                        .HasColumnType("int");

                    b.Property<int?>("Weckend")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_MonthlyAttendance", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VMonthlyOt", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<double?>("Ot1")
                        .HasColumnType("float")
                        .HasColumnName("OT1");

                    b.Property<double?>("Ot2")
                        .HasColumnType("float")
                        .HasColumnName("OT2");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.ToTable((string)null);

                    b.ToView("v_MonthlyOT", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VMonthlySalaryFlowReport", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Month")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("MonthName")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double?>("TotalSalary")
                        .HasColumnType("float");

                    b.Property<string>("Year")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.ToTable((string)null);

                    b.ToView("v_Monthly_Salary_Flow_Report", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VMonthlySalarySheet", b =>
                {
                    b.Property<short?>("AbsentDay")
                        .HasColumnType("smallint");

                    b.Property<double?>("AbsentDeduction")
                        .HasColumnType("float");

                    b.Property<short?>("Activeday")
                        .HasColumnType("smallint");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<double?>("AdvanceDeduction")
                        .HasColumnType("float");

                    b.Property<short?>("AnnualLeave")
                        .HasColumnType("smallint");

                    b.Property<double?>("AttendanceBonus")
                        .HasColumnType("float");

                    b.Property<string>("BankName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<short?>("CasualLeave")
                        .HasColumnType("smallint");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<short?>("DaysInMonth")
                        .HasColumnType("smallint");

                    b.Property<double?>("DormitoryRent")
                        .HasColumnType("float");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpAccountNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("EmpNetGross")
                        .HasColumnType("float");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("EmpSeparationId")
                        .HasColumnType("int");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<double?>("ExtraOtamount")
                        .HasColumnType("float")
                        .HasColumnName("ExtraOTAmount");

                    b.Property<double?>("ExtraOthour")
                        .HasColumnType("float")
                        .HasColumnName("ExtraOTHour");

                    b.Property<short?>("FestivalHoliday")
                        .HasColumnType("smallint");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("GName");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GrdNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("HoliDayBillAmount")
                        .HasColumnType("float");

                    b.Property<double?>("HolidayTaka")
                        .HasColumnType("float");

                    b.Property<int?>("HolidayWorkingDays")
                        .HasColumnType("int");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<short?>("IsSeperationGeneration")
                        .HasColumnType("smallint");

                    b.Property<int?>("LateDays")
                        .HasColumnType("int");

                    b.Property<double?>("LateFine")
                        .HasColumnType("float");

                    b.Property<double?>("LoanDeduction")
                        .HasColumnType("float");

                    b.Property<double?>("LunchAllowance")
                        .HasColumnType("float");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("NetPayable")
                        .HasColumnType("float");

                    b.Property<double?>("NetPayableWithAllOtamt")
                        .HasColumnType("float")
                        .HasColumnName("NetPayableWithAllOTAmt");

                    b.Property<short?>("NightBillDays")
                        .HasColumnType("smallint");

                    b.Property<double?>("NightbilAmount")
                        .HasColumnType("float");

                    b.Property<short?>("OfficialLeave")
                        .HasColumnType("smallint");

                    b.Property<double?>("OtamountForBuyer")
                        .HasColumnType("float")
                        .HasColumnName("OTAmountForBuyer");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("OthersDeduction")
                        .HasColumnType("float");

                    b.Property<short?>("OthersLeave")
                        .HasColumnType("smallint");

                    b.Property<double?>("OthersPay")
                        .HasColumnType("float");

                    b.Property<double?>("OthourForBuyer")
                        .HasColumnType("float")
                        .HasColumnName("OTHourForBuyer");

                    b.Property<double?>("Otrate")
                        .HasColumnType("float")
                        .HasColumnName("OTRate");

                    b.Property<string>("OverTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("OverTimeAmount")
                        .HasColumnType("float");

                    b.Property<double?>("Payable")
                        .HasColumnType("float");

                    b.Property<short?>("PayableDays")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("PfDate")
                        .HasColumnType("date");

                    b.Property<bool?>("PfMember")
                        .HasColumnType("bit");

                    b.Property<short?>("PresentDay")
                        .HasColumnType("smallint");

                    b.Property<double?>("ProfitTax")
                        .HasColumnType("float");

                    b.Property<double?>("ProvidentFund")
                        .HasColumnType("float");

                    b.Property<string>("SalaryCount")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("SeparationType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SeparationTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("ShortLeave")
                        .HasColumnType("smallint");

                    b.Property<short?>("SickLeave")
                        .HasColumnType("smallint");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint");

                    b.Property<int>("Staff")
                        .HasColumnType("int");

                    b.Property<short?>("Stampdeduct")
                        .HasColumnType("smallint");

                    b.Property<double?>("TechnicalAllowance")
                        .HasColumnType("float");

                    b.Property<double?>("TiffinBillAmount")
                        .HasColumnType("float");

                    b.Property<int?>("TiffinDays")
                        .HasColumnType("int");

                    b.Property<double?>("TiffinTaka")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.Property<double?>("TotalOtamount")
                        .HasColumnType("float")
                        .HasColumnName("TotalOTAmount");

                    b.Property<string>("TotalOtherOverTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TotalOthour")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("TotalOTHour");

                    b.Property<string>("TotalOverTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("TotalSalary")
                        .HasColumnType("float");

                    b.Property<short?>("WeekendHoliday")
                        .HasColumnType("smallint");

                    b.Property<int>("Worker")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("YearMonth")
                        .HasColumnType("date");

                    b.ToTable((string)null);

                    b.ToView("v_MonthlySalarySheet", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VMonthlySalarySheet1", b =>
                {
                    b.Property<short?>("AbsentDay")
                        .HasColumnType("smallint");

                    b.Property<double?>("AbsentDeduction")
                        .HasColumnType("float");

                    b.Property<short?>("Activeday")
                        .HasColumnType("smallint");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<double?>("AdvanceDeduction")
                        .HasColumnType("float");

                    b.Property<short?>("AnnualLeave")
                        .HasColumnType("smallint");

                    b.Property<double?>("AttendanceBonus")
                        .HasColumnType("float");

                    b.Property<string>("BankName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<short?>("CasualLeave")
                        .HasColumnType("smallint");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<short?>("DaysInMonth")
                        .HasColumnType("smallint");

                    b.Property<double?>("DormitoryRent")
                        .HasColumnType("float");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpAccountNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("EmpNetGross")
                        .HasColumnType("float");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<double?>("ExtraOtamount")
                        .HasColumnType("float")
                        .HasColumnName("ExtraOTAmount");

                    b.Property<double?>("ExtraOthour")
                        .HasColumnType("float")
                        .HasColumnName("ExtraOTHour");

                    b.Property<short?>("FestivalHoliday")
                        .HasColumnType("smallint");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GName");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GrdNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("HoliDayBillAmount")
                        .HasColumnType("float");

                    b.Property<double?>("HolidayTaka")
                        .HasColumnType("float");

                    b.Property<int?>("HolidayWorkingDays")
                        .HasColumnType("int");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<short?>("IsSeperationGeneration")
                        .HasColumnType("smallint");

                    b.Property<int?>("LateDays")
                        .HasColumnType("int");

                    b.Property<double?>("LateFine")
                        .HasColumnType("float");

                    b.Property<double?>("LoanDeduction")
                        .HasColumnType("float");

                    b.Property<double?>("LunchAllowance")
                        .HasColumnType("float");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("NetPayable")
                        .HasColumnType("float");

                    b.Property<double?>("NetPayableWithAllOtamt")
                        .HasColumnType("float")
                        .HasColumnName("NetPayableWithAllOTAmt");

                    b.Property<short?>("NightBillDays")
                        .HasColumnType("smallint");

                    b.Property<double?>("NightbilAmount")
                        .HasColumnType("float");

                    b.Property<short?>("OfficialLeave")
                        .HasColumnType("smallint");

                    b.Property<double?>("OtamountForBuyer")
                        .HasColumnType("float")
                        .HasColumnName("OTAmountForBuyer");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("OthersDeduction")
                        .HasColumnType("float");

                    b.Property<short?>("OthersLeave")
                        .HasColumnType("smallint");

                    b.Property<double?>("OthersPay")
                        .HasColumnType("float");

                    b.Property<double?>("OthourForBuyer")
                        .HasColumnType("float")
                        .HasColumnName("OTHourForBuyer");

                    b.Property<double?>("Otrate")
                        .HasColumnType("float")
                        .HasColumnName("OTRate");

                    b.Property<double?>("Payable")
                        .HasColumnType("float");

                    b.Property<short?>("PayableDays")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("PfDate")
                        .HasColumnType("date");

                    b.Property<bool?>("PfMember")
                        .HasColumnType("bit");

                    b.Property<short?>("PresentDay")
                        .HasColumnType("smallint");

                    b.Property<double?>("ProfitTax")
                        .HasColumnType("float");

                    b.Property<double?>("ProvidentFund")
                        .HasColumnType("float");

                    b.Property<string>("SalaryCount")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("ShortLeave")
                        .HasColumnType("smallint");

                    b.Property<short?>("SickLeave")
                        .HasColumnType("smallint");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint");

                    b.Property<int>("Staff")
                        .HasColumnType("int");

                    b.Property<short?>("Stampdeduct")
                        .HasColumnType("smallint");

                    b.Property<double?>("TechnicalAllowance")
                        .HasColumnType("float");

                    b.Property<double?>("TiffinBillAmount")
                        .HasColumnType("float");

                    b.Property<int?>("TiffinDays")
                        .HasColumnType("int");

                    b.Property<double?>("TiffinTaka")
                        .HasColumnType("float");

                    b.Property<double?>("TotalOtamount")
                        .HasColumnType("float")
                        .HasColumnName("TotalOTAmount");

                    b.Property<string>("TotalOtherOverTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TotalOthour")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("TotalOTHour");

                    b.Property<string>("TotalOverTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("TotalSalary")
                        .HasColumnType("float");

                    b.Property<short?>("WeekendHoliday")
                        .HasColumnType("smallint");

                    b.Property<int>("Worker")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("YearMonth")
                        .HasColumnType("date");

                    b.ToTable((string)null);

                    b.ToView("v_MonthlySalarySheet1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollAdvanceInfo", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<decimal?>("AdvanceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("AdvanceId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("InstallmentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<short?>("InstallmentNo")
                        .HasColumnType("smallint");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("PaidInstallmentNo")
                        .HasColumnType("smallint");

                    b.Property<bool?>("PaidStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("SftId")
                        .HasColumnType("int");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    b.Property<DateOnly?>("StartMonth")
                        .HasColumnType("date");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_AdvanceInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollAdvanceSetting", b =>
                {
                    b.Property<decimal?>("AdvanceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("AdvanceId")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("InstallmentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<short?>("InstallmentNo")
                        .HasColumnType("smallint");

                    b.Property<short?>("PaidInstallmentNo")
                        .HasColumnType("smallint");

                    b.Property<string>("PaidMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    b.Property<DateOnly?>("StartMonth")
                        .HasColumnType("date");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_AdvanceSetting", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollBonusMonthSetup", b =>
                {
                    b.Property<int?>("Bid")
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    b.Property<string>("BonusType")
                        .HasMaxLength(114)
                        .IsUnicode(false)
                        .HasColumnType("varchar(114)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<short?>("Rid")
                        .HasColumnType("smallint")
                        .HasColumnName("RId");

                    b.Property<string>("Rname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RName");

                    b.Property<DateTime?>("SetupedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_BonusMonthSetup", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollBonusMonthSetup1", b =>
                {
                    b.Property<int?>("Bid")
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    b.Property<string>("BonusType")
                        .HasMaxLength(114)
                        .IsUnicode(false)
                        .HasColumnType("varchar(114)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<short?>("Rid")
                        .HasColumnType("smallint")
                        .HasColumnName("RId");

                    b.Property<string>("Rname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RName");

                    b.Property<DateTime?>("SetupedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_BonusMonthSetup1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollBonusSetup", b =>
                {
                    b.Property<int>("Bid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    b.Property<string>("BonusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("CalculationDate")
                        .HasColumnType("date");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateOnly?>("ConfigDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<short?>("Rid")
                        .HasColumnType("smallint")
                        .HasColumnName("RId");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Year")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_BonusSetup", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollBonusSetup1", b =>
                {
                    b.Property<int>("Bid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    b.Property<string>("BonusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("CalculationDate")
                        .HasColumnType("date");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateOnly?>("ConfigDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<short?>("Rid")
                        .HasColumnType("smallint")
                        .HasColumnName("RId");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Year")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_BonusSetup1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollBonusSetupDistinctRecord", b =>
                {
                    b.Property<int>("Bid")
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    b.Property<string>("BonusType")
                        .HasMaxLength(122)
                        .IsUnicode(false)
                        .HasColumnType("varchar(122)");

                    b.Property<DateOnly?>("CalculationDate")
                        .HasColumnType("date");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_BonusSetup_DistinctRecord", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollBonusSetupDistinctRecord1", b =>
                {
                    b.Property<int>("Bid")
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    b.Property<string>("BonusType")
                        .HasMaxLength(122)
                        .IsUnicode(false)
                        .HasColumnType("varchar(122)");

                    b.Property<DateOnly?>("CalculationDate")
                        .HasColumnType("date");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_BonusSetup_DistinctRecord1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollEarnLeavePaymentSheet", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CurrentYearEarnLeaveDays")
                        .HasColumnType("int");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<string>("DptId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("EmpStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("GenerateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Gid")
                        .HasColumnType("int")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GName");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsSeparated")
                        .HasColumnType("bit");

                    b.Property<int?>("NDec")
                        .HasColumnType("int")
                        .HasColumnName("nDec");

                    b.Property<double?>("OneDaySalary")
                        .HasColumnType("float");

                    b.Property<int?>("PApr")
                        .HasColumnType("int")
                        .HasColumnName("pApr");

                    b.Property<int?>("PAug")
                        .HasColumnType("int")
                        .HasColumnName("pAug");

                    b.Property<int?>("PDec")
                        .HasColumnType("int")
                        .HasColumnName("pDec");

                    b.Property<int?>("PFeb")
                        .HasColumnType("int")
                        .HasColumnName("pFeb");

                    b.Property<int?>("PJan")
                        .HasColumnType("int")
                        .HasColumnName("pJan");

                    b.Property<int?>("PJul")
                        .HasColumnType("int")
                        .HasColumnName("pJul");

                    b.Property<int?>("PJun")
                        .HasColumnType("int")
                        .HasColumnName("pJun");

                    b.Property<int?>("PMar")
                        .HasColumnType("int")
                        .HasColumnName("pMar");

                    b.Property<int?>("PMay")
                        .HasColumnType("int")
                        .HasColumnName("pMay");

                    b.Property<int?>("PNov")
                        .HasColumnType("int")
                        .HasColumnName("pNov");

                    b.Property<int?>("POct")
                        .HasColumnType("int")
                        .HasColumnName("pOct");

                    b.Property<int?>("PSep")
                        .HasColumnType("int")
                        .HasColumnName("pSep");

                    b.Property<double?>("PayableAmount")
                        .HasColumnType("float");

                    b.Property<short?>("PayableEarnLeaveDays")
                        .HasColumnType("smallint");

                    b.Property<int?>("PreJan")
                        .HasColumnType("int")
                        .HasColumnName("preJan");

                    b.Property<int?>("PreviousYearEarnLeaveDays")
                        .HasColumnType("int");

                    b.Property<double?>("ReserveEeanLeaveDays")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("ReserveFor")
                        .HasColumnType("date");

                    b.Property<short?>("SepntEarnLeaveDays")
                        .HasColumnType("smallint");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    b.Property<double?>("StampDeductions")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<double?>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<short?>("TotalEarnLeaveDays")
                        .HasColumnType("smallint");

                    b.Property<int>("TotalPresent")
                        .HasColumnType("int");

                    b.Property<double?>("WithdrawableEarnLeaveDays")
                        .HasColumnType("float");

                    b.Property<int?>("WithdrawableEarnLeavePer")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("YearMonth")
                        .HasColumnType("date");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_EarnLeavePaymentSheet", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollEarnLeavePaymentSheet1", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CurrentYearEarnLeaveDays")
                        .HasColumnType("int");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<string>("DptId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("EmpStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("GenerateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Gid")
                        .HasColumnType("int")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GName");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsSeparated")
                        .HasColumnType("bit");

                    b.Property<int?>("NDec")
                        .HasColumnType("int")
                        .HasColumnName("nDec");

                    b.Property<double?>("OneDaySalary")
                        .HasColumnType("float");

                    b.Property<int?>("PApr")
                        .HasColumnType("int")
                        .HasColumnName("pApr");

                    b.Property<int?>("PAug")
                        .HasColumnType("int")
                        .HasColumnName("pAug");

                    b.Property<int?>("PDec")
                        .HasColumnType("int")
                        .HasColumnName("pDec");

                    b.Property<int?>("PFeb")
                        .HasColumnType("int")
                        .HasColumnName("pFeb");

                    b.Property<int?>("PJan")
                        .HasColumnType("int")
                        .HasColumnName("pJan");

                    b.Property<int?>("PJul")
                        .HasColumnType("int")
                        .HasColumnName("pJul");

                    b.Property<int?>("PJun")
                        .HasColumnType("int")
                        .HasColumnName("pJun");

                    b.Property<int?>("PMar")
                        .HasColumnType("int")
                        .HasColumnName("pMar");

                    b.Property<int?>("PMay")
                        .HasColumnType("int")
                        .HasColumnName("pMay");

                    b.Property<int?>("PNov")
                        .HasColumnType("int")
                        .HasColumnName("pNov");

                    b.Property<int?>("POct")
                        .HasColumnType("int")
                        .HasColumnName("pOct");

                    b.Property<int?>("PSep")
                        .HasColumnType("int")
                        .HasColumnName("pSep");

                    b.Property<double?>("PayableAmount")
                        .HasColumnType("float");

                    b.Property<short?>("PayableEarnLeaveDays")
                        .HasColumnType("smallint");

                    b.Property<int?>("PreJan")
                        .HasColumnType("int")
                        .HasColumnName("preJan");

                    b.Property<int?>("PreviousYearEarnLeaveDays")
                        .HasColumnType("int");

                    b.Property<double?>("ReserveEeanLeaveDays")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("ReserveFor")
                        .HasColumnType("date");

                    b.Property<short?>("SepntEarnLeaveDays")
                        .HasColumnType("smallint");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    b.Property<double?>("StampDeductions")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<double?>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<short?>("TotalEarnLeaveDays")
                        .HasColumnType("smallint");

                    b.Property<int>("TotalPresent")
                        .HasColumnType("int");

                    b.Property<double?>("WithdrawableEarnLeaveDays")
                        .HasColumnType("float");

                    b.Property<int?>("WithdrawableEarnLeavePer")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("YearMonth")
                        .HasColumnType("date");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_EarnLeavePaymentSheet1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollHolidayAllowanceGenerate", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Hdate")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("HDate");

                    b.Property<double?>("HolidayAllownce")
                        .HasColumnType("float");

                    b.Property<string>("MonthYear")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_HolidayAllowanceGenerate", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollHolidayAllowanceGenerateDetail", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Hdate")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("HDate");

                    b.Property<double?>("HolidayAllownce")
                        .HasColumnType("float");

                    b.Property<string>("MonthYear")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int>("Sl")
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_HolidayAllowanceGenerateDetails", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollHolidayWeekendBill", b =>
                {
                    b.Property<DateOnly?>("AttDate")
                        .HasColumnType("date");

                    b.Property<string>("Did")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("DId");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ElapsedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("HolidayAllownce")
                        .HasColumnType("float");

                    b.Property<string>("InHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("InMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<string>("LnId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("LogIn")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("LogOut")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("OutHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("OutMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint");

                    b.Property<string>("StayTime")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("TotalWorkHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("TotalWorkMin")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_HolidayWeekendBill", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollLoanInfo", b =>
                {
                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("InstallmentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<short?>("InstallmentNo")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("LoanAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("LoanId")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("PaidInstallmentNo")
                        .HasColumnType("smallint");

                    b.Property<bool?>("PaidStatus")
                        .HasColumnType("bit");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    b.Property<string>("StartMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_LoanInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollLoanInfoDetail", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("DeductFrom")
                        .HasColumnType("date");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ExemptionReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double?>("InstallmentAmount")
                        .HasColumnType("float");

                    b.Property<int>("InstallmentAmountPaid")
                        .HasColumnType("int");

                    b.Property<string>("InstallmentMonth")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeletedDetails")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExemption")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("LastInstallmentAt")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<double?>("LoanAmount")
                        .HasColumnType("float");

                    b.Property<long>("LoanDetailsId")
                        .HasColumnType("bigint")
                        .HasColumnName("LoanDetailsID");

                    b.Property<long>("LoanId")
                        .HasColumnType("bigint")
                        .HasColumnName("LoanID");

                    b.Property<DateOnly?>("LoanTakeDate")
                        .HasColumnType("date");

                    b.Property<double?>("PaidAmount")
                        .HasColumnType("float");

                    b.Property<int?>("PaidInstallmentNo")
                        .HasColumnType("int");

                    b.Property<double?>("ParticularAmount")
                        .HasColumnType("float");

                    b.Property<string>("ParticularRemarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("StatusId")
                        .HasColumnType("smallint")
                        .HasColumnName("StatusID");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_LoanInfoDetails", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollLoanSetting", b =>
                {
                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("InstallmentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<short?>("InstallmentNo")
                        .HasColumnType("smallint");

                    b.Property<string>("LoanId")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)");

                    b.Property<short?>("PaidInstallmentNo")
                        .HasColumnType("smallint");

                    b.Property<string>("PaidMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    b.Property<string>("StartMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_LoanSetting", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollMonthlyNoteAmount", b =>
                {
                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("DptId")
                        .HasColumnType("int");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MonthName")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int?>("NoteName")
                        .HasColumnType("int");

                    b.Property<int?>("SftId")
                        .HasColumnType("int");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_MonthlyNoteAmount", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollOthersPay", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Oppurpose")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("OPpurpose");

                    b.Property<int>("Opsn")
                        .HasColumnType("int")
                        .HasColumnName("OPSN");

                    b.Property<double?>("OtherPay")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_OthersPay", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollPunishment", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MonthName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Pamount")
                        .HasColumnType("float")
                        .HasColumnName("PAmount");

                    b.Property<string>("Pname")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("PName");

                    b.Property<int>("Psn")
                        .HasColumnType("int")
                        .HasColumnName("PSN");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_Punishment", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollYearlyBonusSheet", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<int?>("Bid")
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    b.Property<double?>("BonusAmount")
                        .HasColumnType("float");

                    b.Property<string>("BonusMonth")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("bonusMonth");

                    b.Property<string>("BonusType")
                        .HasMaxLength(122)
                        .IsUnicode(false)
                        .HasColumnType("varchar(122)");

                    b.Property<DateOnly?>("CalculationDate")
                        .HasColumnType("date");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DsgShortName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("GenerateDate")
                        .HasColumnType("date");

                    b.Property<string>("GenerateOn")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GName");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float");

                    b.Property<double?>("PresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("SalaryCount")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<int?>("SftId")
                        .HasColumnType("int");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    b.Property<int>("Staff")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int>("Worker")
                        .HasColumnType("int");

                    b.Property<short?>("Year")
                        .HasColumnType("smallint");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_YearlyBonusSheet", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPayrollYearlyBonusSheet1", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<int?>("Bid")
                        .HasColumnType("int")
                        .HasColumnName("BId");

                    b.Property<double?>("BonusAmount")
                        .HasColumnType("float");

                    b.Property<string>("BonusMonth")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("bonusMonth");

                    b.Property<string>("BonusType")
                        .HasMaxLength(122)
                        .IsUnicode(false)
                        .HasColumnType("varchar(122)");

                    b.Property<DateOnly?>("CalculationDate")
                        .HasColumnType("date");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DsgShortName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("GenerateDate")
                        .HasColumnType("date");

                    b.Property<string>("GenerateOn")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("GName");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float");

                    b.Property<double?>("PresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("SalaryCount")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<int?>("SftId")
                        .HasColumnType("int");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    b.Property<int>("Staff")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int>("Worker")
                        .HasColumnType("int");

                    b.Property<short?>("Year")
                        .HasColumnType("smallint");

                    b.ToTable((string)null);

                    b.ToView("v_Payroll_YearlyBonusSheet1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPersonnelEmpCurrentStatus", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<double?>("AttendanceBonus")
                        .HasColumnType("float");

                    b.Property<short?>("BankId")
                        .HasColumnType("smallint");

                    b.Property<string>("BankName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<bool?>("BreakfastStatus")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateofUpdate")
                        .HasColumnType("date");

                    b.Property<double?>("DormitoryRent")
                        .HasColumnType("float");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly?>("EarnLeaveDate")
                        .HasColumnType("date");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpAccountNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpAttCard")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpDutyType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("GName");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("GrdNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("HolidayAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("IncomeTax")
                        .HasColumnType("float");

                    b.Property<double?>("IncrementAmount")
                        .HasColumnType("float");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsDelivery")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHalfOt")
                        .HasColumnType("bit")
                        .HasColumnName("IsHalfOT");

                    b.Property<bool?>("IsSingleRateOt")
                        .HasColumnType("bit")
                        .HasColumnName("IsSingleRateOT");

                    b.Property<double?>("LunchAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("LunchBillStatus")
                        .HasColumnType("bit");

                    b.Property<bool?>("LunchCount")
                        .HasColumnType("bit");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("NightAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("NightBillStatus")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("OrderRefDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderRefNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("OverTime")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("PfDate")
                        .HasColumnType("date");

                    b.Property<double?>("PfEmpContribution")
                        .HasColumnType("float");

                    b.Property<bool?>("PfMember")
                        .HasColumnType("bit");

                    b.Property<double?>("PfOpeningBalance")
                        .HasColumnType("float");

                    b.Property<double?>("Pfamount")
                        .HasColumnType("float")
                        .HasColumnName("PFAmount");

                    b.Property<string>("PreCompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PreEmpDutyType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<double?>("PreIncomeTax")
                        .HasColumnType("float");

                    b.Property<double?>("PreTechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("PunchType")
                        .HasColumnType("bit");

                    b.Property<string>("RealProximityNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("Rid")
                        .HasColumnType("smallint")
                        .HasColumnName("RId");

                    b.Property<string>("Rname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RName");

                    b.Property<bool?>("SalaryCount")
                        .HasColumnType("bit");

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SftNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<double?>("TechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("Telephone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<double?>("TiffinAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("TiffinStatus")
                        .HasColumnType("bit");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("WeekendType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.ToTable((string)null);

                    b.ToView("v_Personnel_EmpCurrentStatus", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPersonnelEmpCurrentStatus1", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<double?>("AttendanceBonus")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("AutoIncrementMonth")
                        .HasColumnType("date");

                    b.Property<short?>("BankId")
                        .HasColumnType("smallint");

                    b.Property<string>("BankName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<bool?>("BreakfastStatus")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateofUpdate")
                        .HasColumnType("date");

                    b.Property<double?>("DormitoryRent")
                        .HasColumnType("float");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly?>("EarnLeaveDate")
                        .HasColumnType("date");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpAccountNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpAttCard")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpDutyType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("GName");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("GrdNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("HolidayAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("IncomeTax")
                        .HasColumnType("float");

                    b.Property<double?>("IncrementAmount")
                        .HasColumnType("float");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsDelivery")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHalfOt")
                        .HasColumnType("bit")
                        .HasColumnName("IsHalfOT");

                    b.Property<bool?>("IsSingleRateOt")
                        .HasColumnType("bit")
                        .HasColumnName("IsSingleRateOT");

                    b.Property<double?>("LunchAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("LunchBillStatus")
                        .HasColumnType("bit");

                    b.Property<bool?>("LunchCount")
                        .HasColumnType("bit");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("NightAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("NightBillStatus")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("OrderRefDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderRefNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("OverTime")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("PfDate")
                        .HasColumnType("date");

                    b.Property<double?>("PfEmpContribution")
                        .HasColumnType("float");

                    b.Property<bool?>("PfMember")
                        .HasColumnType("bit");

                    b.Property<double?>("PfOpeningBalance")
                        .HasColumnType("float");

                    b.Property<double?>("Pfamount")
                        .HasColumnType("float")
                        .HasColumnName("PFAmount");

                    b.Property<string>("PreCompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PreEmpDutyType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<double?>("PreIncomeTax")
                        .HasColumnType("float");

                    b.Property<double?>("PreTechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("PunchType")
                        .HasColumnType("bit");

                    b.Property<string>("RealProximityNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("Rid")
                        .HasColumnType("smallint")
                        .HasColumnName("RId");

                    b.Property<string>("Rname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RName");

                    b.Property<bool?>("SalaryCount")
                        .HasColumnType("bit");

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SftNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<double?>("TechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("Telephone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<double?>("TiffinAllownce")
                        .HasColumnType("float");

                    b.Property<bool?>("TiffinStatus")
                        .HasColumnType("bit");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.ToTable((string)null);

                    b.ToView("v_Personnel_EmpCurrentStatus1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPersonnelEmpCurrentStatusPromotionLog", b =>
                {
                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GrdNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.ToTable((string)null);

                    b.ToView("v_Personnel_EmpCurrentStatusPromotionLog", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPersonnelEmpCurrentStatusSalaryIncrementLog", b =>
                {
                    b.Property<bool>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<double?>("AttendanceBonus")
                        .HasColumnType("float");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("DateofUpdate")
                        .HasColumnType("date");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly?>("EarnLeaveDate")
                        .HasColumnType("date");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GrdNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("HolidayAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("IncrementAmount")
                        .HasColumnType("float");

                    b.Property<double?>("LunchAllownce")
                        .HasColumnType("float");

                    b.Property<bool>("LunchCount")
                        .HasColumnType("bit");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("NightAllownce")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("OrderRefDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderRefNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<double?>("TiffinAllownce")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.ToTable((string)null);

                    b.ToView("v_Personnel_EmpCurrentStatusSalaryIncrementLog", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPersonnelEmpNewPosition", b =>
                {
                    b.Property<double?>("Approved")
                        .HasColumnType("float");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("GrdName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("LastIncrement")
                        .HasColumnType("float");

                    b.Property<string>("LastIncrementDate")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<double?>("NempPresentSalary")
                        .HasColumnType("float")
                        .HasColumnName("NEmpPresentSalary");

                    b.Property<string>("PreDptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PreDsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("PreEmpSalary")
                        .HasColumnType("float");

                    b.Property<string>("PreGrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("PreIncrementAmount")
                        .HasColumnType("float");

                    b.Property<double?>("PreTechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("PromotionEffectiveFrom")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SalaryCount")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<double?>("TechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.ToTable((string)null);

                    b.ToView("v_Personnel_EmpNewPosition", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPersonnelEmpPunismentInfo", b =>
                {
                    b.Property<long?>("EmpCardNo")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("EmpPunismentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("EmpPunismentId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpPunismentOrderRef")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("EmpPunismentOrderRefDate")
                        .HasColumnType("date");

                    b.Property<bool?>("EmpPunismentStaus")
                        .HasColumnType("bit");

                    b.Property<string>("EmpRemarks")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("PtId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PtName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("v_Personnel_EmpPunismentInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPersonnelEmpRejoin", b =>
                {
                    b.Property<DateOnly?>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("EmpRejoinId")
                        .HasColumnType("int");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("v_Personnel_EmpRejoin", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPersonnelEmpSeparation", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("EmpSeparationId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<short>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("YearMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.ToTable((string)null);

                    b.ToView("v_Personnel_EmpSeparation", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPersonnelEmpSeparation1", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("EmpSeparationId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<short>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("YearMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.ToTable((string)null);

                    b.ToView("v_Personnel_EmpSeparation1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPfBalanceSheet", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("EmpContribution")
                        .HasColumnType("float");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("EmprContribution")
                        .HasColumnType("float");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<double?>("OpeningBalance")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("PfDate")
                        .HasColumnType("date");

                    b.Property<double?>("PfEmpContribution")
                        .HasColumnType("float");

                    b.Property<bool?>("PfMember")
                        .HasColumnType("bit");

                    b.Property<double>("Profit")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("v_PF_BalanceSheet", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPfCalculationSetting", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("EmpContribution")
                        .HasColumnType("float");

                    b.Property<double?>("EmprContribution")
                        .HasColumnType("float");

                    b.Property<int?>("PempEmprEndyear")
                        .HasColumnType("int")
                        .HasColumnName("PEmpEmprEndyear");

                    b.Property<int?>("PempEmprIrstEndyear")
                        .HasColumnType("int")
                        .HasColumnName("PEmpEmprIrstEndyear");

                    b.Property<int?>("PempEmprIrstStartyear")
                        .HasColumnType("int")
                        .HasColumnName("PEmpEmprIrstStartyear");

                    b.Property<int?>("PempEmprStartyear")
                        .HasColumnType("int")
                        .HasColumnName("PEmpEmprStartyear");

                    b.Property<int?>("PempPartEndyear")
                        .HasColumnType("int")
                        .HasColumnName("PEmpPartEndyear");

                    b.Property<int?>("PempPartStartyear")
                        .HasColumnType("int")
                        .HasColumnName("PEmpPartStartyear");

                    b.Property<int?>("PfstartYear")
                        .HasColumnType("int")
                        .HasColumnName("PFStartYear");

                    b.Property<double?>("RateofInterest")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("v_PF_CalculationSetting", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPfMemberListAll", b =>
                {
                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("MemberId")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<DateOnly?>("PfDate")
                        .HasColumnType("date");

                    b.Property<string>("PfcompanyId")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("PFCompanyId");

                    b.Property<string>("ProductDb")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("ProductDB");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.ToTable((string)null);

                    b.ToView("v_PF_MemberListAll", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPfMonthlyProfit", b =>
                {
                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Month")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<double?>("Profit")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("v_PF_MonthlyProfit", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPromotionIncrement", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("DateofUpdate")
                        .HasColumnType("date");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("IncrementAmount")
                        .HasColumnType("float");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("OrderRefDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderRefNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreBasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("PreCompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PreCompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("PreConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<string>("PreDptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("PreDptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PreDsgId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("PreDsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("PreEmpSalary")
                        .HasColumnType("float");

                    b.Property<string>("PreEmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PreEmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("PreEmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("PreFoodAllownce")
                        .HasColumnType("float");

                    b.Property<string>("PreGrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("PreHouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("PreIncrementAmount")
                        .HasColumnType("float");

                    b.Property<double?>("PreMedicalAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreOthersAllownce")
                        .HasColumnType("float");

                    b.Property<string>("PreSalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("PreTechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<double?>("TechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.ToTable((string)null);

                    b.ToView("v_Promotion_Increment", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VPromotionIncrement1", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("DateofUpdate")
                        .HasColumnType("date");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("IncrementAmount")
                        .HasColumnType("float");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("OrderRefDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderRefNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("OthersAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreBasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("PreCompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PreCompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("PreConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<string>("PreDptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("PreDptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PreDsgId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("PreDsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("PreEmpSalary")
                        .HasColumnType("float");

                    b.Property<string>("PreEmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PreEmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("PreEmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("PreFoodAllownce")
                        .HasColumnType("float");

                    b.Property<string>("PreGrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("PreHouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("PreIncrementAmount")
                        .HasColumnType("float");

                    b.Property<double?>("PreMedicalAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("PreOthersAllownce")
                        .HasColumnType("float");

                    b.Property<string>("PreSalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("PreTechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<double?>("TechnicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.ToTable((string)null);

                    b.ToView("v_Promotion_Increment1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VSeparationSheet", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<string>("EffectiveDateMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Efmonth")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("EFMonth");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("SeparationType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.ToTable((string)null);

                    b.ToView("v_SeparationSheet", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VSeparationSheet1", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<string>("EffectiveDateMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Efmonth")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("EFMonth");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpStatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("SeparationType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.ToTable((string)null);

                    b.ToView("v_SeparationSheet1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VShiftTranferDetailsForFirstInLastOut", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpAttCard")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<string>("Expr1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("Fid")
                        .HasColumnType("smallint")
                        .HasColumnName("FId");

                    b.Property<bool?>("IsWeekend")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("Sdate")
                        .HasColumnType("date")
                        .HasColumnName("SDate");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    b.Property<long?>("Stid")
                        .HasColumnType("bigint")
                        .HasColumnName("STId");

                    b.ToTable((string)null);

                    b.ToView("v_ShiftTranferDetailsForFirstInLastOut", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VShiftTransferInfoDepartmetnList", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Gid")
                        .HasColumnType("int")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GName");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Stid")
                        .HasColumnType("bigint")
                        .HasColumnName("STId");

                    b.Property<DateOnly?>("TfromDate")
                        .HasColumnType("date")
                        .HasColumnName("TFromDate");

                    b.Property<DateOnly?>("TtoDate")
                        .HasColumnType("date")
                        .HasColumnName("TToDate");

                    b.ToTable((string)null);

                    b.ToView("v_ShiftTransferInfo_DepartmetnList", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VShiftTransferInfoDetail", b =>
                {
                    b.Property<short?>("AcceptableTimeAsOt")
                        .HasColumnType("smallint")
                        .HasColumnName("AcceptableTimeAsOT");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<TimeOnly?>("BreakEndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("BreakStartTime")
                        .HasColumnType("time");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Day")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<short?>("EmpTypeId")
                        .HasColumnType("smallint");

                    b.Property<TimeOnly?>("EndPunchCountTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime");

                    b.Property<short?>("Fid")
                        .HasColumnType("smallint")
                        .HasColumnName("FId");

                    b.Property<string>("Fname")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("FName");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GName");

                    b.Property<bool?>("IsNight")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWeekend")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateOnly?>("Sdate")
                        .HasColumnType("date")
                        .HasColumnName("SDate");

                    b.Property<short?>("SftAcceptableLate")
                        .HasColumnType("smallint");

                    b.Property<TimeOnly?>("SftEndTime")
                        .HasColumnType("time");

                    b.Property<string>("SftEndTimeIndicator")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("SftOverTime")
                        .HasColumnType("bit");

                    b.Property<TimeOnly?>("SftStartTime")
                        .HasColumnType("time");

                    b.Property<string>("SftStartTimeIndicator")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<long>("Sl")
                        .HasColumnType("bigint")
                        .HasColumnName("SL");

                    b.Property<TimeOnly?>("StartPunchCountTime")
                        .HasColumnType("time");

                    b.Property<long>("Stid")
                        .HasColumnType("bigint")
                        .HasColumnName("STId");

                    b.Property<DateOnly?>("TfromDate")
                        .HasColumnType("date")
                        .HasColumnName("TFromDate");

                    b.Property<DateOnly?>("TtoDate")
                        .HasColumnType("date")
                        .HasColumnName("TToDate");

                    b.ToTable((string)null);

                    b.ToView("v_ShiftTransferInfoDetails", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VTblAttendanceRecord", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("AttManual")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Attdate")
                        .HasColumnType("datetime")
                        .HasColumnName("ATTDate");

                    b.Property<double?>("AttendanceBonus")
                        .HasColumnType("float");

                    b.Property<string>("Attstatus")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ATTStatus");

                    b.Property<TimeOnly?>("BreakEndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("BreakStartTime")
                        .HasColumnType("time");

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<string>("DailyStartTimeAltCloseTime")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)")
                        .HasColumnName("DailyStartTimeALT_CloseTime");

                    b.Property<DateOnly?>("DateofUpdate")
                        .HasColumnType("date");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("GName");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("HolidayAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("HolidayCount")
                        .HasColumnType("smallint");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<string>("InHour")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("InMin")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("InSec")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("InTime")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<double?>("IncrementAmount")
                        .HasColumnType("float");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<int>("IsLate")
                        .HasColumnType("int");

                    b.Property<bool?>("IsOverTime")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("LateForAttBonus")
                        .HasColumnType("bit");

                    b.Property<TimeOnly?>("LateTime")
                        .HasColumnType("time");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MonthId")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("MonthName")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<short?>("NightAllowCount")
                        .HasColumnType("smallint");

                    b.Property<double?>("NightAllownce")
                        .HasColumnType("float");

                    b.Property<int?>("Odid")
                        .HasColumnType("int")
                        .HasColumnName("ODID");

                    b.Property<string>("OrderRefNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<TimeOnly?>("OtherOverTime")
                        .HasColumnType("time");

                    b.Property<bool?>("OutDuty")
                        .HasColumnType("bit");

                    b.Property<string>("OutHour")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OutMin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OutSec")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("OutTime")
                        .HasMaxLength(101)
                        .IsUnicode(false)
                        .HasColumnType("varchar(101)");

                    b.Property<TimeOnly?>("OverTime")
                        .HasColumnType("time");

                    b.Property<bool?>("OverTimeCheck")
                        .HasColumnType("bit");

                    b.Property<short?>("PaybleDays")
                        .HasColumnType("smallint");

                    b.Property<string>("RealProximityNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ReferenceID");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Rname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RName");

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<TimeOnly?>("SftEndTime")
                        .HasColumnType("time");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SftNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly?>("SftStartTime")
                        .HasColumnType("time");

                    b.Property<int?>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<string>("StateStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly?>("StayTime")
                        .HasColumnType("time");

                    b.Property<string>("Telephone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<double?>("TiffinAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("TiffinCount")
                        .HasColumnType("smallint");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("TotalOverTime")
                        .HasColumnType("time");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_tblAttendanceRecord", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VTblAttendanceRecord1", b =>
                {
                    b.Property<bool?>("ActiveSalary")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("AttManual")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AttStatus")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("Attdate")
                        .HasColumnType("datetime")
                        .HasColumnName("ATTDate");

                    b.Property<double?>("AttendanceBonus")
                        .HasColumnType("float");

                    b.Property<TimeOnly?>("BreakEndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("BreakStartTime")
                        .HasColumnType("time");

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<string>("DailyStartTimeAltCloseTime")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)")
                        .HasColumnName("DailyStartTimeALT_CloseTime");

                    b.Property<DateOnly?>("DateofUpdate")
                        .HasColumnType("date");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptNameBn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DsgId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgNameBn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EffectiveMonth")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly?>("EmpJoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNameBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("EmpPresentSalary")
                        .HasColumnType("float");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<double?>("FoodAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("GName");

                    b.Property<string>("GrdName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<double?>("HolidayAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("HolidayCount")
                        .HasColumnType("smallint");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<string>("InHour")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("InMin")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("InSec")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("InTime")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<double?>("IncrementAmount")
                        .HasColumnType("float");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<int>("IsLate")
                        .HasColumnType("int");

                    b.Property<bool?>("IsOverTime")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("LateForAttBonus")
                        .HasColumnType("bit");

                    b.Property<TimeOnly?>("LateTime")
                        .HasColumnType("time");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MonthId")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("MonthName")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<double?>("NightAllownce")
                        .HasColumnType("float");

                    b.Property<string>("OrderRefNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<TimeOnly?>("OtherOverTime")
                        .HasColumnType("time");

                    b.Property<bool?>("OutDuty")
                        .HasColumnType("bit");

                    b.Property<string>("OutHour")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OutMin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OutSec")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("OutTime")
                        .HasMaxLength(101)
                        .IsUnicode(false)
                        .HasColumnType("varchar(101)");

                    b.Property<TimeOnly?>("OverTime")
                        .HasColumnType("time");

                    b.Property<bool?>("OverTimeCheck")
                        .HasColumnType("bit");

                    b.Property<short?>("PaybleDays")
                        .HasColumnType("smallint");

                    b.Property<string>("RealProximityNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ReferenceID");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Rname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RName");

                    b.Property<string>("SalaryType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<TimeOnly?>("SftEndTime")
                        .HasColumnType("time");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SftNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly?>("SftStartTime")
                        .HasColumnType("time");

                    b.Property<int?>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<string>("StateStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly?>("StayTime")
                        .HasColumnType("time");

                    b.Property<string>("Telephone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<double?>("TiffinAllownce")
                        .HasColumnType("float");

                    b.Property<short?>("TiffinCount")
                        .HasColumnType("smallint");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("TotalOverTime")
                        .HasColumnType("time");

                    b.Property<string>("TypeOfChange")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_tblAttendanceRecord1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VTblAttendanceRecordPunchLog", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("AttManual")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Attdate")
                        .HasColumnType("datetime")
                        .HasColumnName("ATTDate");

                    b.Property<string>("Attstatus")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ATTStatus");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("CustomOrdering")
                        .HasColumnType("smallint");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GName");

                    b.Property<string>("InHour")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("InMin")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("InSec")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("OutDuty")
                        .HasColumnType("bit");

                    b.Property<string>("OutHour")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OutMin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OutSec")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("PinHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("PInHour");

                    b.Property<string>("PinMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("PInMin");

                    b.Property<string>("PinSec")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("PInSec");

                    b.Property<string>("PoutHour")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("POutHour");

                    b.Property<string>("PoutMin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("POutMin");

                    b.Property<string>("PoutSec")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("POutSec");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("v_tblAttendanceRecordPunchLog", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VTblHolydayWeekentEmployeeWise", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<long>("Hwcode")
                        .HasColumnType("bigint")
                        .HasColumnName("HWCode");

                    b.Property<string>("HwdayName")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("HWDayName");

                    b.Property<string>("Hwtype")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("HWType");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.ToTable((string)null);

                    b.ToView("v_tblHolydayWeekentEmployeeWise", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VTblHolydayWork", b =>
                {
                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Hcode")
                        .HasColumnType("int")
                        .HasColumnName("HCode");

                    b.Property<string>("Hdate")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("HDate");

                    b.Property<string>("MonthYear")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.ToTable((string)null);

                    b.ToView("v_tblHolydayWork", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VTblHolydayWork1", b =>
                {
                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Hcode")
                        .HasColumnType("int")
                        .HasColumnName("HCode");

                    b.Property<string>("Hdate")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("HDate");

                    b.Property<string>("MonthYear")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.ToTable((string)null);

                    b.ToView("v_tblHolydayWork1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VTblLeaveConfig", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsDeductionAllowed")
                        .HasColumnType("bit");

                    b.Property<int?>("LeaveDays")
                        .HasColumnType("int");

                    b.Property<string>("LeaveName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LeaveNature")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable((string)null);

                    b.ToView("v_tblLeaveConfig", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VTblOutDuty", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime?>("AppiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("AppliedBy")
                        .HasColumnType("int");

                    b.Property<string>("AssignedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("AuthorizedBy")
                        .HasColumnType("int");

                    b.Property<string>("AuthorizedByEmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AuthorizedByName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("AuthorizedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("InTime")
                        .HasColumnType("time");

                    b.Property<short?>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<TimeOnly?>("OutTime")
                        .HasColumnType("time");

                    b.Property<string>("Place")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<short?>("Processing")
                        .HasColumnType("smallint");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Sl")
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<bool?>("StraightFromHome")
                        .HasColumnType("bit");

                    b.Property<bool?>("StraightToHome")
                        .HasColumnType("bit");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.ToTable((string)null);

                    b.ToView("v_tblOutDuty", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VTblOutdutyDetail", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime?>("AppiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("AppliedBy")
                        .HasColumnType("int");

                    b.Property<string>("AssignedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("AuthorizedBy")
                        .HasColumnType("int");

                    b.Property<string>("AuthorizedByEmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AuthorizedByName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("AuthorizedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ClientName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpProximityNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("InTime")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("OutTime")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Place")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<short?>("Processing")
                        .HasColumnType("smallint");

                    b.Property<string>("Purpose")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Sl")
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<bool?>("StraightFromHome")
                        .HasColumnType("bit");

                    b.Property<bool?>("StraightToHome")
                        .HasColumnType("bit");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.ToTable((string)null);

                    b.ToView("v_tblOutdutyDetails", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VTblWeekendInfoReport", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DptID");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DsgID");

                    b.Property<string>("DsgName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(59)
                        .IsUnicode(false)
                        .HasColumnType("varchar(59)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GID");

                    b.Property<string>("Gname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("GName");

                    b.Property<string>("Weekends")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.ToTable((string)null);

                    b.ToView("v_tblWeekendInfoReport", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VThanaInfo", b =>
                {
                    b.Property<string>("DstBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DstId")
                        .HasColumnType("int");

                    b.Property<string>("DstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ThaId")
                        .HasColumnType("int");

                    b.Property<string>("ThaName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ThaNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable((string)null);

                    b.ToView("v_thanaInfo", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VUserAccount", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("CompanyType")
                        .HasColumnType("bit");

                    b.Property<string>("CoockieInfo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsCompliance")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLogin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLvAuthority")
                        .HasColumnType("bit")
                        .HasColumnName("isLvAuthority");

                    b.Property<short?>("LvAuthorityAction")
                        .HasColumnType("smallint");

                    b.Property<short?>("LvAuthorityOrder")
                        .HasColumnType("smallint");

                    b.Property<short?>("LvEmpType")
                        .HasColumnType("smallint");

                    b.Property<bool?>("LvOnlyDpt")
                        .HasColumnType("bit");

                    b.Property<string>("ShortName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserPassword")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserType")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToTable((string)null);

                    b.ToView("v_UserAccount", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VUserAccountForLeave", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CoockieInfo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("IsLogin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLvAuthority")
                        .HasColumnType("bit")
                        .HasColumnName("isLvAuthority");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("LoginDateTime")
                        .HasColumnType("datetime");

                    b.Property<short?>("LvAuthorityAction")
                        .HasColumnType("smallint");

                    b.Property<short?>("LvAuthorityOrder")
                        .HasColumnType("smallint");

                    b.Property<short?>("LvEmpType")
                        .HasColumnType("smallint");

                    b.Property<bool?>("LvOnlyDpt")
                        .HasColumnType("bit");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserPassword")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserType")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToTable((string)null);

                    b.ToView("v_UserAccountForLeave", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VUserPrivilegeList", b =>
                {
                    b.Property<bool?>("AllAction")
                        .HasColumnType("bit");

                    b.Property<bool?>("DeleteAction")
                        .HasColumnType("bit");

                    b.Property<short?>("ModuleId")
                        .HasColumnType("smallint");

                    b.Property<string>("ModulePageName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<byte?>("Ordering")
                        .HasColumnType("tinyint");

                    b.Property<string>("PageTitle")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<bool?>("ReadAction")
                        .HasColumnType("bit");

                    b.Property<bool?>("UpdateAction")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool?>("WriteAction")
                        .HasColumnType("bit");

                    b.ToTable((string)null);

                    b.ToView("v_UserPrivilegeList", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VVDailyAttendanceSummary", b =>
                {
                    b.Property<int>("A")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("Attdate")
                        .HasColumnType("datetime")
                        .HasColumnName("ATTDate");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("GName");

                    b.Property<bool?>("IsNightShiftForReport")
                        .HasColumnType("bit");

                    b.Property<int>("L")
                        .HasColumnType("int");

                    b.Property<int>("Lv")
                        .HasColumnType("int");

                    b.Property<int>("P")
                        .HasColumnType("int");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sn")
                        .HasColumnType("int")
                        .HasColumnName("SN");

                    b.Property<string>("Telephone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("Wh")
                        .HasColumnType("int")
                        .HasColumnName("WH");

                    b.ToTable((string)null);

                    b.ToView("v_v_DailyAttendanceSummary", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VVForDailyMovementReport", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Badgenumber")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<DateTime>("Checktime")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKTIME");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("v_v_ForDailyMovementReport", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VVLeaveLeaveApplicationDetail", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("Al")
                        .HasColumnType("int")
                        .HasColumnName("AL");

                    b.Property<int>("Cl")
                        .HasColumnType("int")
                        .HasColumnName("CL");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("LeaveDate")
                        .HasColumnType("date");

                    b.Property<int?>("LeaveDays")
                        .HasColumnType("int");

                    b.Property<int>("Ml")
                        .HasColumnType("int")
                        .HasColumnName("ML");

                    b.Property<string>("Month")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("MonthYear")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("Ol")
                        .HasColumnType("int")
                        .HasColumnName("OL");

                    b.Property<int>("Opl")
                        .HasColumnType("int")
                        .HasColumnName("OPL");

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SftName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sl")
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    b.Property<bool?>("Used")
                        .HasColumnType("bit");

                    b.Property<string>("Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.ToTable((string)null);

                    b.ToView("v_v_Leave_LeaveApplicationDetails", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VVTblAttendanceRecord", b =>
                {
                    b.Property<string>("AttDate")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("AttManual")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Attstatus")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ATTStatus");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Date")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("InTime")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("InTime12Format")
                        .HasMaxLength(56)
                        .HasColumnType("nvarchar(56)");

                    b.Property<string>("OutTime")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OutTime12Format")
                        .HasMaxLength(56)
                        .IsUnicode(false)
                        .HasColumnType("varchar(56)");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("StateStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable((string)null);

                    b.ToView("v_v_tblAttendanceRecord", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VVVLeaveLeaveApplicationDetailsForLeaveBalanceReport", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("Al")
                        .HasColumnType("int")
                        .HasColumnName("AL");

                    b.Property<int>("BEl")
                        .HasColumnType("int")
                        .HasColumnName("bEL");

                    b.Property<int?>("Cl")
                        .HasColumnType("int")
                        .HasColumnName("CL");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("LeaveDays")
                        .HasColumnType("int");

                    b.Property<int>("Lwp")
                        .HasColumnType("int")
                        .HasColumnName("LWP");

                    b.Property<int?>("Ml")
                        .HasColumnType("int")
                        .HasColumnName("ML");

                    b.Property<int?>("Ol")
                        .HasColumnType("int")
                        .HasColumnName("OL");

                    b.Property<int?>("Opl")
                        .HasColumnType("int")
                        .HasColumnName("OPL");

                    b.Property<int>("PEl")
                        .HasColumnType("int")
                        .HasColumnName("pEL");

                    b.Property<int?>("Remaining")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SftName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Sl")
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_v_v_Leave_LeaveApplicationDetails_ForLeaveBalanceReport", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VVVLeaveLeaveApplicationDetailsForOfficialPurposeReport", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("Apr")
                        .HasColumnType("int");

                    b.Property<int>("Aug")
                        .HasColumnType("int");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Dec")
                        .HasColumnType("int");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Feb")
                        .HasColumnType("int");

                    b.Property<int>("Jan")
                        .HasColumnType("int");

                    b.Property<int>("Jul")
                        .HasColumnType("int");

                    b.Property<int>("Jun")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("LeaveDate")
                        .HasColumnType("date");

                    b.Property<int>("Mar")
                        .HasColumnType("int");

                    b.Property<int>("May")
                        .HasColumnType("int");

                    b.Property<string>("MonthYear")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("Nov")
                        .HasColumnType("int");

                    b.Property<int>("Oct")
                        .HasColumnType("int");

                    b.Property<int>("Opl")
                        .HasColumnType("int")
                        .HasColumnName("OPL");

                    b.Property<int>("Sep")
                        .HasColumnType("int");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SftName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.ToTable((string)null);

                    b.ToView("v_v_v_Leave_LeaveApplicationDetails_ForOfficialPurposeReport", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VVVLeaveYearlyStatus", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("AlRemaining")
                        .HasColumnType("int")
                        .HasColumnName("AL_Remaining");

                    b.Property<int?>("AlSpend")
                        .HasColumnType("int")
                        .HasColumnName("AL_Spend");

                    b.Property<int?>("AlTotal")
                        .HasColumnType("int")
                        .HasColumnName("AL_Total");

                    b.Property<int?>("ClRemaining")
                        .HasColumnType("int")
                        .HasColumnName("CL_Remaining");

                    b.Property<int?>("ClSpend")
                        .HasColumnType("int")
                        .HasColumnName("CL_Spend");

                    b.Property<int?>("ClTotal")
                        .HasColumnType("int")
                        .HasColumnName("CL_Total");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("MlRemaining")
                        .HasColumnType("int")
                        .HasColumnName("ML_Remaining");

                    b.Property<int?>("MlSpend")
                        .HasColumnType("int")
                        .HasColumnName("ML_Spend");

                    b.Property<int?>("MlTotal")
                        .HasColumnType("int")
                        .HasColumnName("ML_Total");

                    b.Property<int?>("OlRemaining")
                        .HasColumnType("int")
                        .HasColumnName("OL_Remaining");

                    b.Property<int?>("OlSpend")
                        .HasColumnType("int")
                        .HasColumnName("OL_Spend");

                    b.Property<int?>("OlTotal")
                        .HasColumnType("int")
                        .HasColumnName("OL_Total");

                    b.Property<int?>("OplRemaining")
                        .HasColumnType("int")
                        .HasColumnName("OPL_Remaining");

                    b.Property<int?>("OplSpend")
                        .HasColumnType("int")
                        .HasColumnName("OPL_Spend");

                    b.Property<int?>("OplTotal")
                        .HasColumnType("int")
                        .HasColumnName("OPL_Total");

                    b.Property<string>("Sex")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SftId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SftName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SlRemaining")
                        .HasColumnType("int")
                        .HasColumnName("SL_Remaining");

                    b.Property<int?>("SlSpend")
                        .HasColumnType("int")
                        .HasColumnName("SL_Spend");

                    b.Property<int?>("SlTotal")
                        .HasColumnType("int")
                        .HasColumnName("SL_Total");

                    b.Property<string>("Year")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.ToTable((string)null);

                    b.ToView("v_v_v_Leave_Yearly_Status", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VVVTblAttendanceRecord", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DptId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("Gid")
                        .HasColumnType("smallint")
                        .HasColumnName("GId");

                    b.Property<string>("Gname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GName");

                    b.Property<short?>("SftId")
                        .HasColumnType("smallint");

                    b.Property<string>("SftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TotalOverTime")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)");

                    b.Property<int?>("_10InH")
                        .HasColumnType("int")
                        .HasColumnName("10_InH");

                    b.Property<int?>("_10InM")
                        .HasColumnType("int")
                        .HasColumnName("10_InM");

                    b.Property<int?>("_10OutH")
                        .HasColumnType("int")
                        .HasColumnName("10_OutH");

                    b.Property<int?>("_10OutM")
                        .HasColumnType("int")
                        .HasColumnName("10_OutM");

                    b.Property<int?>("_10Sth")
                        .HasColumnType("int")
                        .HasColumnName("10_STH");

                    b.Property<int?>("_10Stm")
                        .HasColumnType("int")
                        .HasColumnName("10_STM");

                    b.Property<int?>("_11InH")
                        .HasColumnType("int")
                        .HasColumnName("11_InH");

                    b.Property<int?>("_11InM")
                        .HasColumnType("int")
                        .HasColumnName("11_InM");

                    b.Property<int?>("_11OutH")
                        .HasColumnType("int")
                        .HasColumnName("11_OutH");

                    b.Property<int?>("_11OutM")
                        .HasColumnType("int")
                        .HasColumnName("11_OutM");

                    b.Property<int?>("_11Sth")
                        .HasColumnType("int")
                        .HasColumnName("11_STH");

                    b.Property<int?>("_11Stm")
                        .HasColumnType("int")
                        .HasColumnName("11_STM");

                    b.Property<int?>("_12InH")
                        .HasColumnType("int")
                        .HasColumnName("12_InH");

                    b.Property<int?>("_12InM")
                        .HasColumnType("int")
                        .HasColumnName("12_InM");

                    b.Property<int?>("_12OutH")
                        .HasColumnType("int")
                        .HasColumnName("12_OutH");

                    b.Property<int?>("_12OutM")
                        .HasColumnType("int")
                        .HasColumnName("12_OutM");

                    b.Property<int?>("_12Sth")
                        .HasColumnType("int")
                        .HasColumnName("12_STH");

                    b.Property<int?>("_12Stm")
                        .HasColumnType("int")
                        .HasColumnName("12_STM");

                    b.Property<int?>("_13InH")
                        .HasColumnType("int")
                        .HasColumnName("13_InH");

                    b.Property<int?>("_13InM")
                        .HasColumnType("int")
                        .HasColumnName("13_InM");

                    b.Property<int?>("_13OutH")
                        .HasColumnType("int")
                        .HasColumnName("13_OutH");

                    b.Property<int?>("_13OutM")
                        .HasColumnType("int")
                        .HasColumnName("13_OutM");

                    b.Property<int?>("_13Sth")
                        .HasColumnType("int")
                        .HasColumnName("13_STH");

                    b.Property<int?>("_13Stm")
                        .HasColumnType("int")
                        .HasColumnName("13_STM");

                    b.Property<int?>("_14InH")
                        .HasColumnType("int")
                        .HasColumnName("14_InH");

                    b.Property<int?>("_14InM")
                        .HasColumnType("int")
                        .HasColumnName("14_InM");

                    b.Property<int?>("_14OutH")
                        .HasColumnType("int")
                        .HasColumnName("14_OutH");

                    b.Property<int?>("_14OutM")
                        .HasColumnType("int")
                        .HasColumnName("14_OutM");

                    b.Property<int?>("_14Sth")
                        .HasColumnType("int")
                        .HasColumnName("14_STH");

                    b.Property<int?>("_14Stm")
                        .HasColumnType("int")
                        .HasColumnName("14_STM");

                    b.Property<int?>("_15InH")
                        .HasColumnType("int")
                        .HasColumnName("15_InH");

                    b.Property<int?>("_15InM")
                        .HasColumnType("int")
                        .HasColumnName("15_InM");

                    b.Property<int?>("_15OutH")
                        .HasColumnType("int")
                        .HasColumnName("15_OutH");

                    b.Property<int?>("_15OutM")
                        .HasColumnType("int")
                        .HasColumnName("15_OutM");

                    b.Property<int?>("_15Sth")
                        .HasColumnType("int")
                        .HasColumnName("15_STH");

                    b.Property<int?>("_15Stm")
                        .HasColumnType("int")
                        .HasColumnName("15_STM");

                    b.Property<int?>("_16InH")
                        .HasColumnType("int")
                        .HasColumnName("16_InH");

                    b.Property<int?>("_16InM")
                        .HasColumnType("int")
                        .HasColumnName("16_InM");

                    b.Property<int?>("_16OutH")
                        .HasColumnType("int")
                        .HasColumnName("16_OutH");

                    b.Property<int?>("_16OutM")
                        .HasColumnType("int")
                        .HasColumnName("16_OutM");

                    b.Property<int?>("_16Sth")
                        .HasColumnType("int")
                        .HasColumnName("16_STH");

                    b.Property<int?>("_16Stm")
                        .HasColumnType("int")
                        .HasColumnName("16_STM");

                    b.Property<int?>("_17InH")
                        .HasColumnType("int")
                        .HasColumnName("17_InH");

                    b.Property<int?>("_17InM")
                        .HasColumnType("int")
                        .HasColumnName("17_InM");

                    b.Property<int?>("_17OutH")
                        .HasColumnType("int")
                        .HasColumnName("17_OutH");

                    b.Property<int?>("_17OutM")
                        .HasColumnType("int")
                        .HasColumnName("17_OutM");

                    b.Property<int?>("_17Sth")
                        .HasColumnType("int")
                        .HasColumnName("17_STH");

                    b.Property<int?>("_17Stm")
                        .HasColumnType("int")
                        .HasColumnName("17_STM");

                    b.Property<int?>("_18InH")
                        .HasColumnType("int")
                        .HasColumnName("18_InH");

                    b.Property<int?>("_18InM")
                        .HasColumnType("int")
                        .HasColumnName("18_InM");

                    b.Property<int?>("_18OutH")
                        .HasColumnType("int")
                        .HasColumnName("18_OutH");

                    b.Property<int?>("_18OutM")
                        .HasColumnType("int")
                        .HasColumnName("18_OutM");

                    b.Property<int?>("_18Sth")
                        .HasColumnType("int")
                        .HasColumnName("18_STH");

                    b.Property<int?>("_18Stm")
                        .HasColumnType("int")
                        .HasColumnName("18_STM");

                    b.Property<int?>("_19InH")
                        .HasColumnType("int")
                        .HasColumnName("19_InH");

                    b.Property<int?>("_19InM")
                        .HasColumnType("int")
                        .HasColumnName("19_InM");

                    b.Property<int?>("_19OutH")
                        .HasColumnType("int")
                        .HasColumnName("19_OutH");

                    b.Property<int?>("_19OutM")
                        .HasColumnType("int")
                        .HasColumnName("19_OutM");

                    b.Property<int?>("_19Sth")
                        .HasColumnType("int")
                        .HasColumnName("19_STH");

                    b.Property<int?>("_19Stm")
                        .HasColumnType("int")
                        .HasColumnName("19_STM");

                    b.Property<int?>("_1InH")
                        .HasColumnType("int")
                        .HasColumnName("1_InH");

                    b.Property<int?>("_1InM")
                        .HasColumnType("int")
                        .HasColumnName("1_InM");

                    b.Property<int?>("_1OutH")
                        .HasColumnType("int")
                        .HasColumnName("1_OutH");

                    b.Property<int?>("_1OutM")
                        .HasColumnType("int")
                        .HasColumnName("1_OutM");

                    b.Property<int?>("_1Sth")
                        .HasColumnType("int")
                        .HasColumnName("1_STH");

                    b.Property<int?>("_1Stm")
                        .HasColumnType("int")
                        .HasColumnName("1_STM");

                    b.Property<int?>("_20InH")
                        .HasColumnType("int")
                        .HasColumnName("20_InH");

                    b.Property<int?>("_20InM")
                        .HasColumnType("int")
                        .HasColumnName("20_InM");

                    b.Property<int?>("_20OutH")
                        .HasColumnType("int")
                        .HasColumnName("20_OutH");

                    b.Property<int?>("_20OutM")
                        .HasColumnType("int")
                        .HasColumnName("20_OutM");

                    b.Property<int?>("_20Sth")
                        .HasColumnType("int")
                        .HasColumnName("20_STH");

                    b.Property<int?>("_20Stm")
                        .HasColumnType("int")
                        .HasColumnName("20_STM");

                    b.Property<int?>("_21InH")
                        .HasColumnType("int")
                        .HasColumnName("21_InH");

                    b.Property<int?>("_21InM")
                        .HasColumnType("int")
                        .HasColumnName("21_InM");

                    b.Property<int?>("_21OutH")
                        .HasColumnType("int")
                        .HasColumnName("21_OutH");

                    b.Property<int?>("_21OutM")
                        .HasColumnType("int")
                        .HasColumnName("21_OutM");

                    b.Property<int?>("_21Sth")
                        .HasColumnType("int")
                        .HasColumnName("21_STH");

                    b.Property<int?>("_21Stm")
                        .HasColumnType("int")
                        .HasColumnName("21_STM");

                    b.Property<int?>("_22InH")
                        .HasColumnType("int")
                        .HasColumnName("22_InH");

                    b.Property<int?>("_22InM")
                        .HasColumnType("int")
                        .HasColumnName("22_InM");

                    b.Property<int?>("_22OutH")
                        .HasColumnType("int")
                        .HasColumnName("22_OutH");

                    b.Property<int?>("_22OutM")
                        .HasColumnType("int")
                        .HasColumnName("22_OutM");

                    b.Property<int?>("_22Sth")
                        .HasColumnType("int")
                        .HasColumnName("22_STH");

                    b.Property<int?>("_22Stm")
                        .HasColumnType("int")
                        .HasColumnName("22_STM");

                    b.Property<int?>("_23InH")
                        .HasColumnType("int")
                        .HasColumnName("23_InH");

                    b.Property<int?>("_23InM")
                        .HasColumnType("int")
                        .HasColumnName("23_InM");

                    b.Property<int?>("_23OutH")
                        .HasColumnType("int")
                        .HasColumnName("23_OutH");

                    b.Property<int?>("_23OutM")
                        .HasColumnType("int")
                        .HasColumnName("23_OutM");

                    b.Property<int?>("_23Sth")
                        .HasColumnType("int")
                        .HasColumnName("23_STH");

                    b.Property<int?>("_23Stm")
                        .HasColumnType("int")
                        .HasColumnName("23_STM");

                    b.Property<int?>("_24InH")
                        .HasColumnType("int")
                        .HasColumnName("24_InH");

                    b.Property<int?>("_24InM")
                        .HasColumnType("int")
                        .HasColumnName("24_InM");

                    b.Property<int?>("_24OutH")
                        .HasColumnType("int")
                        .HasColumnName("24_OutH");

                    b.Property<int?>("_24OutM")
                        .HasColumnType("int")
                        .HasColumnName("24_OutM");

                    b.Property<int?>("_24Sth")
                        .HasColumnType("int")
                        .HasColumnName("24_STH");

                    b.Property<int?>("_24Stm")
                        .HasColumnType("int")
                        .HasColumnName("24_STM");

                    b.Property<int?>("_25InH")
                        .HasColumnType("int")
                        .HasColumnName("25_InH");

                    b.Property<int?>("_25InM")
                        .HasColumnType("int")
                        .HasColumnName("25_InM");

                    b.Property<int?>("_25OutH")
                        .HasColumnType("int")
                        .HasColumnName("25_OutH");

                    b.Property<int?>("_25OutM")
                        .HasColumnType("int")
                        .HasColumnName("25_OutM");

                    b.Property<int?>("_25Sth")
                        .HasColumnType("int")
                        .HasColumnName("25_STH");

                    b.Property<int?>("_25Stm")
                        .HasColumnType("int")
                        .HasColumnName("25_STM");

                    b.Property<int?>("_26InH")
                        .HasColumnType("int")
                        .HasColumnName("26_InH");

                    b.Property<int?>("_26InM")
                        .HasColumnType("int")
                        .HasColumnName("26_InM");

                    b.Property<int?>("_26OutH")
                        .HasColumnType("int")
                        .HasColumnName("26_OutH");

                    b.Property<int?>("_26OutM")
                        .HasColumnType("int")
                        .HasColumnName("26_OutM");

                    b.Property<int?>("_26Sth")
                        .HasColumnType("int")
                        .HasColumnName("26_STH");

                    b.Property<int?>("_26Stm")
                        .HasColumnType("int")
                        .HasColumnName("26_STM");

                    b.Property<int?>("_27InH")
                        .HasColumnType("int")
                        .HasColumnName("27_InH");

                    b.Property<int?>("_27InM")
                        .HasColumnType("int")
                        .HasColumnName("27_InM");

                    b.Property<int?>("_27OutH")
                        .HasColumnType("int")
                        .HasColumnName("27_OutH");

                    b.Property<int?>("_27OutM")
                        .HasColumnType("int")
                        .HasColumnName("27_OutM");

                    b.Property<int?>("_27Sth")
                        .HasColumnType("int")
                        .HasColumnName("27_STH");

                    b.Property<int?>("_27Stm")
                        .HasColumnType("int")
                        .HasColumnName("27_STM");

                    b.Property<int?>("_28InH")
                        .HasColumnType("int")
                        .HasColumnName("28_InH");

                    b.Property<int?>("_28InM")
                        .HasColumnType("int")
                        .HasColumnName("28_InM");

                    b.Property<int?>("_28OutH")
                        .HasColumnType("int")
                        .HasColumnName("28_OutH");

                    b.Property<int?>("_28OutM")
                        .HasColumnType("int")
                        .HasColumnName("28_OutM");

                    b.Property<int?>("_28Sth")
                        .HasColumnType("int")
                        .HasColumnName("28_STH");

                    b.Property<int?>("_28Stm")
                        .HasColumnType("int")
                        .HasColumnName("28_STM");

                    b.Property<int?>("_29InH")
                        .HasColumnType("int")
                        .HasColumnName("29_InH");

                    b.Property<int?>("_29InM")
                        .HasColumnType("int")
                        .HasColumnName("29_InM");

                    b.Property<int?>("_29OutH")
                        .HasColumnType("int")
                        .HasColumnName("29_OutH");

                    b.Property<int?>("_29OutM")
                        .HasColumnType("int")
                        .HasColumnName("29_OutM");

                    b.Property<int?>("_29Sth")
                        .HasColumnType("int")
                        .HasColumnName("29_STH");

                    b.Property<int?>("_29Stm")
                        .HasColumnType("int")
                        .HasColumnName("29_STM");

                    b.Property<int?>("_2InH")
                        .HasColumnType("int")
                        .HasColumnName("2_InH");

                    b.Property<int?>("_2InM")
                        .HasColumnType("int")
                        .HasColumnName("2_InM");

                    b.Property<int?>("_2OutH")
                        .HasColumnType("int")
                        .HasColumnName("2_OutH");

                    b.Property<int?>("_2OutM")
                        .HasColumnType("int")
                        .HasColumnName("2_OutM");

                    b.Property<int?>("_2Sth")
                        .HasColumnType("int")
                        .HasColumnName("2_STH");

                    b.Property<int?>("_2Stm")
                        .HasColumnType("int")
                        .HasColumnName("2_STM");

                    b.Property<int?>("_30InH")
                        .HasColumnType("int")
                        .HasColumnName("30_InH");

                    b.Property<int?>("_30InM")
                        .HasColumnType("int")
                        .HasColumnName("30_InM");

                    b.Property<int?>("_30OutH")
                        .HasColumnType("int")
                        .HasColumnName("30_OutH");

                    b.Property<int?>("_30OutM")
                        .HasColumnType("int")
                        .HasColumnName("30_OutM");

                    b.Property<int?>("_30Sth")
                        .HasColumnType("int")
                        .HasColumnName("30_STH");

                    b.Property<int?>("_30Stm")
                        .HasColumnType("int")
                        .HasColumnName("30_STM");

                    b.Property<int?>("_31InH")
                        .HasColumnType("int")
                        .HasColumnName("31_InH");

                    b.Property<int?>("_31InM")
                        .HasColumnType("int")
                        .HasColumnName("31_InM");

                    b.Property<int?>("_31OutH")
                        .HasColumnType("int")
                        .HasColumnName("31_OutH");

                    b.Property<int?>("_31OutM")
                        .HasColumnType("int")
                        .HasColumnName("31_OutM");

                    b.Property<int?>("_31Sth")
                        .HasColumnType("int")
                        .HasColumnName("31_STH");

                    b.Property<int?>("_31Stm")
                        .HasColumnType("int")
                        .HasColumnName("31_STM");

                    b.Property<int?>("_3InH")
                        .HasColumnType("int")
                        .HasColumnName("3_InH");

                    b.Property<int?>("_3InM")
                        .HasColumnType("int")
                        .HasColumnName("3_InM");

                    b.Property<int?>("_3OutH")
                        .HasColumnType("int")
                        .HasColumnName("3_OutH");

                    b.Property<int?>("_3OutM")
                        .HasColumnType("int")
                        .HasColumnName("3_OutM");

                    b.Property<int?>("_3Sth")
                        .HasColumnType("int")
                        .HasColumnName("3_STH");

                    b.Property<int?>("_3Stm")
                        .HasColumnType("int")
                        .HasColumnName("3_STM");

                    b.Property<int?>("_4InH")
                        .HasColumnType("int")
                        .HasColumnName("4_InH");

                    b.Property<int?>("_4InM")
                        .HasColumnType("int")
                        .HasColumnName("4_InM");

                    b.Property<int?>("_4OutH")
                        .HasColumnType("int")
                        .HasColumnName("4_OutH");

                    b.Property<int?>("_4OutM")
                        .HasColumnType("int")
                        .HasColumnName("4_OutM");

                    b.Property<int?>("_4Sth")
                        .HasColumnType("int")
                        .HasColumnName("4_STH");

                    b.Property<int?>("_4Stm")
                        .HasColumnType("int")
                        .HasColumnName("4_STM");

                    b.Property<int?>("_5InH")
                        .HasColumnType("int")
                        .HasColumnName("5_InH");

                    b.Property<int?>("_5InM")
                        .HasColumnType("int")
                        .HasColumnName("5_InM");

                    b.Property<int?>("_5OutH")
                        .HasColumnType("int")
                        .HasColumnName("5_OutH");

                    b.Property<int?>("_5OutM")
                        .HasColumnType("int")
                        .HasColumnName("5_OutM");

                    b.Property<int?>("_5Sth")
                        .HasColumnType("int")
                        .HasColumnName("5_STH");

                    b.Property<int?>("_5Stm")
                        .HasColumnType("int")
                        .HasColumnName("5_STM");

                    b.Property<int?>("_6InH")
                        .HasColumnType("int")
                        .HasColumnName("6_InH");

                    b.Property<int?>("_6InM")
                        .HasColumnType("int")
                        .HasColumnName("6_InM");

                    b.Property<int?>("_6OutH")
                        .HasColumnType("int")
                        .HasColumnName("6_OutH");

                    b.Property<int?>("_6OutM")
                        .HasColumnType("int")
                        .HasColumnName("6_OutM");

                    b.Property<int?>("_6Sth")
                        .HasColumnType("int")
                        .HasColumnName("6_STH");

                    b.Property<int?>("_6Stm")
                        .HasColumnType("int")
                        .HasColumnName("6_STM");

                    b.Property<int?>("_7InH")
                        .HasColumnType("int")
                        .HasColumnName("7_InH");

                    b.Property<int?>("_7InM")
                        .HasColumnType("int")
                        .HasColumnName("7_InM");

                    b.Property<int?>("_7OutH")
                        .HasColumnType("int")
                        .HasColumnName("7_OutH");

                    b.Property<int?>("_7OutM")
                        .HasColumnType("int")
                        .HasColumnName("7_OutM");

                    b.Property<int?>("_7Sth")
                        .HasColumnType("int")
                        .HasColumnName("7_STH");

                    b.Property<int?>("_7Stm")
                        .HasColumnType("int")
                        .HasColumnName("7_STM");

                    b.Property<int?>("_8InH")
                        .HasColumnType("int")
                        .HasColumnName("8_InH");

                    b.Property<int?>("_8InM")
                        .HasColumnType("int")
                        .HasColumnName("8_InM");

                    b.Property<int?>("_8OutH")
                        .HasColumnType("int")
                        .HasColumnName("8_OutH");

                    b.Property<int?>("_8OutM")
                        .HasColumnType("int")
                        .HasColumnName("8_OutM");

                    b.Property<int?>("_8Sth")
                        .HasColumnType("int")
                        .HasColumnName("8_STH");

                    b.Property<int?>("_8Stm")
                        .HasColumnType("int")
                        .HasColumnName("8_STM");

                    b.Property<int?>("_9InH")
                        .HasColumnType("int")
                        .HasColumnName("9_InH");

                    b.Property<int?>("_9InM")
                        .HasColumnType("int")
                        .HasColumnName("9_InM");

                    b.Property<int?>("_9OutH")
                        .HasColumnType("int")
                        .HasColumnName("9_OutH");

                    b.Property<int?>("_9OutM")
                        .HasColumnType("int")
                        .HasColumnName("9_OutM");

                    b.Property<int?>("_9Sth")
                        .HasColumnType("int")
                        .HasColumnName("9_STH");

                    b.Property<int?>("_9Stm")
                        .HasColumnType("int")
                        .HasColumnName("9_STM");

                    b.ToTable((string)null);

                    b.ToView("v_v_v_tblAttendanceRecord", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VVatTaxIncomeTax", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<double?>("Bonus")
                        .HasColumnType("float");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("ContrBenevolentFundAndGroupInsurPremium")
                        .HasColumnType("float");

                    b.Property<double?>("ContrDepositPensionScheme")
                        .HasColumnType("float");

                    b.Property<double?>("ContrPfwhichPfact1925Applies")
                        .HasColumnType("float")
                        .HasColumnName("ContrPFWhichPFAct1925Applies");

                    b.Property<double?>("ContrSuperAnnuationFund")
                        .HasColumnType("float");

                    b.Property<double?>("ContrZakatFund")
                        .HasColumnType("float");

                    b.Property<double?>("Conveyance")
                        .HasColumnType("float");

                    b.Property<double?>("ConveyanceTaxFree")
                        .HasColumnType("float");

                    b.Property<string>("DptId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DsgId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DsgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("ElAmount")
                        .HasColumnType("float")
                        .HasColumnName("EL_Amount");

                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("EmpEmprContribution")
                        .HasColumnType("float");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("GenerateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("HouseRentTaxFree")
                        .HasColumnType("float");

                    b.Property<double?>("InvstInApprDebentureOrDebentureStockStockOrShares")
                        .HasColumnType("float")
                        .HasColumnName("InvstInApprDebentureOrDebentureStock_StockOrShares");

                    b.Property<double?>("InvstInApprSavingsCertificate")
                        .HasColumnType("float");

                    b.Property<string>("InvstYear")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<double?>("LifeInsurPremium")
                        .HasColumnType("float");

                    b.Property<double?>("Madical")
                        .HasColumnType("float");

                    b.Property<double?>("MadicalTaxFree")
                        .HasColumnType("float");

                    b.Property<double?>("MaxInvestmentAmount")
                        .HasColumnType("float");

                    b.Property<double?>("NetPayableTax")
                        .HasColumnType("float");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<double?>("Others")
                        .HasColumnType("float");

                    b.Property<double?>("OthersAllowance")
                        .HasColumnType("float");

                    b.Property<double?>("OthersIncome")
                        .HasColumnType("float");

                    b.Property<int>("PaidTax")
                        .HasColumnType("int");

                    b.Property<int>("PayableTax")
                        .HasColumnType("int");

                    b.Property<double?>("PerMonthTax")
                        .HasColumnType("float");

                    b.Property<double?>("PfAmount")
                        .HasColumnType("float")
                        .HasColumnName("PF_Amount");

                    b.Property<double?>("PresentSalary")
                        .HasColumnType("float");

                    b.Property<double?>("Rebatable")
                        .HasColumnType("float");

                    b.Property<double?>("RebatableInvestment")
                        .HasColumnType("float");

                    b.Property<int>("TaxId")
                        .HasColumnType("int");

                    b.Property<string>("TaxYears")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Tin")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<double?>("TotalInvestmentAmount")
                        .HasColumnType("float");

                    b.Property<double?>("TotalTax")
                        .HasColumnType("float");

                    b.Property<double?>("TotalTaxableIncome")
                        .HasColumnType("float")
                        .HasColumnName("Total_Taxable_Income");

                    b.Property<string>("Type")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_VatTax_IncomeTax", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VVatTaxRate", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("FromTaka")
                        .HasColumnType("int");

                    b.Property<double?>("IncomeTaxRate")
                        .HasColumnType("float");

                    b.Property<int?>("RateOrder")
                        .HasColumnType("int");

                    b.Property<int>("Rsn")
                        .HasColumnType("int")
                        .HasColumnName("RSN");

                    b.Property<string>("SlabName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("Taxpayer")
                        .HasColumnType("smallint");

                    b.Property<int?>("ToTaka")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_VatTax_Rate", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VVatTaxRebatableRate", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("FromTaka")
                        .HasColumnType("int");

                    b.Property<double?>("IncomeTaxRate")
                        .HasColumnType("float");

                    b.Property<int?>("RateOrder")
                        .HasColumnType("int");

                    b.Property<int>("Rsn")
                        .HasColumnType("int")
                        .HasColumnName("RSN");

                    b.Property<string>("SlabName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ToTaka")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_VatTax_Rebatable_Rate", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VVatTaxYear", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<DateOnly?>("FromMonth")
                        .HasColumnType("date");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("TaxId")
                        .HasColumnType("int");

                    b.Property<string>("TaxYears")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<DateOnly?>("ToMonth")
                        .HasColumnType("date");

                    b.Property<string>("Type")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("v_VatTax_Years", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxEmpInvestment", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InvstYear")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<double?>("ContrBenevolentFundAndGroupInsurPremium")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("ContrDepositPensionScheme")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("ContrPfwhichPfact1925Applies")
                        .HasColumnType("float")
                        .HasColumnName("ContrPFWhichPFAct1925Applies");

                    b.Property<double?>("ContrSuperAnnuationFund")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("ContrZakatFund")
                        .HasColumnType("float");

                    b.Property<double?>("InvstInApprDebentureOrDebentureStockStockOrShares")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("InvstInApprDebentureOrDebentureStock_StockOrShares");

                    b.Property<double?>("InvstInApprSavingsCertificate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("LifeInsurPremium")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("Others")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.HasKey("EmpId", "InvstYear");

                    b.ToTable("VatTax_EmpInvestment", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxGenerateType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.HasKey("Id");

                    b.ToTable("VatTax_GenerateType", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxIncomeTax", b =>
                {
                    b.Property<int>("TaxId")
                        .HasColumnType("int");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<double?>("Bonus")
                        .HasColumnType("float");

                    b.Property<string>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValueSql("((1))");

                    b.Property<double?>("Conveyance")
                        .HasColumnType("float");

                    b.Property<double?>("ConveyanceTaxFree")
                        .HasColumnType("float");

                    b.Property<double?>("ElAmount")
                        .HasColumnType("float")
                        .HasColumnName("EL_Amount");

                    b.Property<double?>("EmpEmprContribution")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GenerateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("HouseRentTaxFree")
                        .HasColumnType("float");

                    b.Property<double?>("Madical")
                        .HasColumnType("float");

                    b.Property<double?>("MadicalTaxFree")
                        .HasColumnType("float");

                    b.Property<double?>("MaxInvestmentAmount")
                        .HasColumnType("float");

                    b.Property<double?>("NetPayableTax")
                        .HasColumnType("float");

                    b.Property<double?>("OthersAllowance")
                        .HasColumnType("float");

                    b.Property<double?>("OthersIncome")
                        .HasColumnType("float");

                    b.Property<double?>("PerMonthTax")
                        .HasColumnType("float");

                    b.Property<double?>("PfAmount")
                        .HasColumnType("float")
                        .HasColumnName("PF_Amount");

                    b.Property<double?>("PresentSalary")
                        .HasColumnType("float");

                    b.Property<double?>("Rebatable")
                        .HasColumnType("float");

                    b.Property<double?>("RebatableInvestment")
                        .HasColumnType("float");

                    b.Property<double?>("TotalInvestmentAmount")
                        .HasColumnType("float");

                    b.Property<double?>("TotalTax")
                        .HasColumnType("float");

                    b.Property<double?>("TotalTaxableIncome")
                        .HasColumnType("float")
                        .HasColumnName("Total_Taxable_Income");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TaxId", "EmpId");

                    b.ToTable("VatTax_IncomeTax", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxIncomeTaxDetailsLog", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("Month")
                        .HasColumnType("date");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit")
                        .HasColumnName("isPaid");

                    b.Property<int>("Sl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sl"));

                    b.Property<double>("TaxAmount")
                        .HasColumnType("float");

                    b.Property<string>("TaxYears")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.HasKey("EmpId", "Month");

                    b.ToTable("VatTax_IncomeTaxDetailsLog", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxMinimumTax", b =>
                {
                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("Id")
                        .HasColumnType("smallint")
                        .HasColumnName("ID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MinimumTax")
                        .HasColumnType("int");

                    b.ToTable("VatTax_MinimumTax", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxRate", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("FromTaka")
                        .HasColumnType("int");

                    b.Property<double?>("IncomeTaxRate")
                        .HasColumnType("float");

                    b.Property<int?>("RateOrder")
                        .HasColumnType("int");

                    b.Property<int>("Rsn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RSN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rsn"));

                    b.Property<string>("SlabName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("Taxpayer")
                        .HasColumnType("smallint");

                    b.Property<int?>("ToTaka")
                        .HasColumnType("int");

                    b.ToTable("VatTax_Rate", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxRebatableRate", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("FromTaka")
                        .HasColumnType("int");

                    b.Property<double?>("IncomeTaxRate")
                        .HasColumnType("float");

                    b.Property<int?>("RateOrder")
                        .HasColumnType("int");

                    b.Property<int>("Rsn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RSN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rsn"));

                    b.Property<string>("SlabName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ToTaka")
                        .HasColumnType("int");

                    b.ToTable("VatTax_Rebatable_Rate", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxRebateCalculation", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<double?>("RebatableAmount")
                        .HasColumnType("float");

                    b.Property<string>("SlabName")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.HasIndex("TaxId", "EmpId");

                    b.ToTable("VatTax_RebateCalculation", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxTaxCalculation", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("SlabName")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<double?>("TaxableAmount")
                        .HasColumnType("float");

                    b.HasIndex("TaxId", "EmpId");

                    b.ToTable("VatTax_TaxCalculation", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxTaxFreeAllowance", b =>
                {
                    b.Property<double?>("ConvenceAllownce")
                        .HasColumnType("float");

                    b.Property<double?>("HouseRent")
                        .HasColumnType("float");

                    b.Property<double?>("MedicalAllownce")
                        .HasColumnType("float");

                    b.Property<int>("Tfsn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TFSN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tfsn"));

                    b.ToTable("VatTax_TaxFreeAllowance", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxYear", b =>
                {
                    b.Property<int>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaxId"));

                    b.Property<string>("CompanyId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<DateOnly?>("FromMonth")
                        .HasColumnType("date");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("TaxYears")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<DateOnly?>("ToMonth")
                        .HasColumnType("date");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TaxId");

                    b.ToTable("VatTax_Years", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.View1", b =>
                {
                    b.Property<string>("EmpCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("Female")
                        .HasColumnType("smallint");

                    b.Property<short?>("Male")
                        .HasColumnType("smallint");

                    b.ToTable((string)null);

                    b.ToView("View_1", (string)null);
                });

            modelBuilder.Entity("Hrms_api.Data.AttBreakTimeWithShift", b =>
                {
                    b.HasOne("Hrms_api.Data.AttBreakTime", "Brk")
                        .WithMany()
                        .HasForeignKey("BrkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_AttBreakTimeWithShift_AttBreakTime");

                    b.Navigation("Brk");
                });

            modelBuilder.Entity("Hrms_api.Data.AttendanceWeekendInfo", b =>
                {
                    b.HasOne("Hrms_api.Data.HrdCompanyInfo", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Attendance_WeekendInfo_HRD_CompanyInfo");

                    b.HasOne("Hrms_api.Data.TblMonthSetup", "Month")
                        .WithMany()
                        .HasForeignKey("MonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Attendance_WeekendInfo_tblMonthSetup");

                    b.Navigation("Company");

                    b.Navigation("Month");
                });

            modelBuilder.Entity("Hrms_api.Data.AttendanceWeekendInfo1", b =>
                {
                    b.HasOne("Hrms_api.Data.HrdCompanyInfo", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Attendance_WeekendInfo1_HRD_CompanyInfo");

                    b.HasOne("Hrms_api.Data.TblMonthSetup1", "Month")
                        .WithMany()
                        .HasForeignKey("MonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Attendance_WeekendInfo1_tblMonthSetup1");

                    b.Navigation("Company");

                    b.Navigation("Month");
                });

            modelBuilder.Entity("Hrms_api.Data.EarnleaveReserved", b =>
                {
                    b.HasOne("Hrms_api.Data.PayrollEarnLeavePaymentSheet", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Earnleave_Reserved_Payroll_EarnLeavePaymentSheet");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Hrms_api.Data.EarnleaveReserved1", b =>
                {
                    b.HasOne("Hrms_api.Data.PayrollEarnLeavePaymentSheet1", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Earnleave_Reserved1_Payroll_EarnLeavePaymentSheet1");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Hrms_api.Data.HrdDesignation", b =>
                {
                    b.HasOne("Hrms_api.Data.HrdDepartment", "Dpt")
                        .WithMany("HrdDesignations")
                        .HasForeignKey("DptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_HRD_Designation_HRD_Department");

                    b.Navigation("Dpt");
                });

            modelBuilder.Entity("Hrms_api.Data.HrdthanaInfo", b =>
                {
                    b.HasOne("Hrms_api.Data.HrdDistrict", "Dst")
                        .WithMany("HrdthanaInfos")
                        .HasForeignKey("DstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HRDThanaInfo_HRDThanaInfo");

                    b.Navigation("Dst");
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveLeaveApplication", b =>
                {
                    b.HasOne("Hrms_api.Data.HrdEmployeeType", "EmpType")
                        .WithMany("LeaveLeaveApplications")
                        .HasForeignKey("EmpTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Leave_LeaveApplication_HRD_EmployeeType");

                    b.HasOne("Hrms_api.Data.TblLeaveConfig", "Leave")
                        .WithMany("LeaveLeaveApplications")
                        .HasForeignKey("LeaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Leave_LeaveApplication_tblLeaveConfig");

                    b.Navigation("EmpType");

                    b.Navigation("Leave");
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveLeaveApplicationDetail", b =>
                {
                    b.HasOne("Hrms_api.Data.LeaveLeaveApplication", "LacodeNavigation")
                        .WithMany()
                        .HasForeignKey("Lacode")
                        .HasPrincipalKey("Lacode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Leave_LeaveApplicationDetails_Leave_LeaveApplication");

                    b.Navigation("LacodeNavigation");
                });

            modelBuilder.Entity("Hrms_api.Data.LeaveMaterintyVoucherDetail", b =>
                {
                    b.HasOne("Hrms_api.Data.LeaveMaterintyVoucher", "MlvoucherNoNavigation")
                        .WithMany()
                        .HasForeignKey("MlvoucherNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Leave_MaterintyVoucher_Details_Leave_MaterintyVoucher");

                    b.Navigation("MlvoucherNoNavigation");
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollAdvanceDetail", b =>
                {
                    b.HasOne("Hrms_api.Data.PayrollAdvanceInfo", "Advance")
                        .WithMany()
                        .HasForeignKey("AdvanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Payroll_AdvanceDetails_Payroll_AdvanceInfo");

                    b.Navigation("Advance");
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollAdvanceInfo", b =>
                {
                    b.HasOne("Hrms_api.Data.HrdCompanyInfo", "Company")
                        .WithMany("PayrollAdvanceInfos")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Payroll_AdvanceInfo_HRD_CompanyInfo");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollAdvanceSetting", b =>
                {
                    b.HasOne("Hrms_api.Data.PayrollAdvanceInfo", "Advance")
                        .WithMany()
                        .HasForeignKey("AdvanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Payroll_AdvanceSetting_Payroll_AdvanceInfo");

                    b.Navigation("Advance");
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollBonusMonthSetup", b =>
                {
                    b.HasOne("Hrms_api.Data.PayrollBonusSetup", "BidNavigation")
                        .WithMany()
                        .HasForeignKey("Bid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Payroll_BonusMonthSetup_Payroll_BonusSetup");

                    b.Navigation("BidNavigation");
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollBonusMonthSetup1", b =>
                {
                    b.HasOne("Hrms_api.Data.PayrollBonusSetup1", "BidNavigation")
                        .WithMany()
                        .HasForeignKey("Bid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Payroll_BonusMonthSetup1_Payroll_BonusSetup");

                    b.Navigation("BidNavigation");
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollBonusSetup", b =>
                {
                    b.HasOne("Hrms_api.Data.HrdCompanyInfo", "Company")
                        .WithMany("PayrollBonusSetups")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Payroll_BonusSetup_HRD_CompanyInfo");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollBonusSetup1", b =>
                {
                    b.HasOne("Hrms_api.Data.HrdCompanyInfo", "Company")
                        .WithMany("PayrollBonusSetup1s")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Payroll_BonusSetup1_HRD_CompanyInfo");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollLoanDetail", b =>
                {
                    b.HasOne("Hrms_api.Data.PayrollLoanInfo", "Loan")
                        .WithMany("PayrollLoanDetails")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Payroll_LoanDetails_Payroll_LoanInfo");

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollYearlyBonusSheet", b =>
                {
                    b.HasOne("Hrms_api.Data.PayrollBonusSetup", "BidNavigation")
                        .WithMany()
                        .HasForeignKey("Bid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Payroll_YearlyBonusSheet_Payroll_BonusSetup");

                    b.Navigation("BidNavigation");
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollYearlyBonusSheet1", b =>
                {
                    b.HasOne("Hrms_api.Data.PayrollBonusSetup1", "BidNavigation")
                        .WithMany()
                        .HasForeignKey("Bid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Payroll_YearlyBonusSheet1_Payroll_BonusSetup");

                    b.Navigation("BidNavigation");
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmergencyContact", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithOne()
                        .HasForeignKey("Hrms_api.Data.PersonnelEmergencyContact", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Personnel_EmergencyContact_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpAddress", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithOne("PersonnelEmpAddress")
                        .HasForeignKey("Hrms_api.Data.PersonnelEmpAddress", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Personnel_EmpAddress_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpCurrentStatus", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Personnel_EmpCurrentStatus_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpCurrentStatus1", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Personnel_EmpCurrentStatus1_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpEducation", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Personnel_EmpEducation_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpExperience", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Personnel_EmpExperience_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpPersonnal", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithOne("PersonnelEmpPersonnal")
                        .HasForeignKey("Hrms_api.Data.PersonnelEmpPersonnal", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Personnel_EmpPersonnal_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmpPunismentInfo", b =>
                {
                    b.HasOne("Hrms_api.Data.HrdPunishmentType", "Pt")
                        .WithMany("PersonnelEmpPunismentInfos")
                        .HasForeignKey("PtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Personnel_EmpPunismentInfo_HRD_PunishmentType");

                    b.Navigation("Pt");
                });

            modelBuilder.Entity("Hrms_api.Data.PfCompanyRelation", b =>
                {
                    b.HasOne("Hrms_api.Data.PfCompanyInfo", "Pfcompany")
                        .WithMany("PfCompanyRelations")
                        .HasForeignKey("PfcompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PF_CompanyRelation_PF_CompanyRelation");

                    b.Navigation("Pfcompany");
                });

            modelBuilder.Entity("Hrms_api.Data.PfExpense", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithMany("PfExpenses")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Table_1_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.PfFdrInterest", b =>
                {
                    b.HasOne("Hrms_api.Data.PfFdr", "Fdr")
                        .WithMany()
                        .HasForeignKey("FdrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_PF_FDR_Interest_PF_FDR");

                    b.Navigation("Fdr");
                });

            modelBuilder.Entity("Hrms_api.Data.PfWithdraw", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithOne("PfWithdraw")
                        .HasForeignKey("Hrms_api.Data.PfWithdraw", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PF_Withdraw_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.ShiftTransferDetailsMissingLog", b =>
                {
                    b.HasOne("Hrms_api.Data.ShiftTransferInfo", "St")
                        .WithMany("ShiftTransferDetailsMissingLogs")
                        .HasForeignKey("Stid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ShiftTransferDetailsMissingLog_ShiftTransferDetailsMissingLog");

                    b.Navigation("St");
                });

            modelBuilder.Entity("Hrms_api.Data.ShiftTransferInfoDetail", b =>
                {
                    b.HasOne("Hrms_api.Data.ShiftTransferInfo", "St")
                        .WithMany()
                        .HasForeignKey("Stid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ShiftTransferDetails_ShiftTransferInfo");

                    b.Navigation("St");
                });

            modelBuilder.Entity("Hrms_api.Data.TblAttendanceRecord", b =>
                {
                    b.HasOne("Hrms_api.Data.HrdEmployeeType", "EmpType")
                        .WithMany("TblAttendanceRecords")
                        .HasForeignKey("EmpTypeId")
                        .HasConstraintName("FK_tblAttendanceRecord_HRD_EmployeeType");

                    b.Navigation("EmpType");
                });

            modelBuilder.Entity("Hrms_api.Data.TblEmpWiseWeekendinfo", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithMany("TblEmpWiseWeekendinfos")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblEmpWiseWeekendinfo_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.TblHolydayWeekentEmployeeWiseDetail", b =>
                {
                    b.HasOne("Hrms_api.Data.TblHolydayWeekentEmployeeWise", "HwcodeNavigation")
                        .WithMany()
                        .HasForeignKey("Hwcode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_HWCodeWithtblHolydayWeekentEmployeeWise");

                    b.Navigation("HwcodeNavigation");
                });

            modelBuilder.Entity("Hrms_api.Data.TblHolydayWork", b =>
                {
                    b.HasOne("Hrms_api.Data.HrdCompanyInfo", "Company")
                        .WithMany("TblHolydayWorks")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblHolydayWork_HRD_CompanyInfo");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Hrms_api.Data.TblHolydayWork1", b =>
                {
                    b.HasOne("Hrms_api.Data.HrdCompanyInfo", "Company")
                        .WithMany("TblHolydayWork1s")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblHolydayWork1_tblHolydayWork1");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Hrms_api.Data.TblLeaveAuthorityAccessControl", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_tblLeaveAuthorityAccessControl_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.TblLeaveConfig", b =>
                {
                    b.HasOne("Hrms_api.Data.HrdCompanyInfo", "Company")
                        .WithMany("TblLeaveConfigs")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_tblLeaveConfig_HRD_CompanyInfo");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Hrms_api.Data.TblOutDutyApprovalLog", b =>
                {
                    b.HasOne("Hrms_api.Data.TblOutDuty", "Od")
                        .WithMany()
                        .HasForeignKey("Odid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_tblOutDuty_ApprovalLog_tblOutDuty");

                    b.Navigation("Od");
                });

            modelBuilder.Entity("Hrms_api.Data.TblOutDutyAuthorityAccessControl", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_tblOutDutyAuthorityAccessControl_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.TblOutdutyDetail", b =>
                {
                    b.HasOne("Hrms_api.Data.TblOutDuty", "Od")
                        .WithMany("TblOutdutyDetails")
                        .HasForeignKey("Odid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_tblOutdutyDetails_tblOutdutyDetails");

                    b.Navigation("Od");
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxEmpInvestment", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithMany("VatTaxEmpInvestments")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VatTax_EmpInvestment_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxIncomeTax", b =>
                {
                    b.HasOne("Hrms_api.Data.VatTaxYear", "Tax")
                        .WithMany("VatTaxIncomeTaxes")
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VatTax_IncomeTax_VatTax_Years");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxIncomeTaxDetailsLog", b =>
                {
                    b.HasOne("Hrms_api.Data.PersonnelEmployeeInfo", "Emp")
                        .WithMany("VatTaxIncomeTaxDetailsLogs")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VatTax_IncomeTaxDetailsLog_Personnel_EmployeeInfo");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxRebateCalculation", b =>
                {
                    b.HasOne("Hrms_api.Data.VatTaxIncomeTax", "VatTaxIncomeTax")
                        .WithMany()
                        .HasForeignKey("TaxId", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_VatTax_RebateCalculation_VatTax_IncomeTax");

                    b.Navigation("VatTaxIncomeTax");
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxTaxCalculation", b =>
                {
                    b.HasOne("Hrms_api.Data.VatTaxIncomeTax", "VatTaxIncomeTax")
                        .WithMany()
                        .HasForeignKey("TaxId", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_VatTax_TaxCalculation_VatTax_IncomeTax");

                    b.Navigation("VatTaxIncomeTax");
                });

            modelBuilder.Entity("Hrms_api.Data.HrdCompanyInfo", b =>
                {
                    b.Navigation("PayrollAdvanceInfos");

                    b.Navigation("PayrollBonusSetup1s");

                    b.Navigation("PayrollBonusSetups");

                    b.Navigation("TblHolydayWork1s");

                    b.Navigation("TblHolydayWorks");

                    b.Navigation("TblLeaveConfigs");
                });

            modelBuilder.Entity("Hrms_api.Data.HrdDepartment", b =>
                {
                    b.Navigation("HrdDesignations");
                });

            modelBuilder.Entity("Hrms_api.Data.HrdDistrict", b =>
                {
                    b.Navigation("HrdthanaInfos");
                });

            modelBuilder.Entity("Hrms_api.Data.HrdEmployeeType", b =>
                {
                    b.Navigation("LeaveLeaveApplications");

                    b.Navigation("TblAttendanceRecords");
                });

            modelBuilder.Entity("Hrms_api.Data.HrdPunishmentType", b =>
                {
                    b.Navigation("PersonnelEmpPunismentInfos");
                });

            modelBuilder.Entity("Hrms_api.Data.PayrollLoanInfo", b =>
                {
                    b.Navigation("PayrollLoanDetails");
                });

            modelBuilder.Entity("Hrms_api.Data.PersonnelEmployeeInfo", b =>
                {
                    b.Navigation("PersonnelEmpAddress");

                    b.Navigation("PersonnelEmpPersonnal");

                    b.Navigation("PfExpenses");

                    b.Navigation("PfWithdraw");

                    b.Navigation("TblEmpWiseWeekendinfos");

                    b.Navigation("VatTaxEmpInvestments");

                    b.Navigation("VatTaxIncomeTaxDetailsLogs");
                });

            modelBuilder.Entity("Hrms_api.Data.PfCompanyInfo", b =>
                {
                    b.Navigation("PfCompanyRelations");
                });

            modelBuilder.Entity("Hrms_api.Data.ShiftTransferInfo", b =>
                {
                    b.Navigation("ShiftTransferDetailsMissingLogs");
                });

            modelBuilder.Entity("Hrms_api.Data.TblLeaveConfig", b =>
                {
                    b.Navigation("LeaveLeaveApplications");
                });

            modelBuilder.Entity("Hrms_api.Data.TblOutDuty", b =>
                {
                    b.Navigation("TblOutdutyDetails");
                });

            modelBuilder.Entity("Hrms_api.Data.VatTaxYear", b =>
                {
                    b.Navigation("VatTaxIncomeTaxes");
                });
#pragma warning restore 612, 618
        }
    }
}
